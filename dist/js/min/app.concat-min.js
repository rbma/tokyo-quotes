(function(e, t, n) {
    "use strict";
    function r(e) {
        return function() {
            var t = arguments[0], n, t = "[" + (e ? e + ":" : "") + t + "] http://errors.angularjs.org/1.2.26/" + (e ? e + "/" : "") + t;
            for (n = 1; n < arguments.length; n++) t = t + (1 == n ? "?" : "&") + "p" + (n - 1) + "=" + encodeURIComponent("function" == typeof arguments[n] ? arguments[n].toString().replace(/ \{[\s\S]*$/, "") : "undefined" == typeof arguments[n] ? "undefined" : "string" != typeof arguments[n] ? JSON.stringify(arguments[n]) : arguments[n]);
            return Error(t);
        };
    }
    function i(e) {
        if (null == e || w(e)) return !1;
        var t = e.length;
        return 1 === e.nodeType && t ? !0 : T(e) || ir(e) || 0 === t || "number" === typeof t && 0 < t && t - 1 in e;
    }
    function o(e, t, n) {
        var r;
        if (e) if (_(e)) for (r in e) "prototype" == r || ("length" == r || "name" == r || e.hasOwnProperty && !e.hasOwnProperty(r)) || t.call(n, e[r], r); else if (ir(e) || i(e)) for (r = 0; r < e.length; r++) t.call(n, e[r], r); else if (e.forEach && e.forEach !== o) e.forEach(t, n); else for (r in e) e.hasOwnProperty(r) && t.call(n, e[r], r);
        return e;
    }
    function a(e) {
        var t = [], n;
        for (n in e) e.hasOwnProperty(n) && t.push(n);
        return t.sort();
    }
    function s(e, t, n) {
        for (var r = a(e), i = 0; i < r.length; i++) t.call(n, e[r[i]], r[i]);
        return r;
    }
    function c(e) {
        return function(t, n) {
            e(n, t);
        };
    }
    function l() {
        for (var e = rr.length, t; e; ) {
            e--;
            t = rr[e].charCodeAt(0);
            if (57 == t) return rr[e] = "A", rr.join("");
            if (90 == t) rr[e] = "0"; else return rr[e] = String.fromCharCode(t + 1), rr.join("");
        }
        rr.unshift("0");
        return rr.join("");
    }
    function u(e, t) {
        t ? e.$$hashKey = t : delete e.$$hashKey;
    }
    function h(e) {
        var t = e.$$hashKey;
        o(arguments, function(t) {
            t !== e && o(t, function(t, n) {
                e[n] = t;
            });
        });
        u(e, t);
        return e;
    }
    function f(e) {
        return parseInt(e, 10);
    }
    function p(e, t) {
        return h(new (h(function() {}, {
            prototype: e
        }))(), t);
    }
    function d() {}
    function m(e) {
        return e;
    }
    function E(e) {
        return function() {
            return e;
        };
    }
    function v(e) {
        return "undefined" === typeof e;
    }
    function g(e) {
        return "undefined" !== typeof e;
    }
    function y(e) {
        return null != e && "object" === typeof e;
    }
    function T(e) {
        return "string" === typeof e;
    }
    function x(e) {
        return "number" === typeof e;
    }
    function R(e) {
        return "[object Date]" === Qn.call(e);
    }
    function _(e) {
        return "function" === typeof e;
    }
    function b(e) {
        return "[object RegExp]" === Qn.call(e);
    }
    function w(e) {
        return e && e.document && e.location && e.alert && e.setInterval;
    }
    function H(e) {
        return !(!e || !(e.nodeName || e.prop && e.attr && e.find));
    }
    function S(e, t, n) {
        var r = [];
        o(e, function(e, i, o) {
            r.push(t.call(n, e, i, o));
        });
        return r;
    }
    function M(e, t) {
        if (e.indexOf) return e.indexOf(t);
        for (var n = 0; n < e.length; n++) if (t === e[n]) return n;
        return -1;
    }
    function C(e, t) {
        var n = M(e, t);
        0 <= n && e.splice(n, 1);
        return t;
    }
    function A(e, t, n, r) {
        if (w(e) || e && e.$evalAsync && e.$watch) throw Jn("cpws");
        if (t) {
            if (e === t) throw Jn("cpi");
            n = n || [];
            r = r || [];
            if (y(e)) {
                var i = M(n, e);
                if (-1 !== i) return r[i];
                n.push(e);
                r.push(t);
            }
            if (ir(e)) for (var a = t.length = 0; a < e.length; a++) i = A(e[a], null, n, r), 
            y(e[a]) && (n.push(e[a]), r.push(i)), t.push(i); else {
                var s = t.$$hashKey;
                ir(t) ? t.length = 0 : o(t, function(e, n) {
                    delete t[n];
                });
                for (a in e) i = A(e[a], null, n, r), y(e[a]) && (n.push(e[a]), r.push(i)), t[a] = i;
                u(t, s);
            }
        } else if (t = e) ir(e) ? t = A(e, [], n, r) : R(e) ? t = new Date(e.getTime()) : b(e) ? (t = RegExp(e.source, e.toString().match(/[^\/]*$/)[0]), 
        t.lastIndex = e.lastIndex) : y(e) && (t = A(e, {}, n, r));
        return t;
    }
    function P(e, t) {
        if (ir(e)) {
            t = t || [];
            for (var n = 0; n < e.length; n++) t[n] = e[n];
        } else if (y(e)) for (n in t = t || {}, e) !Gn.call(e, n) || "$" === n.charAt(0) && "$" === n.charAt(1) || (t[n] = e[n]);
        return t || e;
    }
    function k(e, t) {
        if (e === t) return !0;
        if (null === e || null === t) return !1;
        if (e !== e && t !== t) return !0;
        var r = typeof e, i;
        if (r == typeof t && "object" == r) if (ir(e)) {
            if (!ir(t)) return !1;
            if ((r = e.length) == t.length) {
                for (i = 0; i < r; i++) if (!k(e[i], t[i])) return !1;
                return !0;
            }
        } else {
            if (R(e)) return R(t) ? isNaN(e.getTime()) && isNaN(t.getTime()) || e.getTime() === t.getTime() : !1;
            if (b(e) && b(t)) return e.toString() == t.toString();
            if (e && e.$evalAsync && e.$watch || t && t.$evalAsync && t.$watch || w(e) || w(t) || ir(t)) return !1;
            r = {};
            for (i in e) if ("$" !== i.charAt(0) && !_(e[i])) {
                if (!k(e[i], t[i])) return !1;
                r[i] = !0;
            }
            for (i in t) if (!r.hasOwnProperty(i) && "$" !== i.charAt(0) && t[i] !== n && !_(t[i])) return !1;
            return !0;
        }
        return !1;
    }
    function L(e, t) {
        var n = 2 < arguments.length ? Kn.call(arguments, 2) : [];
        return !_(t) || t instanceof RegExp ? t : n.length ? function() {
            return arguments.length ? t.apply(e, n.concat(Kn.call(arguments, 0))) : t.apply(e, n);
        } : function() {
            return arguments.length ? t.apply(e, arguments) : t.call(e);
        };
    }
    function F(e, r) {
        var i = r;
        "string" === typeof e && "$" === e.charAt(0) ? i = n : w(r) ? i = "$WINDOW" : r && t === r ? i = "$DOCUMENT" : r && (r.$evalAsync && r.$watch) && (i = "$SCOPE");
        return i;
    }
    function D(e, t) {
        return "undefined" === typeof e ? n : JSON.stringify(e, F, t ? "  " : null);
    }
    function U(e) {
        return T(e) ? JSON.parse(e) : e;
    }
    function V(e) {
        "function" === typeof e ? e = !0 : e && 0 !== e.length ? (e = In("" + e), e = !("f" == e || "0" == e || "false" == e || "no" == e || "n" == e || "[]" == e)) : e = !1;
        return e;
    }
    function O(e) {
        e = qn(e).clone();
        try {
            e.empty();
        } catch (t) {}
        var n = qn("<div>").append(e).html();
        try {
            return 3 === e[0].nodeType ? In(n) : n.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/, function(e, t) {
                return "<" + In(t);
            });
        } catch (r) {
            return In(n);
        }
    }
    function z(e) {
        try {
            return decodeURIComponent(e);
        } catch (t) {}
    }
    function B(e) {
        var t = {}, n, r;
        o((e || "").split("&"), function(e) {
            e && (n = e.replace(/\+/g, "%20").split("="), r = z(n[0]), g(r) && (e = g(n[1]) ? z(n[1]) : !0, 
            Gn.call(t, r) ? ir(t[r]) ? t[r].push(e) : t[r] = [ t[r], e ] : t[r] = e));
        });
        return t;
    }
    function j(e) {
        var t = [];
        o(e, function(e, n) {
            ir(e) ? o(e, function(e) {
                t.push(I(n, !0) + (!0 === e ? "" : "=" + I(e, !0)));
            }) : t.push(I(n, !0) + (!0 === e ? "" : "=" + I(e, !0)));
        });
        return t.length ? t.join("&") : "";
    }
    function N(e) {
        return I(e, !0).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+");
    }
    function I(e, t) {
        return encodeURIComponent(e).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, t ? "%20" : "+");
    }
    function G(e, n) {
        function r(e) {
            e && i.push(e);
        }
        var i = [ e ], a, s, c = [ "ng:app", "ng-app", "x-ng-app", "data-ng-app" ], l = /\sng[:\-]app(:\s*([\w\d_]+);?)?\s/;
        o(c, function(n) {
            c[n] = !0;
            r(t.getElementById(n));
            n = n.replace(":", "\\:");
            e.querySelectorAll && (o(e.querySelectorAll("." + n), r), o(e.querySelectorAll("." + n + "\\:"), r), 
            o(e.querySelectorAll("[" + n + "]"), r));
        });
        o(i, function(e) {
            if (!a) {
                var t = l.exec(" " + e.className + " ");
                t ? (a = e, s = (t[2] || "").replace(/\s+/g, ",")) : o(e.attributes, function(t) {
                    !a && c[t.name] && (a = e, s = t.value);
                });
            }
        });
        a && n(a, s ? [ s ] : []);
    }
    function W(n, r) {
        var i = function() {
            n = qn(n);
            if (n.injector()) {
                var e = n[0] === t ? "document" : O(n);
                throw Jn("btstrpd", e.replace(/</, "&lt;").replace(/>/, "&gt;"));
            }
            r = r || [];
            r.unshift([ "$provide", function(e) {
                e.value("$rootElement", n);
            } ]);
            r.unshift("ng");
            e = Rt(r);
            e.invoke([ "$rootScope", "$rootElement", "$compile", "$injector", "$animate", function(e, t, n, r, i) {
                e.$apply(function() {
                    t.data("$injector", r);
                    n(t)(e);
                });
            } ]);
            return e;
        }, a = /^NG_DEFER_BOOTSTRAP!/;
        if (e && !a.test(e.name)) return i();
        e.name = e.name.replace(a, "");
        er.resumeBootstrap = function(e) {
            o(e, function(e) {
                r.push(e);
            });
            i();
        };
    }
    function X(e, t) {
        t = t || "_";
        return e.replace(sr, function(e, n) {
            return (n ? t : "") + e.toLowerCase();
        });
    }
    function q(e, t, n) {
        if (!e) throw Jn("areq", t || "?", n || "required");
        return e;
    }
    function Y(e, t, n) {
        n && ir(e) && (e = e[e.length - 1]);
        q(_(e), t, "not a function, got " + (e && "object" === typeof e ? e.constructor.name || "Object" : typeof e));
        return e;
    }
    function K(e, t) {
        if ("hasOwnProperty" === e) throw Jn("badname", t);
    }
    function Z(e, t, n) {
        if (!t) return e;
        t = t.split(".");
        for (var r, i = e, o = t.length, a = 0; a < o; a++) r = t[a], e && (e = (i = e)[r]);
        return !n && _(e) ? L(i, e) : e;
    }
    function Q(e) {
        var t = e[0];
        e = e[e.length - 1];
        if (t === e) return qn(t);
        var n = [ t ];
        do {
            t = t.nextSibling;
            if (!t) break;
            n.push(t);
        } while (t !== e);
        return qn(n);
    }
    function J(e) {
        var t = r("$injector"), n = r("ng");
        e = e.angular || (e.angular = {});
        e.$$minErr = e.$$minErr || r;
        return e.module || (e.module = function() {
            var e = {};
            return function(r, i, o) {
                if ("hasOwnProperty" === r) throw n("badname", "module");
                i && e.hasOwnProperty(r) && (e[r] = null);
                return e[r] || (e[r] = function() {
                    function e(e, t, r) {
                        return function() {
                            n[r || "push"]([ e, t, arguments ]);
                            return c;
                        };
                    }
                    if (!i) throw t("nomod", r);
                    var n = [], a = [], s = e("$injector", "invoke"), c = {
                        _invokeQueue: n,
                        _runBlocks: a,
                        requires: i,
                        name: r,
                        provider: e("$provide", "provider"),
                        factory: e("$provide", "factory"),
                        service: e("$provide", "service"),
                        value: e("$provide", "value"),
                        constant: e("$provide", "constant", "unshift"),
                        animation: e("$animateProvider", "register"),
                        filter: e("$filterProvider", "register"),
                        controller: e("$controllerProvider", "register"),
                        directive: e("$compileProvider", "directive"),
                        config: s,
                        run: function(e) {
                            a.push(e);
                            return this;
                        }
                    };
                    o && s(o);
                    return c;
                }());
            };
        }());
    }
    function et(t) {
        h(t, {
            bootstrap: W,
            copy: A,
            extend: h,
            equals: k,
            element: qn,
            forEach: o,
            injector: Rt,
            noop: d,
            bind: L,
            toJson: D,
            fromJson: U,
            identity: m,
            isUndefined: v,
            isDefined: g,
            isString: T,
            isFunction: _,
            isObject: y,
            isNumber: x,
            isElement: H,
            isArray: ir,
            version: cr,
            isDate: R,
            lowercase: In,
            uppercase: Wn,
            callbacks: {
                counter: 0
            },
            $$minErr: r,
            $$csp: ar
        });
        tr = J(e);
        try {
            tr("ngLocale");
        } catch (n) {
            tr("ngLocale", []).provider("$locale", It);
        }
        tr("ng", [ "ngLocale" ], [ "$provide", function(e) {
            e.provider({
                $$sanitizeUri: mn
            });
            e.provider("$compile", Ct).directive({
                a: ii,
                input: mi,
                textarea: mi,
                form: ci,
                script: Zi,
                select: eo,
                style: no,
                option: to,
                ngBind: Si,
                ngBindHtml: Ci,
                ngBindTemplate: Mi,
                ngClass: Ai,
                ngClassEven: $i,
                ngClassOdd: Pi,
                ngCloak: ki,
                ngController: Li,
                ngForm: li,
                ngHide: Gi,
                ngIf: Ui,
                ngInclude: Vi,
                ngInit: zi,
                ngNonBindable: Bi,
                ngPluralize: ji,
                ngRepeat: Ni,
                ngShow: Ii,
                ngStyle: Wi,
                ngSwitch: Xi,
                ngSwitchWhen: qi,
                ngSwitchDefault: Yi,
                ngOptions: Ji,
                ngTransclude: Ki,
                ngModel: xi,
                ngList: bi,
                ngChange: Ri,
                required: _i,
                ngRequired: _i,
                ngValue: Hi
            }).directive({
                ngInclude: Oi
            }).directive(oi).directive(Fi);
            e.provider({
                $anchorScroll: _t,
                $animate: Ar,
                $browser: Ht,
                $cacheFactory: St,
                $controller: $t,
                $document: kt,
                $exceptionHandler: Lt,
                $filter: wn,
                $interpolate: jt,
                $interval: Nt,
                $http: Vt,
                $httpBackend: zt,
                $location: nn,
                $log: rn,
                $parse: un,
                $rootScope: dn,
                $q: hn,
                $sce: yn,
                $sceDelegate: gn,
                $sniffer: Tn,
                $templateCache: Mt,
                $timeout: xn,
                $window: bn,
                $$rAF: pn,
                $$asyncCallback: bt
            });
        } ]);
    }
    function tt(e) {
        return e.replace(pr, function(e, t, n, r) {
            return r ? n.toUpperCase() : n;
        }).replace(dr, "Moz$1");
    }
    function nt(e, t, n, r) {
        function i(e) {
            var i = n && e ? [ this.filter(e) ] : [ this ], a = t, s, c, l, u, h, f;
            if (!r || null != e) for (;i.length; ) for (s = i.shift(), c = 0, l = s.length; c < l; c++) for (u = qn(s[c]), 
            a ? u.triggerHandler("$destroy") : a = !a, h = 0, u = (f = u.children()).length; h < u; h++) i.push(Yn(f[h]));
            return o.apply(this, arguments);
        }
        var o = Yn.fn[e], o = o.$original || o;
        i.$original = o;
        Yn.fn[e] = i;
    }
    function rt(e) {
        if (e instanceof rt) return e;
        T(e) && (e = or(e));
        if (!(this instanceof rt)) {
            if (T(e) && "<" != e.charAt(0)) throw mr("nosel");
            return new rt(e);
        }
        if (T(e)) {
            var n = e;
            e = t;
            var r;
            if (r = Er.exec(n)) e = [ e.createElement(r[1]) ]; else {
                var i = e, o;
                e = i.createDocumentFragment();
                r = [];
                if (vr.test(n)) {
                    i = e.appendChild(i.createElement("div"));
                    o = (gr.exec(n) || [ "", "" ])[1].toLowerCase();
                    o = Tr[o] || Tr._default;
                    i.innerHTML = "<div>&#160;</div>" + o[1] + n.replace(yr, "<$1></$2>") + o[2];
                    i.removeChild(i.firstChild);
                    for (n = o[0]; n--; ) i = i.lastChild;
                    n = 0;
                    for (o = i.childNodes.length; n < o; ++n) r.push(i.childNodes[n]);
                    i = e.firstChild;
                    i.textContent = "";
                } else r.push(i.createTextNode(n));
                e.textContent = "";
                e.innerHTML = "";
                e = r;
            }
            pt(this, e);
            qn(t.createDocumentFragment()).append(this);
        } else pt(this, e);
    }
    function it(e) {
        return e.cloneNode(!0);
    }
    function ot(e) {
        st(e);
        var t = 0;
        for (e = e.childNodes || []; t < e.length; t++) ot(e[t]);
    }
    function at(e, t, n, r) {
        if (g(r)) throw mr("offargs");
        var i = ct(e, "events");
        ct(e, "handle") && (v(t) ? o(i, function(t, n) {
            fr(e, n, t);
            delete i[n];
        }) : o(t.split(" "), function(t) {
            v(n) ? (fr(e, t, i[t]), delete i[t]) : C(i[t] || [], n);
        }));
    }
    function st(e, t) {
        var r = e.ng339, i = lr[r];
        i && (t ? delete lr[r].data[t] : (i.handle && (i.events.$destroy && i.handle({}, "$destroy"), 
        at(e)), delete lr[r], e.ng339 = n));
    }
    function ct(e, t, n) {
        var r = e.ng339, r = lr[r || -1];
        if (g(n)) r || (e.ng339 = r = ++ur, r = lr[r] = {}), r[t] = n; else return r && r[t];
    }
    function lt(e, t, n) {
        var r = ct(e, "data"), i = g(n), o = !i && g(t), a = o && !y(t);
        r || a || ct(e, "data", r = {});
        if (i) r[t] = n; else if (o) {
            if (a) return r && r[t];
            h(r, t);
        } else return r;
    }
    function ut(e, t) {
        return e.getAttribute ? -1 < (" " + (e.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").indexOf(" " + t + " ") : !1;
    }
    function ht(e, t) {
        t && e.setAttribute && o(t.split(" "), function(t) {
            e.setAttribute("class", or((" " + (e.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").replace(" " + or(t) + " ", " ")));
        });
    }
    function ft(e, t) {
        if (t && e.setAttribute) {
            var n = (" " + (e.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ");
            o(t.split(" "), function(e) {
                e = or(e);
                -1 === n.indexOf(" " + e + " ") && (n += e + " ");
            });
            e.setAttribute("class", or(n));
        }
    }
    function pt(e, t) {
        if (t) {
            t = t.nodeName || !g(t.length) || w(t) ? [ t ] : t;
            for (var n = 0; n < t.length; n++) e.push(t[n]);
        }
    }
    function dt(e, t) {
        return mt(e, "$" + (t || "ngController") + "Controller");
    }
    function mt(e, t, r) {
        9 == e.nodeType && (e = e.documentElement);
        for (t = ir(t) ? t : [ t ]; e; ) {
            for (var i = 0, o = t.length; i < o; i++) if ((r = qn.data(e, t[i])) !== n) return r;
            e = e.parentNode || 11 === e.nodeType && e.host;
        }
    }
    function Et(e) {
        for (var t = 0, n = e.childNodes; t < n.length; t++) ot(n[t]);
        for (;e.firstChild; ) e.removeChild(e.firstChild);
    }
    function vt(e, t) {
        var n = Rr[t.toLowerCase()];
        return n && _r[e.nodeName] && n;
    }
    function gt(e, n) {
        var r = function(r, i) {
            r.preventDefault || (r.preventDefault = function() {
                r.returnValue = !1;
            });
            r.stopPropagation || (r.stopPropagation = function() {
                r.cancelBubble = !0;
            });
            r.target || (r.target = r.srcElement || t);
            if (v(r.defaultPrevented)) {
                var a = r.preventDefault;
                r.preventDefault = function() {
                    r.defaultPrevented = !0;
                    a.call(r);
                };
                r.defaultPrevented = !1;
            }
            r.isDefaultPrevented = function() {
                return r.defaultPrevented || !1 === r.returnValue;
            };
            var s = P(n[i || r.type] || []);
            o(s, function(t) {
                t.call(e, r);
            });
            8 >= Xn ? (r.preventDefault = null, r.stopPropagation = null, r.isDefaultPrevented = null) : (delete r.preventDefault, 
            delete r.stopPropagation, delete r.isDefaultPrevented);
        };
        r.elem = e;
        return r;
    }
    function yt(e, t) {
        var r = typeof e, i;
        "function" == r || "object" == r && null !== e ? "function" == typeof (i = e.$$hashKey) ? i = e.$$hashKey() : i === n && (i = e.$$hashKey = (t || l)()) : i = e;
        return r + ":" + i;
    }
    function Tt(e, t) {
        if (t) {
            var n = 0;
            this.nextUid = function() {
                return ++n;
            };
        }
        o(e, this.put, this);
    }
    function xt(e) {
        var t, n;
        "function" === typeof e ? (t = e.$inject) || (t = [], e.length && (n = e.toString().replace(Sr, ""), 
        n = n.match(br), o(n[1].split(wr), function(e) {
            e.replace(Hr, function(e, n, r) {
                t.push(r);
            });
        })), e.$inject = t) : ir(e) ? (n = e.length - 1, Y(e[n], "fn"), t = e.slice(0, n)) : Y(e, "fn", !0);
        return t;
    }
    function Rt(e) {
        function t(e) {
            return function(t, n) {
                if (y(t)) o(t, c(e)); else return e(t, n);
            };
        }
        function n(e, t) {
            K(e, "service");
            if (_(t) || ir(t)) t = p.instantiate(t);
            if (!t.$get) throw Mr("pget", e);
            return f[e + l] = t;
        }
        function r(e, t) {
            return n(e, {
                $get: t
            });
        }
        function i(e) {
            var t = [], n, r, a, s;
            o(e, function(e) {
                if (!h.get(e)) {
                    h.put(e, !0);
                    try {
                        if (T(e)) for (n = tr(e), t = t.concat(i(n.requires)).concat(n._runBlocks), r = n._invokeQueue, 
                        a = 0, s = r.length; a < s; a++) {
                            var o = r[a], c = p.get(o[0]);
                            c[o[1]].apply(c, o[2]);
                        } else _(e) ? t.push(p.invoke(e)) : ir(e) ? t.push(p.invoke(e)) : Y(e, "module");
                    } catch (l) {
                        throw ir(e) && (e = e[e.length - 1]), l.message && (l.stack && -1 == l.stack.indexOf(l.message)) && (l = l.message + "\n" + l.stack), 
                        Mr("modulerr", e, l.stack || l.message || l);
                    }
                }
            });
            return t;
        }
        function a(e, t) {
            function n(n) {
                if (e.hasOwnProperty(n)) {
                    if (e[n] === s) throw Mr("cdep", n + " <- " + u.join(" <- "));
                    return e[n];
                }
                try {
                    return u.unshift(n), e[n] = s, e[n] = t(n);
                } catch (r) {
                    throw e[n] === s && delete e[n], r;
                } finally {
                    u.shift();
                }
            }
            function r(e, t, r) {
                var i = [], o = xt(e), a, s, c;
                s = 0;
                for (a = o.length; s < a; s++) {
                    c = o[s];
                    if ("string" !== typeof c) throw Mr("itkn", c);
                    i.push(r && r.hasOwnProperty(c) ? r[c] : n(c));
                }
                ir(e) && (e = e[a]);
                return e.apply(t, i);
            }
            return {
                invoke: r,
                instantiate: function(e, t) {
                    var n = function() {}, i;
                    n.prototype = (ir(e) ? e[e.length - 1] : e).prototype;
                    n = new n();
                    i = r(e, n, t);
                    return y(i) || _(i) ? i : n;
                },
                get: n,
                annotate: xt,
                has: function(t) {
                    return f.hasOwnProperty(t + l) || e.hasOwnProperty(t);
                }
            };
        }
        var s = {}, l = "Provider", u = [], h = new Tt([], !0), f = {
            $provide: {
                provider: t(n),
                factory: t(r),
                service: t(function(e, t) {
                    return r(e, [ "$injector", function(e) {
                        return e.instantiate(t);
                    } ]);
                }),
                value: t(function(e, t) {
                    return r(e, E(t));
                }),
                constant: t(function(e, t) {
                    K(e, "constant");
                    f[e] = t;
                    m[e] = t;
                }),
                decorator: function(e, t) {
                    var n = p.get(e + l), r = n.$get;
                    n.$get = function() {
                        var e = v.invoke(r, n);
                        return v.invoke(t, null, {
                            $delegate: e
                        });
                    };
                }
            }
        }, p = f.$injector = a(f, function() {
            throw Mr("unpr", u.join(" <- "));
        }), m = {}, v = m.$injector = a(m, function(e) {
            e = p.get(e + l);
            return v.invoke(e.$get, e);
        });
        o(i(e), function(e) {
            v.invoke(e || d);
        });
        return v;
    }
    function _t() {
        var e = !0;
        this.disableAutoScrolling = function() {
            e = !1;
        };
        this.$get = [ "$window", "$location", "$rootScope", function(t, n, r) {
            function i(e) {
                var t = null;
                o(e, function(e) {
                    t || "a" !== In(e.nodeName) || (t = e);
                });
                return t;
            }
            function a() {
                var e = n.hash(), r;
                e ? (r = s.getElementById(e)) ? r.scrollIntoView() : (r = i(s.getElementsByName(e))) ? r.scrollIntoView() : "top" === e && t.scrollTo(0, 0) : t.scrollTo(0, 0);
            }
            var s = t.document;
            e && r.$watch(function() {
                return n.hash();
            }, function() {
                r.$evalAsync(a);
            });
            return a;
        } ];
    }
    function bt() {
        this.$get = [ "$$rAF", "$timeout", function(e, t) {
            return e.supported ? function(t) {
                return e(t);
            } : function(e) {
                return t(e, 0, !1);
            };
        } ];
    }
    function wt(e, t, r, i) {
        function a(e) {
            try {
                e.apply(null, Kn.call(arguments, 1));
            } finally {
                if (g--, 0 === g) for (;y.length; ) try {
                    y.pop()();
                } catch (t) {
                    r.error(t);
                }
            }
        }
        function s(e, t) {
            (function n() {
                o(x, function(e) {
                    e();
                });
                R = t(n, e);
            })();
        }
        function c() {
            w = null;
            _ != l.url() && (_ = l.url(), o(H, function(e) {
                e(l.url());
            }));
        }
        var l = this, u = t[0], h = e.location, f = e.history, p = e.setTimeout, m = e.clearTimeout, E = {};
        l.isMock = !1;
        var g = 0, y = [];
        l.$$completeOutstandingRequest = a;
        l.$$incOutstandingRequestCount = function() {
            g++;
        };
        l.notifyWhenNoOutstandingRequests = function(e) {
            o(x, function(e) {
                e();
            });
            0 === g ? e() : y.push(e);
        };
        var x = [], R;
        l.addPollFn = function(e) {
            v(R) && s(100, p);
            x.push(e);
            return e;
        };
        var _ = h.href, b = t.find("base"), w = null;
        l.url = function(t, n) {
            h !== e.location && (h = e.location);
            f !== e.history && (f = e.history);
            if (t) {
                if (_ != t) return _ = t, i.history ? n ? f.replaceState(null, "", t) : (f.pushState(null, "", t), 
                b.attr("href", b.attr("href"))) : (w = t, n ? h.replace(t) : h.href = t), l;
            } else return w || h.href.replace(/%27/g, "'");
        };
        var H = [], S = !1;
        l.onUrlChange = function(t) {
            if (!S) {
                if (i.history) qn(e).on("popstate", c);
                if (i.hashchange) qn(e).on("hashchange", c); else l.addPollFn(c);
                S = !0;
            }
            H.push(t);
            return t;
        };
        l.$$checkUrlChange = c;
        l.baseHref = function() {
            var e = b.attr("href");
            return e ? e.replace(/^(https?\:)?\/\/[^\/]*/, "") : "";
        };
        var M = {}, C = "", A = l.baseHref();
        l.cookies = function(e, t) {
            var i, o, a, s;
            if (e) t === n ? u.cookie = escape(e) + "=;path=" + A + ";expires=Thu, 01 Jan 1970 00:00:00 GMT" : T(t) && (i = (u.cookie = escape(e) + "=" + escape(t) + ";path=" + A).length + 1, 
            4096 < i && r.warn("Cookie '" + e + "' possibly not set or overflowed because it was too large (" + i + " > 4096 bytes)!")); else {
                if (u.cookie !== C) for (C = u.cookie, i = C.split("; "), M = {}, a = 0; a < i.length; a++) o = i[a], 
                s = o.indexOf("="), 0 < s && (e = unescape(o.substring(0, s)), M[e] === n && (M[e] = unescape(o.substring(s + 1))));
                return M;
            }
        };
        l.defer = function(e, t) {
            var n;
            g++;
            n = p(function() {
                delete E[n];
                a(e);
            }, t || 0);
            E[n] = !0;
            return n;
        };
        l.defer.cancel = function(e) {
            return E[e] ? (delete E[e], m(e), a(d), !0) : !1;
        };
    }
    function Ht() {
        this.$get = [ "$window", "$log", "$sniffer", "$document", function(e, t, n, r) {
            return new wt(e, r, t, n);
        } ];
    }
    function St() {
        this.$get = function() {
            function e(e, n) {
                function i(e) {
                    e != f && (p ? p == e && (p = e.n) : p = e, o(e.n, e.p), o(e, f), f = e, f.n = null);
                }
                function o(e, t) {
                    e != t && (e && (e.p = t), t && (t.n = e));
                }
                if (e in t) throw r("$cacheFactory")("iid", e);
                var a = 0, s = h({}, n, {
                    id: e
                }), c = {}, l = n && n.capacity || Number.MAX_VALUE, u = {}, f = null, p = null;
                return t[e] = {
                    put: function(e, t) {
                        if (l < Number.MAX_VALUE) {
                            var n = u[e] || (u[e] = {
                                key: e
                            });
                            i(n);
                        }
                        if (!v(t)) return e in c || a++, c[e] = t, a > l && this.remove(p.key), t;
                    },
                    get: function(e) {
                        if (l < Number.MAX_VALUE) {
                            var t = u[e];
                            if (!t) return;
                            i(t);
                        }
                        return c[e];
                    },
                    remove: function(e) {
                        if (l < Number.MAX_VALUE) {
                            var t = u[e];
                            if (!t) return;
                            t == f && (f = t.p);
                            t == p && (p = t.n);
                            o(t.n, t.p);
                            delete u[e];
                        }
                        delete c[e];
                        a--;
                    },
                    removeAll: function() {
                        c = {};
                        a = 0;
                        u = {};
                        f = p = null;
                    },
                    destroy: function() {
                        u = s = c = null;
                        delete t[e];
                    },
                    info: function() {
                        return h({}, s, {
                            size: a
                        });
                    }
                };
            }
            var t = {};
            e.info = function() {
                var e = {};
                o(t, function(t, n) {
                    e[n] = t.info();
                });
                return e;
            };
            e.get = function(e) {
                return t[e];
            };
            return e;
        };
    }
    function Mt() {
        this.$get = [ "$cacheFactory", function(e) {
            return e("templates");
        } ];
    }
    function Ct(e, r) {
        var i = {}, a = "Directive", s = /^\s*directive\:\s*([\d\w_\-]+)\s+(.*)$/, l = /(([\d\w_\-]+)(?:\:([^;]+))?;?)/, u = /^(on[a-z]+|formaction)$/;
        this.directive = function f(t, n) {
            K(t, "directive");
            T(t) ? (q(n, "directiveFactory"), i.hasOwnProperty(t) || (i[t] = [], e.factory(t + a, [ "$injector", "$exceptionHandler", function(e, n) {
                var r = [];
                o(i[t], function(i, o) {
                    try {
                        var a = e.invoke(i);
                        _(a) ? a = {
                            compile: E(a)
                        } : !a.compile && a.link && (a.compile = E(a.link));
                        a.priority = a.priority || 0;
                        a.index = o;
                        a.name = a.name || t;
                        a.require = a.require || a.controller && a.name;
                        a.restrict = a.restrict || "A";
                        r.push(a);
                    } catch (s) {
                        n(s);
                    }
                });
                return r;
            } ])), i[t].push(n)) : o(t, c(f));
            return this;
        };
        this.aHrefSanitizationWhitelist = function(e) {
            return g(e) ? (r.aHrefSanitizationWhitelist(e), this) : r.aHrefSanitizationWhitelist();
        };
        this.imgSrcSanitizationWhitelist = function(e) {
            return g(e) ? (r.imgSrcSanitizationWhitelist(e), this) : r.imgSrcSanitizationWhitelist();
        };
        this.$get = [ "$injector", "$interpolate", "$exceptionHandler", "$http", "$templateCache", "$parse", "$controller", "$rootScope", "$document", "$sce", "$animate", "$$sanitizeUri", function(e, r, c, f, d, E, v, g, x, R, b, w) {
            function H(e, t, n, r, i) {
                e instanceof qn || (e = qn(e));
                o(e, function(t, n) {
                    3 == t.nodeType && t.nodeValue.match(/\S+/) && (e[n] = qn(t).wrap("<span></span>").parent()[0]);
                });
                var a = M(e, t, e, n, r, i);
                S(e, "ng-scope");
                return function(t, n, r, i) {
                    q(t, "scope");
                    var s = n ? xr.clone.call(e) : e;
                    o(r, function(e, t) {
                        s.data("$" + t + "Controller", e);
                    });
                    r = 0;
                    for (var c = s.length; r < c; r++) {
                        var l = s[r].nodeType;
                        1 !== l && 9 !== l || s.eq(r).data("$scope", t);
                    }
                    n && n(s, t);
                    a && a(t, s, s, i);
                    return s;
                };
            }
            function S(e, t) {
                try {
                    e.addClass(t);
                } catch (n) {}
            }
            function M(e, t, r, i, o, a) {
                function s(e, r, i, o) {
                    var a, s, l, u, h, f, p;
                    a = r.length;
                    var d = Array(a);
                    for (u = 0; u < a; u++) d[u] = r[u];
                    f = u = 0;
                    for (h = c.length; u < h; f++) s = d[f], r = c[u++], a = c[u++], r ? (r.scope ? (l = e.$new(), 
                    qn.data(s, "$scope", l)) : l = e, p = r.transcludeOnThisElement ? C(e, r.transclude, o) : !r.templateOnThisElement && o ? o : !o && t ? C(e, t) : null, 
                    r(a, l, s, i, p)) : a && a(e, s.childNodes, n, o);
                }
                for (var c = [], l, u, h, f, p = 0; p < e.length; p++) l = new Z(), u = A(e[p], [], l, 0 === p ? i : n, o), 
                (a = u.length ? D(u, e[p], l, t, r, null, [], [], a) : null) && a.scope && S(l.$$element, "ng-scope"), 
                l = a && a.terminal || !(h = e[p].childNodes) || !h.length ? null : M(h, a ? (a.transcludeOnThisElement || !a.templateOnThisElement) && a.transclude : t), 
                c.push(a, l), f = f || a || l, a = null;
                return f ? s : null;
            }
            function C(e, t, n) {
                return function(r, i, o) {
                    var a = !1;
                    r || (r = e.$new(), a = r.$$transcluded = !0);
                    i = t(r, i, o, n);
                    if (a) i.on("$destroy", function() {
                        r.$destroy();
                    });
                    return i;
                };
            }
            function A(e, t, n, r, i) {
                var o = n.$attr, a;
                switch (e.nodeType) {
                  case 1:
                    V(t, At(nr(e).toLowerCase()), "E", r, i);
                    for (var c, u, h, f = e.attributes, p = 0, d = f && f.length; p < d; p++) {
                        var m = !1, E = !1;
                        c = f[p];
                        if (!Xn || 8 <= Xn || c.specified) {
                            a = c.name;
                            u = or(c.value);
                            c = At(a);
                            if (h = tt.test(c)) a = X(c.substr(6), "-");
                            var v = c.replace(/(Start|End)$/, "");
                            c === v + "Start" && (m = a, E = a.substr(0, a.length - 5) + "end", a = a.substr(0, a.length - 6));
                            c = At(a.toLowerCase());
                            o[c] = a;
                            if (h || !n.hasOwnProperty(c)) n[c] = u, vt(e, c) && (n[c] = !0);
                            W(e, t, u, c);
                            V(t, c, "A", r, i, m, E);
                        }
                    }
                    e = e.className;
                    if (T(e) && "" !== e) for (;a = l.exec(e); ) c = At(a[2]), V(t, c, "C", r, i) && (n[c] = or(a[3])), 
                    e = e.substr(a.index + a[0].length);
                    break;

                  case 3:
                    I(t, e.nodeValue);
                    break;

                  case 8:
                    try {
                        if (a = s.exec(e.nodeValue)) c = At(a[1]), V(t, c, "M", r, i) && (n[c] = or(a[2]));
                    } catch (g) {}
                }
                t.sort(j);
                return t;
            }
            function L(e, t, n) {
                var r = [], i = 0;
                if (t && e.hasAttribute && e.hasAttribute(t)) {
                    do {
                        if (!e) throw Pr("uterdir", t, n);
                        1 == e.nodeType && (e.hasAttribute(t) && i++, e.hasAttribute(n) && i--);
                        r.push(e);
                        e = e.nextSibling;
                    } while (0 < i);
                } else r.push(e);
                return qn(r);
            }
            function F(e, t, n) {
                return function(r, i, o, a, s) {
                    i = L(i[0], t, n);
                    return e(r, i, o, a, s);
                };
            }
            function D(e, i, a, s, l, u, h, f, p) {
                function d(e, t, n, r) {
                    if (e) {
                        n && (e = F(e, n, r));
                        e.require = G.require;
                        e.directiveName = W;
                        if (w === G || G.$$isolateScope) e = K(e, {
                            isolateScope: !0
                        });
                        h.push(e);
                    }
                    if (t) {
                        n && (t = F(t, n, r));
                        t.require = G.require;
                        t.directiveName = W;
                        if (w === G || G.$$isolateScope) t = K(t, {
                            isolateScope: !0
                        });
                        f.push(t);
                    }
                }
                function m(e, t, n, r) {
                    var i, a = "data", s = !1;
                    if (T(t)) {
                        for (;"^" == (i = t.charAt(0)) || "?" == i; ) t = t.substr(1), "^" == i && (a = "inheritedData"), 
                        s = s || "?" == i;
                        i = null;
                        r && "data" === a && (i = r[t]);
                        i = i || n[a]("$" + t + "Controller");
                        if (!i && !s) throw Pr("ctreq", t, e);
                    } else ir(t) && (i = [], o(t, function(t) {
                        i.push(m(e, t, n, r));
                    }));
                    return i;
                }
                function g(e, t, s, l, u) {
                    function p(e, t) {
                        var r;
                        2 > arguments.length && (t = e, e = n);
                        j && (r = _);
                        return u(e, t, r);
                    }
                    var d, g, y, T, x, R, _ = {}, H;
                    d = i === s ? a : P(a, new Z(qn(s), a.$attr));
                    g = d.$$element;
                    if (w) {
                        var C = /^\s*([@=&])(\??)\s*(\w*)\s*$/;
                        R = t.$new(!0);
                        !M || M !== w && M !== w.$$originalDirective ? g.data("$isolateScopeNoTemplate", R) : g.data("$isolateScope", R);
                        S(g, "ng-isolate-scope");
                        o(w.scope, function(e, n) {
                            var i = e.match(C) || [], o = i[3] || n, a = "?" == i[2], i = i[1], s, c, l, u;
                            R.$$isolateBindings[n] = i + o;
                            switch (i) {
                              case "@":
                                d.$observe(o, function(e) {
                                    R[n] = e;
                                });
                                d.$$observers[o].$$scope = t;
                                d[o] && (R[n] = r(d[o])(t));
                                break;

                              case "=":
                                if (a && !d[o]) break;
                                c = E(d[o]);
                                u = c.literal ? k : function(e, t) {
                                    return e === t || e !== e && t !== t;
                                };
                                l = c.assign || function() {
                                    s = R[n] = c(t);
                                    throw Pr("nonassign", d[o], w.name);
                                };
                                s = R[n] = c(t);
                                R.$watch(function() {
                                    var e = c(t);
                                    u(e, R[n]) || (u(e, s) ? l(t, e = R[n]) : R[n] = e);
                                    return s = e;
                                }, null, c.literal);
                                break;

                              case "&":
                                c = E(d[o]);
                                R[n] = function(e) {
                                    return c(t, e);
                                };
                                break;

                              default:
                                throw Pr("iscp", w.name, n, e);
                            }
                        });
                    }
                    H = u && p;
                    b && o(b, function(e) {
                        var n = {
                            $scope: e === w || e.$$isolateScope ? R : t,
                            $element: g,
                            $attrs: d,
                            $transclude: H
                        }, r;
                        x = e.controller;
                        "@" == x && (x = d[e.name]);
                        r = v(x, n);
                        _[e.name] = r;
                        j || g.data("$" + e.name + "Controller", r);
                        e.controllerAs && (n.$scope[e.controllerAs] = r);
                    });
                    l = 0;
                    for (y = h.length; l < y; l++) try {
                        T = h[l], T(T.isolateScope ? R : t, g, d, T.require && m(T.directiveName, T.require, g, _), H);
                    } catch (A) {
                        c(A, O(g));
                    }
                    l = t;
                    w && (w.template || null === w.templateUrl) && (l = R);
                    e && e(l, s.childNodes, n, u);
                    for (l = f.length - 1; 0 <= l; l--) try {
                        T = f[l], T(T.isolateScope ? R : t, g, d, T.require && m(T.directiveName, T.require, g, _), H);
                    } catch (L) {
                        c(L, O(g));
                    }
                }
                p = p || {};
                for (var x = -Number.MAX_VALUE, R, b = p.controllerDirectives, w = p.newIsolateScopeDirective, M = p.templateDirective, C = p.nonTlbTranscludeDirective, D = !1, V = !1, j = p.hasElementTranscludeDirective, I = a.$$element = qn(i), G, W, X, q = s, Q, J = 0, tt = e.length; J < tt; J++) {
                    G = e[J];
                    var nt = G.$$start, rt = G.$$end;
                    nt && (I = L(i, nt, rt));
                    X = n;
                    if (x > G.priority) break;
                    if (X = G.scope) R = R || G, G.templateUrl || (N("new/isolated scope", w, G, I), 
                    y(X) && (w = G));
                    W = G.name;
                    !G.templateUrl && G.controller && (X = G.controller, b = b || {}, N("'" + W + "' controller", b[W], G, I), 
                    b[W] = G);
                    if (X = G.transclude) D = !0, G.$$tlb || (N("transclusion", C, G, I), C = G), "element" == X ? (j = !0, 
                    x = G.priority, X = I, I = a.$$element = qn(t.createComment(" " + W + ": " + a[W] + " ")), 
                    i = I[0], Y(l, Kn.call(X, 0), i), q = H(X, s, x, u && u.name, {
                        nonTlbTranscludeDirective: C
                    })) : (X = qn(it(i)).contents(), I.empty(), q = H(X, s));
                    if (G.template) if (V = !0, N("template", M, G, I), M = G, X = _(G.template) ? G.template(I, a) : G.template, 
                    X = et(X), G.replace) {
                        u = G;
                        X = vr.test(X) ? qn(or(X)) : [];
                        i = X[0];
                        if (1 != X.length || 1 !== i.nodeType) throw Pr("tplrt", W, "");
                        Y(l, I, i);
                        tt = {
                            $attr: {}
                        };
                        X = A(i, [], tt);
                        var $ = e.splice(J + 1, e.length - (J + 1));
                        w && U(X);
                        e = e.concat(X).concat($);
                        z(a, tt);
                        tt = e.length;
                    } else I.html(X);
                    if (G.templateUrl) V = !0, N("template", M, G, I), M = G, G.replace && (u = G), 
                    g = B(e.splice(J, e.length - J), I, a, l, D && q, h, f, {
                        controllerDirectives: b,
                        newIsolateScopeDirective: w,
                        templateDirective: M,
                        nonTlbTranscludeDirective: C
                    }), tt = e.length; else if (G.compile) try {
                        Q = G.compile(I, a, q), _(Q) ? d(null, Q, nt, rt) : Q && d(Q.pre, Q.post, nt, rt);
                    } catch (ot) {
                        c(ot, O(I));
                    }
                    G.terminal && (g.terminal = !0, x = Math.max(x, G.priority));
                }
                g.scope = R && !0 === R.scope;
                g.transcludeOnThisElement = D;
                g.templateOnThisElement = V;
                g.transclude = q;
                p.hasElementTranscludeDirective = j;
                return g;
            }
            function U(e) {
                for (var t = 0, n = e.length; t < n; t++) e[t] = p(e[t], {
                    $$isolateScope: !0
                });
            }
            function V(t, r, o, s, l, u, h) {
                if (r === l) return null;
                l = null;
                if (i.hasOwnProperty(r)) {
                    var f;
                    r = e.get(r + a);
                    for (var d = 0, m = r.length; d < m; d++) try {
                        f = r[d], (s === n || s > f.priority) && -1 != f.restrict.indexOf(o) && (u && (f = p(f, {
                            $$start: u,
                            $$end: h
                        })), t.push(f), l = f);
                    } catch (E) {
                        c(E);
                    }
                }
                return l;
            }
            function z(e, t) {
                var n = t.$attr, r = e.$attr, i = e.$$element;
                o(e, function(r, i) {
                    "$" != i.charAt(0) && (t[i] && t[i] !== r && (r += ("style" === i ? ";" : " ") + t[i]), 
                    e.$set(i, r, !0, n[i]));
                });
                o(t, function(t, o) {
                    "class" == o ? (S(i, t), e["class"] = (e["class"] ? e["class"] + " " : "") + t) : "style" == o ? (i.attr("style", i.attr("style") + ";" + t), 
                    e.style = (e.style ? e.style + ";" : "") + t) : "$" == o.charAt(0) || e.hasOwnProperty(o) || (e[o] = t, 
                    r[o] = n[o]);
                });
            }
            function B(e, t, n, r, i, a, s, c) {
                var l = [], u, p, m = t[0], E = e.shift(), v = h({}, E, {
                    templateUrl: null,
                    transclude: null,
                    replace: null,
                    $$originalDirective: E
                }), g = _(E.templateUrl) ? E.templateUrl(t, n) : E.templateUrl;
                t.empty();
                f.get(R.getTrustedResourceUrl(g), {
                    cache: d
                }).success(function(h) {
                    var f, d;
                    h = et(h);
                    if (E.replace) {
                        h = vr.test(h) ? qn(or(h)) : [];
                        f = h[0];
                        if (1 != h.length || 1 !== f.nodeType) throw Pr("tplrt", E.name, g);
                        h = {
                            $attr: {}
                        };
                        Y(r, t, f);
                        var T = A(f, [], h);
                        y(E.scope) && U(T);
                        e = T.concat(e);
                        z(n, h);
                    } else f = m, t.html(h);
                    e.unshift(v);
                    u = D(e, f, n, i, t, E, a, s, c);
                    o(r, function(e, n) {
                        e == f && (r[n] = t[0]);
                    });
                    for (p = M(t[0].childNodes, i); l.length; ) {
                        h = l.shift();
                        d = l.shift();
                        var x = l.shift(), R = l.shift(), T = t[0];
                        if (d !== m) {
                            var _ = d.className;
                            c.hasElementTranscludeDirective && E.replace || (T = it(f));
                            Y(x, qn(d), T);
                            S(qn(T), _);
                        }
                        d = u.transcludeOnThisElement ? C(h, u.transclude, R) : R;
                        u(p, h, T, r, d);
                    }
                    l = null;
                }).error(function(e, t, n, r) {
                    throw Pr("tpload", r.url);
                });
                return function(e, t, n, r, i) {
                    e = i;
                    l ? (l.push(t), l.push(n), l.push(r), l.push(e)) : (u.transcludeOnThisElement && (e = C(t, u.transclude, i)), 
                    u(p, t, n, r, e));
                };
            }
            function j(e, t) {
                var n = t.priority - e.priority;
                return 0 !== n ? n : e.name !== t.name ? e.name < t.name ? -1 : 1 : e.index - t.index;
            }
            function N(e, t, n, r) {
                if (t) throw Pr("multidir", t.name, n.name, e, O(r));
            }
            function I(e, t) {
                var n = r(t, !0);
                n && e.push({
                    priority: 0,
                    compile: function(e) {
                        var t = e.parent().length;
                        t && S(e.parent(), "ng-binding");
                        return function(e, r) {
                            var i = r.parent(), o = i.data("$binding") || [];
                            o.push(n);
                            i.data("$binding", o);
                            t || S(i, "ng-binding");
                            e.$watch(n, function(e) {
                                r[0].nodeValue = e;
                            });
                        };
                    }
                });
            }
            function G(e, t) {
                if ("srcdoc" == t) return R.HTML;
                var n = nr(e);
                if ("xlinkHref" == t || "FORM" == n && "action" == t || "IMG" != n && ("src" == t || "ngSrc" == t)) return R.RESOURCE_URL;
            }
            function W(e, t, n, i) {
                var o = r(n, !0);
                if (o) {
                    if ("multiple" === i && "SELECT" === nr(e)) throw Pr("selmulti", O(e));
                    t.push({
                        priority: 100,
                        compile: function() {
                            return {
                                pre: function(t, n, a) {
                                    n = a.$$observers || (a.$$observers = {});
                                    if (u.test(i)) throw Pr("nodomevents");
                                    if (o = r(a[i], !0, G(e, i))) a[i] = o(t), (n[i] || (n[i] = [])).$$inter = !0, (a.$$observers && a.$$observers[i].$$scope || t).$watch(o, function(e, t) {
                                        "class" === i && e != t ? a.$updateClass(e, t) : a.$set(i, e);
                                    });
                                }
                            };
                        }
                    });
                }
            }
            function Y(e, n, r) {
                var i = n[0], o = n.length, a = i.parentNode, s, c;
                if (e) for (s = 0, c = e.length; s < c; s++) if (e[s] == i) {
                    e[s++] = r;
                    c = s + o - 1;
                    for (var l = e.length; s < l; s++, c++) c < l ? e[s] = e[c] : delete e[s];
                    e.length -= o - 1;
                    break;
                }
                a && a.replaceChild(r, i);
                e = t.createDocumentFragment();
                e.appendChild(i);
                r[qn.expando] = i[qn.expando];
                i = 1;
                for (o = n.length; i < o; i++) a = n[i], qn(a).remove(), e.appendChild(a), delete n[i];
                n[0] = r;
                n.length = 1;
            }
            function K(e, t) {
                return h(function() {
                    return e.apply(null, arguments);
                }, e, t);
            }
            var Z = function(e, t) {
                this.$$element = e;
                this.$attr = t || {};
            };
            Z.prototype = {
                $normalize: At,
                $addClass: function(e) {
                    e && 0 < e.length && b.addClass(this.$$element, e);
                },
                $removeClass: function(e) {
                    e && 0 < e.length && b.removeClass(this.$$element, e);
                },
                $updateClass: function(e, t) {
                    var n = Pt(e, t), r = Pt(t, e);
                    0 === n.length ? b.removeClass(this.$$element, r) : 0 === r.length ? b.addClass(this.$$element, n) : b.setClass(this.$$element, n, r);
                },
                $set: function(e, t, r, i) {
                    var a = vt(this.$$element[0], e);
                    a && (this.$$element.prop(e, t), i = a);
                    this[e] = t;
                    i ? this.$attr[e] = i : (i = this.$attr[e]) || (this.$attr[e] = i = X(e, "-"));
                    a = nr(this.$$element);
                    if ("A" === a && "href" === e || "IMG" === a && "src" === e) this[e] = t = w(t, "src" === e);
                    !1 !== r && (null === t || t === n ? this.$$element.removeAttr(i) : this.$$element.attr(i, t));
                    (r = this.$$observers) && o(r[e], function(e) {
                        try {
                            e(t);
                        } catch (n) {
                            c(n);
                        }
                    });
                },
                $observe: function(e, t) {
                    var n = this, r = n.$$observers || (n.$$observers = {}), i = r[e] || (r[e] = []);
                    i.push(t);
                    g.$evalAsync(function() {
                        i.$$inter || t(n[e]);
                    });
                    return t;
                }
            };
            var Q = r.startSymbol(), J = r.endSymbol(), et = "{{" == Q || "}}" == J ? m : function(e) {
                return e.replace(/\{\{/g, Q).replace(/}}/g, J);
            }, tt = /^ngAttr[A-Z]/;
            return H;
        } ];
    }
    function At(e) {
        return tt(e.replace($r, ""));
    }
    function Pt(e, t) {
        var n = "", r = e.split(/\s+/), i = t.split(/\s+/), o = 0;
        e: for (;o < r.length; o++) {
            for (var a = r[o], s = 0; s < i.length; s++) if (a == i[s]) continue e;
            n += (0 < n.length ? " " : "") + a;
        }
        return n;
    }
    function $t() {
        var e = {}, t = /^(\S+)(\s+as\s+(\w+))?$/;
        this.register = function(t, n) {
            K(t, "controller");
            y(t) ? h(e, t) : e[t] = n;
        };
        this.$get = [ "$injector", "$window", function(n, i) {
            return function(o, a) {
                var s, c, l;
                T(o) && (s = o.match(t), c = s[1], l = s[3], o = e.hasOwnProperty(c) ? e[c] : Z(a.$scope, c, !0) || Z(i, c, !0), 
                Y(o, c, !0));
                s = n.instantiate(o, a);
                if (l) {
                    if (!a || "object" !== typeof a.$scope) throw r("$controller")("noscp", c || o.name, l);
                    a.$scope[l] = s;
                }
                return s;
            };
        } ];
    }
    function kt() {
        this.$get = [ "$window", function(e) {
            return qn(e.document);
        } ];
    }
    function Lt() {
        this.$get = [ "$log", function(e) {
            return function(t, n) {
                e.error.apply(e, arguments);
            };
        } ];
    }
    function Ft(e) {
        var t = {}, n, r, i;
        if (!e) return t;
        o(e.split("\n"), function(e) {
            i = e.indexOf(":");
            n = In(or(e.substr(0, i)));
            r = or(e.substr(i + 1));
            n && (t[n] = t[n] ? t[n] + ", " + r : r);
        });
        return t;
    }
    function Dt(e) {
        var t = y(e) ? e : n;
        return function(n) {
            t || (t = Ft(e));
            return n ? t[In(n)] || null : t;
        };
    }
    function Ut(e, t, n) {
        if (_(n)) return n(e, t);
        o(n, function(n) {
            e = n(e, t);
        });
        return e;
    }
    function Vt() {
        var e = /^\s*(\[|\{[^\{])/, t = /[\}\]]\s*$/, r = /^\)\]\}',?\n/, i = {
            "Content-Type": "application/json;charset=utf-8"
        }, a = this.defaults = {
            transformResponse: [ function(n) {
                T(n) && (n = n.replace(r, ""), e.test(n) && t.test(n) && (n = U(n)));
                return n;
            } ],
            transformRequest: [ function(e) {
                return y(e) && "[object File]" !== Qn.call(e) && "[object Blob]" !== Qn.call(e) ? D(e) : e;
            } ],
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*"
                },
                post: P(i),
                put: P(i),
                patch: P(i)
            },
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN"
        }, c = this.interceptors = [], l = this.responseInterceptors = [];
        this.$get = [ "$httpBackend", "$browser", "$cacheFactory", "$rootScope", "$q", "$injector", function(e, t, r, i, u, f) {
            function p(e) {
                function t(e) {
                    var t = h({}, e, {
                        data: Ut(e.data, e.headers, r.transformResponse)
                    });
                    return 200 <= e.status && 300 > e.status ? t : u.reject(t);
                }
                var r = {
                    method: "get",
                    transformRequest: a.transformRequest,
                    transformResponse: a.transformResponse
                }, i = function(e) {
                    var t = a.headers, n = h({}, e.headers), r, i, t = h({}, t.common, t[In(e.method)]);
                    e: for (r in t) {
                        e = In(r);
                        for (i in n) if (In(i) === e) continue e;
                        n[r] = t[r];
                    }
                    (function(e) {
                        var t;
                        o(e, function(n, r) {
                            _(n) && (t = n(), null != t ? e[r] = t : delete e[r]);
                        });
                    })(n);
                    return n;
                }(e);
                h(r, e);
                r.headers = i;
                r.method = Wn(r.method);
                var s = [ function(e) {
                    i = e.headers;
                    var n = Ut(e.data, Dt(i), e.transformRequest);
                    v(n) && o(i, function(e, t) {
                        "content-type" === In(t) && delete i[t];
                    });
                    v(e.withCredentials) && !v(a.withCredentials) && (e.withCredentials = a.withCredentials);
                    return d(e, n, i).then(t, t);
                }, n ], c = u.when(r);
                for (o(x, function(e) {
                    (e.request || e.requestError) && s.unshift(e.request, e.requestError);
                    (e.response || e.responseError) && s.push(e.response, e.responseError);
                }); s.length; ) {
                    e = s.shift();
                    var l = s.shift(), c = c.then(e, l);
                }
                c.success = function(e) {
                    c.then(function(t) {
                        e(t.data, t.status, t.headers, r);
                    });
                    return c;
                };
                c.error = function(e) {
                    c.then(null, function(t) {
                        e(t.data, t.status, t.headers, r);
                    });
                    return c;
                };
                return c;
            }
            function d(r, o, s) {
                function c(e, t, n, r) {
                    T && (200 <= e && 300 > e ? T.put(R, [ e, t, Ft(n), r ]) : T.remove(R));
                    l(t, e, n, r);
                    i.$$phase || i.$apply();
                }
                function l(e, t, n, i) {
                    t = Math.max(t, 0);
                    (200 <= t && 300 > t ? f.resolve : f.reject)({
                        data: e,
                        status: t,
                        headers: Dt(n),
                        config: r,
                        statusText: i
                    });
                }
                function h() {
                    var e = M(p.pendingRequests, r);
                    -1 !== e && p.pendingRequests.splice(e, 1);
                }
                var f = u.defer(), d = f.promise, T, x, R = m(r.url, r.params);
                p.pendingRequests.push(r);
                d.then(h, h);
                !r.cache && !a.cache || (!1 === r.cache || "GET" !== r.method && "JSONP" !== r.method) || (T = y(r.cache) ? r.cache : y(a.cache) ? a.cache : E);
                if (T) if (x = T.get(R), g(x)) {
                    if (x && _(x.then)) return x.then(h, h), x;
                    ir(x) ? l(x[1], x[0], P(x[2]), x[3]) : l(x, 200, {}, "OK");
                } else T.put(R, d);
                v(x) && ((x = _n(r.url) ? t.cookies()[r.xsrfCookieName || a.xsrfCookieName] : n) && (s[r.xsrfHeaderName || a.xsrfHeaderName] = x), 
                e(r.method, R, o, c, s, r.timeout, r.withCredentials, r.responseType));
                return d;
            }
            function m(e, t) {
                if (!t) return e;
                var n = [];
                s(t, function(e, t) {
                    null === e || v(e) || (ir(e) || (e = [ e ]), o(e, function(e) {
                        y(e) && (e = R(e) ? e.toISOString() : D(e));
                        n.push(I(t) + "=" + I(e));
                    }));
                });
                0 < n.length && (e += (-1 == e.indexOf("?") ? "?" : "&") + n.join("&"));
                return e;
            }
            var E = r("$http"), x = [];
            o(c, function(e) {
                x.unshift(T(e) ? f.get(e) : f.invoke(e));
            });
            o(l, function(e, t) {
                var n = T(e) ? f.get(e) : f.invoke(e);
                x.splice(t, 0, {
                    response: function(e) {
                        return n(u.when(e));
                    },
                    responseError: function(e) {
                        return n(u.reject(e));
                    }
                });
            });
            p.pendingRequests = [];
            (function(e) {
                o(arguments, function(e) {
                    p[e] = function(t, n) {
                        return p(h(n || {}, {
                            method: e,
                            url: t
                        }));
                    };
                });
            })("get", "delete", "head", "jsonp");
            (function(e) {
                o(arguments, function(e) {
                    p[e] = function(t, n, r) {
                        return p(h(r || {}, {
                            method: e,
                            url: t,
                            data: n
                        }));
                    };
                });
            })("post", "put");
            p.defaults = a;
            return p;
        } ];
    }
    function Ot(t) {
        if (8 >= Xn && (!t.match(/^(get|post|head|put|delete|options)$/i) || !e.XMLHttpRequest)) return new e.ActiveXObject("Microsoft.XMLHTTP");
        if (e.XMLHttpRequest) return new e.XMLHttpRequest();
        throw r("$httpBackend")("noxhr");
    }
    function zt() {
        this.$get = [ "$browser", "$window", "$document", function(e, t, n) {
            return Bt(e, Ot, e.defer, t.angular.callbacks, n[0]);
        } ];
    }
    function Bt(e, t, n, r, i) {
        function a(e, t, n) {
            var o = i.createElement("script"), a = null;
            o.type = "text/javascript";
            o.src = e;
            o.async = !0;
            a = function(e) {
                fr(o, "load", a);
                fr(o, "error", a);
                i.body.removeChild(o);
                o = null;
                var s = -1, c = "unknown";
                e && ("load" !== e.type || r[t].called || (e = {
                    type: "error"
                }), c = e.type, s = "error" === e.type ? 404 : 200);
                n && n(s, c);
            };
            hr(o, "load", a);
            hr(o, "error", a);
            8 >= Xn && (o.onreadystatechange = function() {
                T(o.readyState) && /loaded|complete/.test(o.readyState) && (o.onreadystatechange = null, 
                a({
                    type: "load"
                }));
            });
            i.body.appendChild(o);
            return a;
        }
        var s = -1;
        return function(i, c, l, u, h, f, p, m) {
            function E() {
                y = s;
                x && x();
                R && R.abort();
            }
            function v(t, r, i, o, a) {
                w && n.cancel(w);
                x = R = null;
                0 === r && (r = i ? 200 : "file" == Rn(c).protocol ? 404 : 0);
                t(1223 === r ? 204 : r, i, o, a || "");
                e.$$completeOutstandingRequest(d);
            }
            var y;
            e.$$incOutstandingRequestCount();
            c = c || e.url();
            if ("jsonp" == In(i)) {
                var T = "_" + (r.counter++).toString(36);
                r[T] = function(e) {
                    r[T].data = e;
                    r[T].called = !0;
                };
                var x = a(c.replace("JSON_CALLBACK", "angular.callbacks." + T), T, function(e, t) {
                    v(u, e, r[T].data, "", t);
                    r[T] = d;
                });
            } else {
                var R = t(i);
                R.open(i, c, !0);
                o(h, function(e, t) {
                    g(e) && R.setRequestHeader(t, e);
                });
                R.onreadystatechange = function() {
                    if (R && 4 == R.readyState) {
                        var e = null, t = null, n = "";
                        y !== s && (e = R.getAllResponseHeaders(), t = "response" in R ? R.response : R.responseText);
                        y === s && 10 > Xn || (n = R.statusText);
                        v(u, y || R.status, t, e, n);
                    }
                };
                p && (R.withCredentials = !0);
                if (m) try {
                    R.responseType = m;
                } catch (b) {
                    if ("json" !== m) throw b;
                }
                R.send(l || null);
            }
            if (0 < f) var w = n(E, f); else f && _(f.then) && f.then(E);
        };
    }
    function jt() {
        var e = "{{", t = "}}";
        this.startSymbol = function(t) {
            return t ? (e = t, this) : e;
        };
        this.endSymbol = function(e) {
            return e ? (t = e, this) : t;
        };
        this.$get = [ "$parse", "$exceptionHandler", "$sce", function(n, r, i) {
            function o(o, c, l) {
                for (var u, h, f = 0, p = [], d = o.length, m = !1, E = []; f < d; ) -1 != (u = o.indexOf(e, f)) && -1 != (h = o.indexOf(t, u + a)) ? (f != u && p.push(o.substring(f, u)), 
                p.push(f = n(m = o.substring(u + a, h))), f.exp = m, f = h + s, m = !0) : (f != d && p.push(o.substring(f)), 
                f = d);
                (d = p.length) || (p.push(""), d = 1);
                if (l && 1 < p.length) throw kr("noconcat", o);
                if (!c || m) return E.length = d, f = function(e) {
                    try {
                        for (var t = 0, n = d, a; t < n; t++) {
                            if ("function" == typeof (a = p[t])) if (a = a(e), a = l ? i.getTrusted(l, a) : i.valueOf(a), 
                            null == a) a = ""; else switch (typeof a) {
                              case "string":
                                break;

                              case "number":
                                a = "" + a;
                                break;

                              default:
                                a = D(a);
                            }
                            E[t] = a;
                        }
                        return E.join("");
                    } catch (s) {
                        e = kr("interr", o, s.toString()), r(e);
                    }
                }, f.exp = o, f.parts = p, f;
            }
            var a = e.length, s = t.length;
            o.startSymbol = function() {
                return e;
            };
            o.endSymbol = function() {
                return t;
            };
            return o;
        } ];
    }
    function Nt() {
        this.$get = [ "$rootScope", "$window", "$q", function(e, t, n) {
            function r(r, o, a, s) {
                var c = t.setInterval, l = t.clearInterval, u = n.defer(), h = u.promise, f = 0, p = g(s) && !s;
                a = g(a) ? a : 0;
                h.then(null, null, r);
                h.$$intervalId = c(function() {
                    u.notify(f++);
                    0 < a && f >= a && (u.resolve(f), l(h.$$intervalId), delete i[h.$$intervalId]);
                    p || e.$apply();
                }, o);
                i[h.$$intervalId] = u;
                return h;
            }
            var i = {};
            r.cancel = function(e) {
                return e && e.$$intervalId in i ? (i[e.$$intervalId].reject("canceled"), t.clearInterval(e.$$intervalId), 
                delete i[e.$$intervalId], !0) : !1;
            };
            return r;
        } ];
    }
    function It() {
        this.$get = function() {
            return {
                id: "en-us",
                NUMBER_FORMATS: {
                    DECIMAL_SEP: ".",
                    GROUP_SEP: ",",
                    PATTERNS: [ {
                        minInt: 1,
                        minFrac: 0,
                        maxFrac: 3,
                        posPre: "",
                        posSuf: "",
                        negPre: "-",
                        negSuf: "",
                        gSize: 3,
                        lgSize: 3
                    }, {
                        minInt: 1,
                        minFrac: 2,
                        maxFrac: 2,
                        posPre: "¤",
                        posSuf: "",
                        negPre: "(¤",
                        negSuf: ")",
                        gSize: 3,
                        lgSize: 3
                    } ],
                    CURRENCY_SYM: "$"
                },
                DATETIME_FORMATS: {
                    MONTH: "January February March April May June July August September October November December".split(" "),
                    SHORTMONTH: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),
                    DAY: "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
                    SHORTDAY: "Sun Mon Tue Wed Thu Fri Sat".split(" "),
                    AMPMS: [ "AM", "PM" ],
                    medium: "MMM d, y h:mm:ss a",
                    "short": "M/d/yy h:mm a",
                    fullDate: "EEEE, MMMM d, y",
                    longDate: "MMMM d, y",
                    mediumDate: "MMM d, y",
                    shortDate: "M/d/yy",
                    mediumTime: "h:mm:ss a",
                    shortTime: "h:mm a"
                },
                pluralCat: function(e) {
                    return 1 === e ? "one" : "other";
                }
            };
        };
    }
    function Gt(e) {
        e = e.split("/");
        for (var t = e.length; t--; ) e[t] = N(e[t]);
        return e.join("/");
    }
    function Wt(e, t, n) {
        e = Rn(e, n);
        t.$$protocol = e.protocol;
        t.$$host = e.hostname;
        t.$$port = f(e.port) || Fr[e.protocol] || null;
    }
    function Xt(e, t, n) {
        var r = "/" !== e.charAt(0);
        r && (e = "/" + e);
        e = Rn(e, n);
        t.$$path = decodeURIComponent(r && "/" === e.pathname.charAt(0) ? e.pathname.substring(1) : e.pathname);
        t.$$search = B(e.search);
        t.$$hash = decodeURIComponent(e.hash);
        t.$$path && "/" != t.$$path.charAt(0) && (t.$$path = "/" + t.$$path);
    }
    function qt(e, t) {
        if (0 === t.indexOf(e)) return t.substr(e.length);
    }
    function Yt(e) {
        var t = e.indexOf("#");
        return -1 == t ? e : e.substr(0, t);
    }
    function Kt(e) {
        return e.substr(0, Yt(e).lastIndexOf("/") + 1);
    }
    function Zt(e, t) {
        this.$$html5 = !0;
        t = t || "";
        var r = Kt(e);
        Wt(e, this, e);
        this.$$parse = function(t) {
            var n = qt(r, t);
            if (!T(n)) throw Dr("ipthprfx", t, r);
            Xt(n, this, e);
            this.$$path || (this.$$path = "/");
            this.$$compose();
        };
        this.$$compose = function() {
            var e = j(this.$$search), t = this.$$hash ? "#" + N(this.$$hash) : "";
            this.$$url = Gt(this.$$path) + (e ? "?" + e : "") + t;
            this.$$absUrl = r + this.$$url.substr(1);
        };
        this.$$rewrite = function(i) {
            var o;
            if ((o = qt(e, i)) !== n) return i = o, (o = qt(t, o)) !== n ? r + (qt("/", o) || o) : e + i;
            if ((o = qt(r, i)) !== n) return r + o;
            if (r == i + "/") return r;
        };
    }
    function Qt(e, t) {
        var n = Kt(e);
        Wt(e, this, e);
        this.$$parse = function(r) {
            var i = qt(e, r) || qt(n, r), i = "#" == i.charAt(0) ? qt(t, i) : this.$$html5 ? i : "";
            if (!T(i)) throw Dr("ihshprfx", r, t);
            Xt(i, this, e);
            r = this.$$path;
            var o = /^\/[A-Z]:(\/.*)/;
            0 === i.indexOf(e) && (i = i.replace(e, ""));
            o.exec(i) || (r = (i = o.exec(r)) ? i[1] : r);
            this.$$path = r;
            this.$$compose();
        };
        this.$$compose = function() {
            var n = j(this.$$search), r = this.$$hash ? "#" + N(this.$$hash) : "";
            this.$$url = Gt(this.$$path) + (n ? "?" + n : "") + r;
            this.$$absUrl = e + (this.$$url ? t + this.$$url : "");
        };
        this.$$rewrite = function(t) {
            if (Yt(e) == Yt(t)) return t;
        };
    }
    function Jt(e, t) {
        this.$$html5 = !0;
        Qt.apply(this, arguments);
        var n = Kt(e);
        this.$$rewrite = function(r) {
            var i;
            if (e == Yt(r)) return r;
            if (i = qt(n, r)) return e + t + i;
            if (n === r + "/") return n;
        };
        this.$$compose = function() {
            var n = j(this.$$search), r = this.$$hash ? "#" + N(this.$$hash) : "";
            this.$$url = Gt(this.$$path) + (n ? "?" + n : "") + r;
            this.$$absUrl = e + t + this.$$url;
        };
    }
    function en(e) {
        return function() {
            return this[e];
        };
    }
    function tn(e, t) {
        return function(n) {
            if (v(n)) return this[e];
            this[e] = t(n);
            this.$$compose();
            return this;
        };
    }
    function nn() {
        var t = "", n = !1;
        this.hashPrefix = function(e) {
            return g(e) ? (t = e, this) : t;
        };
        this.html5Mode = function(e) {
            return g(e) ? (n = e, this) : n;
        };
        this.$get = [ "$rootScope", "$browser", "$sniffer", "$rootElement", function(r, i, o, a) {
            function s(e) {
                r.$broadcast("$locationChangeSuccess", c.absUrl(), e);
            }
            var c, l, u = i.baseHref(), h = i.url(), f;
            n ? (f = h.substring(0, h.indexOf("/", h.indexOf("//") + 2)) + (u || "/"), l = o.history ? Zt : Jt) : (f = Yt(h), 
            l = Qt);
            c = new l(f, "#" + t);
            c.$$parse(c.$$rewrite(h));
            var p = /^\s*(javascript|mailto):/i;
            a.on("click", function(n) {
                if (!n.ctrlKey && !n.metaKey && 2 != n.which) {
                    for (var o = qn(n.target); "a" !== In(o[0].nodeName); ) if (o[0] === a[0] || !(o = o.parent())[0]) return;
                    var s = o.prop("href");
                    y(s) && "[object SVGAnimatedString]" === s.toString() && (s = Rn(s.animVal).href);
                    if (!p.test(s)) {
                        if (l === Jt) {
                            var u = o.attr("href") || o.attr("xlink:href");
                            if (u && 0 > u.indexOf("://")) if (s = "#" + t, "/" == u[0]) s = f + s + u; else if ("#" == u[0]) s = f + s + (c.path() || "/") + u; else {
                                var h = c.path().split("/"), u = u.split("/");
                                2 !== h.length || h[1] || (h.length = 1);
                                for (var d = 0; d < u.length; d++) "." != u[d] && (".." == u[d] ? h.pop() : u[d].length && h.push(u[d]));
                                s = f + s + h.join("/");
                            }
                        }
                        h = c.$$rewrite(s);
                        s && (!o.attr("target") && h && !n.isDefaultPrevented()) && (n.preventDefault(), 
                        h != i.url() && (c.$$parse(h), r.$apply(), e.angular["ff-684208-preventDefault"] = !0));
                    }
                }
            });
            c.absUrl() != h && i.url(c.absUrl(), !0);
            i.onUrlChange(function(e) {
                c.absUrl() != e && (r.$evalAsync(function() {
                    var t = c.absUrl();
                    c.$$parse(e);
                    r.$broadcast("$locationChangeStart", e, t).defaultPrevented ? (c.$$parse(t), i.url(t)) : s(t);
                }), r.$$phase || r.$digest());
            });
            var d = 0;
            r.$watch(function() {
                var e = i.url(), t = c.$$replace;
                d && e == c.absUrl() || (d++, r.$evalAsync(function() {
                    r.$broadcast("$locationChangeStart", c.absUrl(), e).defaultPrevented ? c.$$parse(e) : (i.url(c.absUrl(), t), 
                    s(e));
                }));
                c.$$replace = !1;
                return d;
            });
            return c;
        } ];
    }
    function rn() {
        var e = !0, t = this;
        this.debugEnabled = function(t) {
            return g(t) ? (e = t, this) : e;
        };
        this.$get = [ "$window", function(n) {
            function r(e) {
                e instanceof Error && (e.stack ? e = e.message && -1 === e.stack.indexOf(e.message) ? "Error: " + e.message + "\n" + e.stack : e.stack : e.sourceURL && (e = e.message + "\n" + e.sourceURL + ":" + e.line));
                return e;
            }
            function i(e) {
                var t = n.console || {}, i = t[e] || t.log || d;
                e = !1;
                try {
                    e = !!i.apply;
                } catch (a) {}
                return e ? function() {
                    var e = [];
                    o(arguments, function(t) {
                        e.push(r(t));
                    });
                    return i.apply(t, e);
                } : function(e, t) {
                    i(e, null == t ? "" : t);
                };
            }
            return {
                log: i("log"),
                info: i("info"),
                warn: i("warn"),
                error: i("error"),
                debug: function() {
                    var n = i("debug");
                    return function() {
                        e && n.apply(t, arguments);
                    };
                }()
            };
        } ];
    }
    function on(e, t) {
        if ("__defineGetter__" === e || "__defineSetter__" === e || "__lookupGetter__" === e || "__lookupSetter__" === e || "__proto__" === e) throw Ur("isecfld", t);
        return e;
    }
    function an(e, t) {
        if (e) {
            if (e.constructor === e) throw Ur("isecfn", t);
            if (e.document && e.location && e.alert && e.setInterval) throw Ur("isecwindow", t);
            if (e.children && (e.nodeName || e.prop && e.attr && e.find)) throw Ur("isecdom", t);
            if (e === Object) throw Ur("isecobj", t);
        }
        return e;
    }
    function sn(e, t, r, i, o) {
        an(e, i);
        o = o || {};
        t = t.split(".");
        for (var a, s = 0; 1 < t.length; s++) {
            a = on(t.shift(), i);
            var c = an(e[a], i);
            c || (c = {}, e[a] = c);
            e = c;
            e.then && o.unwrapPromises && (Or(i), "$$v" in e || function(e) {
                e.then(function(t) {
                    e.$$v = t;
                });
            }(e), e.$$v === n && (e.$$v = {}), e = e.$$v);
        }
        a = on(t.shift(), i);
        an(e[a], i);
        return e[a] = r;
    }
    function cn(e, t, r, i, o, a, s) {
        on(e, a);
        on(t, a);
        on(r, a);
        on(i, a);
        on(o, a);
        return s.unwrapPromises ? function(s, c) {
            var l = c && c.hasOwnProperty(e) ? c : s, u;
            if (null == l) return l;
            (l = l[e]) && l.then && (Or(a), "$$v" in l || (u = l, u.$$v = n, u.then(function(e) {
                u.$$v = e;
            })), l = l.$$v);
            if (!t) return l;
            if (null == l) return n;
            (l = l[t]) && l.then && (Or(a), "$$v" in l || (u = l, u.$$v = n, u.then(function(e) {
                u.$$v = e;
            })), l = l.$$v);
            if (!r) return l;
            if (null == l) return n;
            (l = l[r]) && l.then && (Or(a), "$$v" in l || (u = l, u.$$v = n, u.then(function(e) {
                u.$$v = e;
            })), l = l.$$v);
            if (!i) return l;
            if (null == l) return n;
            (l = l[i]) && l.then && (Or(a), "$$v" in l || (u = l, u.$$v = n, u.then(function(e) {
                u.$$v = e;
            })), l = l.$$v);
            if (!o) return l;
            if (null == l) return n;
            (l = l[o]) && l.then && (Or(a), "$$v" in l || (u = l, u.$$v = n, u.then(function(e) {
                u.$$v = e;
            })), l = l.$$v);
            return l;
        } : function(a, s) {
            var c = s && s.hasOwnProperty(e) ? s : a;
            if (null == c) return c;
            c = c[e];
            if (!t) return c;
            if (null == c) return n;
            c = c[t];
            if (!r) return c;
            if (null == c) return n;
            c = c[r];
            if (!i) return c;
            if (null == c) return n;
            c = c[i];
            return o ? null == c ? n : c = c[o] : c;
        };
    }
    function ln(e, t, r) {
        if (Xr.hasOwnProperty(e)) return Xr[e];
        var i = e.split("."), a = i.length, s;
        if (t.csp) s = 6 > a ? cn(i[0], i[1], i[2], i[3], i[4], r, t) : function(e, o) {
            var s = 0, c;
            do c = cn(i[s++], i[s++], i[s++], i[s++], i[s++], r, t)(e, o), o = n, e = c; while (s < a);
            return c;
        }; else {
            var c = "var p;\n";
            o(i, function(e, n) {
                on(e, r);
                c += "if(s == null) return undefined;\ns=" + (n ? "s" : '((k&&k.hasOwnProperty("' + e + '"))?k:s)') + '["' + e + '"];\n' + (t.unwrapPromises ? 'if (s && s.then) {\n pw("' + r.replace(/(["\r\n])/g, "\\$1") + '");\n if (!("$$v" in s)) {\n p=s;\n p.$$v = undefined;\n p.then(function(v) {p.$$v=v;});\n}\n s=s.$$v\n}\n' : "");
            });
            var c = c + "return s;", l = new Function("s", "k", "pw", c);
            l.toString = E(c);
            s = t.unwrapPromises ? function(e, t) {
                return l(e, t, Or);
            } : l;
        }
        "hasOwnProperty" !== e && (Xr[e] = s);
        return s;
    }
    function un() {
        var e = {}, t = {
            csp: !1,
            unwrapPromises: !1,
            logPromiseWarnings: !0
        };
        this.unwrapPromises = function(e) {
            return g(e) ? (t.unwrapPromises = !!e, this) : t.unwrapPromises;
        };
        this.logPromiseWarnings = function(e) {
            return g(e) ? (t.logPromiseWarnings = e, this) : t.logPromiseWarnings;
        };
        this.$get = [ "$filter", "$sniffer", "$log", function(n, r, i) {
            t.csp = r.csp;
            Or = function(e) {
                t.logPromiseWarnings && !Vr.hasOwnProperty(e) && (Vr[e] = !0, i.warn("[$parse] Promise found in the expression `" + e + "`. Automatic unwrapping of promises in Angular expressions is deprecated."));
            };
            return function(r) {
                var i;
                switch (typeof r) {
                  case "string":
                    if (e.hasOwnProperty(r)) return e[r];
                    i = new Gr(t);
                    i = new Wr(i, n, t).parse(r);
                    "hasOwnProperty" !== r && (e[r] = i);
                    return i;

                  case "function":
                    return r;

                  default:
                    return d;
                }
            };
        } ];
    }
    function hn() {
        this.$get = [ "$rootScope", "$exceptionHandler", function(e, t) {
            return fn(function(t) {
                e.$evalAsync(t);
            }, t);
        } ];
    }
    function fn(e, t) {
        function r(e) {
            return e;
        }
        function i(e) {
            return c(e);
        }
        var a = function() {
            var o = [], c, u;
            return u = {
                resolve: function(t) {
                    if (o) {
                        var r = o;
                        o = n;
                        c = s(t);
                        r.length && e(function() {
                            for (var e, t = 0, n = r.length; t < n; t++) e = r[t], c.then(e[0], e[1], e[2]);
                        });
                    }
                },
                reject: function(e) {
                    u.resolve(l(e));
                },
                notify: function(t) {
                    if (o) {
                        var n = o;
                        o.length && e(function() {
                            for (var e, r = 0, i = n.length; r < i; r++) e = n[r], e[2](t);
                        });
                    }
                },
                promise: {
                    then: function(e, n, s) {
                        var l = a(), u = function(n) {
                            try {
                                l.resolve((_(e) ? e : r)(n));
                            } catch (i) {
                                l.reject(i), t(i);
                            }
                        }, h = function(e) {
                            try {
                                l.resolve((_(n) ? n : i)(e));
                            } catch (r) {
                                l.reject(r), t(r);
                            }
                        }, f = function(e) {
                            try {
                                l.notify((_(s) ? s : r)(e));
                            } catch (n) {
                                t(n);
                            }
                        };
                        o ? o.push([ u, h, f ]) : c.then(u, h, f);
                        return l.promise;
                    },
                    "catch": function(e) {
                        return this.then(null, e);
                    },
                    "finally": function(e) {
                        function t(e, t) {
                            var n = a();
                            t ? n.resolve(e) : n.reject(e);
                            return n.promise;
                        }
                        function n(n, i) {
                            var o = null;
                            try {
                                o = (e || r)();
                            } catch (a) {
                                return t(a, !1);
                            }
                            return o && _(o.then) ? o.then(function() {
                                return t(n, i);
                            }, function(e) {
                                return t(e, !1);
                            }) : t(n, i);
                        }
                        return this.then(function(e) {
                            return n(e, !0);
                        }, function(e) {
                            return n(e, !1);
                        });
                    }
                }
            };
        }, s = function(t) {
            return t && _(t.then) ? t : {
                then: function(n) {
                    var r = a();
                    e(function() {
                        r.resolve(n(t));
                    });
                    return r.promise;
                }
            };
        }, c = function(e) {
            var t = a();
            t.reject(e);
            return t.promise;
        }, l = function(n) {
            return {
                then: function(r, o) {
                    var s = a();
                    e(function() {
                        try {
                            s.resolve((_(o) ? o : i)(n));
                        } catch (e) {
                            s.reject(e), t(e);
                        }
                    });
                    return s.promise;
                }
            };
        };
        return {
            defer: a,
            reject: c,
            when: function(n, o, l, u) {
                var h = a(), f, p = function(e) {
                    try {
                        return (_(o) ? o : r)(e);
                    } catch (n) {
                        return t(n), c(n);
                    }
                }, d = function(e) {
                    try {
                        return (_(l) ? l : i)(e);
                    } catch (n) {
                        return t(n), c(n);
                    }
                }, m = function(e) {
                    try {
                        return (_(u) ? u : r)(e);
                    } catch (n) {
                        t(n);
                    }
                };
                e(function() {
                    s(n).then(function(e) {
                        f || (f = !0, h.resolve(s(e).then(p, d, m)));
                    }, function(e) {
                        f || (f = !0, h.resolve(d(e)));
                    }, function(e) {
                        f || h.notify(m(e));
                    });
                });
                return h.promise;
            },
            all: function(e) {
                var t = a(), n = 0, r = ir(e) ? [] : {};
                o(e, function(e, i) {
                    n++;
                    s(e).then(function(e) {
                        r.hasOwnProperty(i) || (r[i] = e, --n || t.resolve(r));
                    }, function(e) {
                        r.hasOwnProperty(i) || t.reject(e);
                    });
                });
                0 === n && t.resolve(r);
                return t.promise;
            }
        };
    }
    function pn() {
        this.$get = [ "$window", "$timeout", function(e, t) {
            var n = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame, r = e.cancelAnimationFrame || e.webkitCancelAnimationFrame || e.mozCancelAnimationFrame || e.webkitCancelRequestAnimationFrame, i = !!n, o = i ? function(e) {
                var t = n(e);
                return function() {
                    r(t);
                };
            } : function(e) {
                var n = t(e, 16.66, !1);
                return function() {
                    t.cancel(n);
                };
            };
            o.supported = i;
            return o;
        } ];
    }
    function dn() {
        var e = 10, t = r("$rootScope"), n = null;
        this.digestTtl = function(t) {
            arguments.length && (e = t);
            return e;
        };
        this.$get = [ "$injector", "$exceptionHandler", "$parse", "$browser", function(r, a, s, c) {
            function u() {
                this.$id = l();
                this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null;
                this["this"] = this.$root = this;
                this.$$destroyed = !1;
                this.$$asyncQueue = [];
                this.$$postDigestQueue = [];
                this.$$listeners = {};
                this.$$listenerCount = {};
                this.$$isolateBindings = {};
            }
            function h(e) {
                if (E.$$phase) throw t("inprog", E.$$phase);
                E.$$phase = e;
            }
            function f(e, t) {
                var n = s(e);
                Y(n, t);
                return n;
            }
            function p(e, t, n) {
                do e.$$listenerCount[n] -= t, 0 === e.$$listenerCount[n] && delete e.$$listenerCount[n]; while (e = e.$parent);
            }
            function m() {}
            u.prototype = {
                constructor: u,
                $new: function(e) {
                    e ? (e = new u(), e.$root = this.$root, e.$$asyncQueue = this.$$asyncQueue, e.$$postDigestQueue = this.$$postDigestQueue) : (this.$$childScopeClass || (this.$$childScopeClass = function() {
                        this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null;
                        this.$$listeners = {};
                        this.$$listenerCount = {};
                        this.$id = l();
                        this.$$childScopeClass = null;
                    }, this.$$childScopeClass.prototype = this), e = new this.$$childScopeClass());
                    e["this"] = e;
                    e.$parent = this;
                    e.$$prevSibling = this.$$childTail;
                    this.$$childHead ? this.$$childTail = this.$$childTail.$$nextSibling = e : this.$$childHead = this.$$childTail = e;
                    return e;
                },
                $watch: function(e, t, r) {
                    var i = f(e, "watch"), o = this.$$watchers, a = {
                        fn: t,
                        last: m,
                        get: i,
                        exp: e,
                        eq: !!r
                    };
                    n = null;
                    if (!_(t)) {
                        var s = f(t || d, "listener");
                        a.fn = function(e, t, n) {
                            s(n);
                        };
                    }
                    if ("string" == typeof e && i.constant) {
                        var c = a.fn;
                        a.fn = function(e, t, n) {
                            c.call(this, e, t, n);
                            C(o, a);
                        };
                    }
                    o || (o = this.$$watchers = []);
                    o.unshift(a);
                    return function() {
                        C(o, a);
                        n = null;
                    };
                },
                $watchCollection: function(e, t) {
                    var n = this, r, o, a, c = 1 < t.length, l = 0, u = s(e), h = [], f = {}, p = !0, d = 0;
                    return this.$watch(function() {
                        r = u(n);
                        var e, t, a;
                        if (y(r)) if (i(r)) for (o !== h && (o = h, d = o.length = 0, l++), e = r.length, 
                        d !== e && (l++, o.length = d = e), t = 0; t < e; t++) a = o[t] !== o[t] && r[t] !== r[t], 
                        a || o[t] === r[t] || (l++, o[t] = r[t]); else {
                            o !== f && (o = f = {}, d = 0, l++);
                            e = 0;
                            for (t in r) r.hasOwnProperty(t) && (e++, o.hasOwnProperty(t) ? (a = o[t] !== o[t] && r[t] !== r[t], 
                            a || o[t] === r[t] || (l++, o[t] = r[t])) : (d++, o[t] = r[t], l++));
                            if (d > e) for (t in l++, o) o.hasOwnProperty(t) && !r.hasOwnProperty(t) && (d--, 
                            delete o[t]);
                        } else o !== r && (o = r, l++);
                        return l;
                    }, function() {
                        p ? (p = !1, t(r, r, n)) : t(r, a, n);
                        if (c) if (y(r)) if (i(r)) {
                            a = Array(r.length);
                            for (var e = 0; e < r.length; e++) a[e] = r[e];
                        } else for (e in a = {}, r) Gn.call(r, e) && (a[e] = r[e]); else a = r;
                    });
                },
                $digest: function() {
                    var r, i, o, s, l = this.$$asyncQueue, u = this.$$postDigestQueue, f, p, d = e, v, g = [], y, T, x;
                    h("$digest");
                    c.$$checkUrlChange();
                    n = null;
                    do {
                        p = !1;
                        for (v = this; l.length; ) {
                            try {
                                x = l.shift(), x.scope.$eval(x.expression);
                            } catch (R) {
                                E.$$phase = null, a(R);
                            }
                            n = null;
                        }
                        e: do {
                            if (s = v.$$watchers) for (f = s.length; f--; ) try {
                                if (r = s[f]) if ((i = r.get(v)) !== (o = r.last) && !(r.eq ? k(i, o) : "number" === typeof i && "number" === typeof o && isNaN(i) && isNaN(o))) p = !0, 
                                n = r, r.last = r.eq ? A(i, null) : i, r.fn(i, o === m ? i : o, v), 5 > d && (y = 4 - d, 
                                g[y] || (g[y] = []), T = _(r.exp) ? "fn: " + (r.exp.name || r.exp.toString()) : r.exp, 
                                T += "; newVal: " + D(i) + "; oldVal: " + D(o), g[y].push(T)); else if (r === n) {
                                    p = !1;
                                    break e;
                                }
                            } catch (b) {
                                E.$$phase = null, a(b);
                            }
                            if (!(s = v.$$childHead || v !== this && v.$$nextSibling)) for (;v !== this && !(s = v.$$nextSibling); ) v = v.$parent;
                        } while (v = s);
                        if ((p || l.length) && !d--) throw E.$$phase = null, t("infdig", e, D(g));
                    } while (p || l.length);
                    for (E.$$phase = null; u.length; ) try {
                        u.shift()();
                    } catch (w) {
                        a(w);
                    }
                },
                $destroy: function() {
                    if (!this.$$destroyed) {
                        var e = this.$parent;
                        this.$broadcast("$destroy");
                        this.$$destroyed = !0;
                        this !== E && (o(this.$$listenerCount, L(null, p, this)), e.$$childHead == this && (e.$$childHead = this.$$nextSibling), 
                        e.$$childTail == this && (e.$$childTail = this.$$prevSibling), this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling), 
                        this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling), this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = this.$root = null, 
                        this.$$listeners = {}, this.$$watchers = this.$$asyncQueue = this.$$postDigestQueue = [], 
                        this.$destroy = this.$digest = this.$apply = d, this.$on = this.$watch = function() {
                            return d;
                        });
                    }
                },
                $eval: function(e, t) {
                    return s(e)(this, t);
                },
                $evalAsync: function(e) {
                    E.$$phase || E.$$asyncQueue.length || c.defer(function() {
                        E.$$asyncQueue.length && E.$digest();
                    });
                    this.$$asyncQueue.push({
                        scope: this,
                        expression: e
                    });
                },
                $$postDigest: function(e) {
                    this.$$postDigestQueue.push(e);
                },
                $apply: function(e) {
                    try {
                        return h("$apply"), this.$eval(e);
                    } catch (t) {
                        a(t);
                    } finally {
                        E.$$phase = null;
                        try {
                            E.$digest();
                        } catch (n) {
                            throw a(n), n;
                        }
                    }
                },
                $on: function(e, t) {
                    var n = this.$$listeners[e];
                    n || (this.$$listeners[e] = n = []);
                    n.push(t);
                    var r = this;
                    do r.$$listenerCount[e] || (r.$$listenerCount[e] = 0), r.$$listenerCount[e]++; while (r = r.$parent);
                    var i = this;
                    return function() {
                        n[M(n, t)] = null;
                        p(i, 1, e);
                    };
                },
                $emit: function(e, t) {
                    var n = [], r, i = this, o = !1, s = {
                        name: e,
                        targetScope: i,
                        stopPropagation: function() {
                            o = !0;
                        },
                        preventDefault: function() {
                            s.defaultPrevented = !0;
                        },
                        defaultPrevented: !1
                    }, c = [ s ].concat(Kn.call(arguments, 1)), l, u;
                    do {
                        r = i.$$listeners[e] || n;
                        s.currentScope = i;
                        l = 0;
                        for (u = r.length; l < u; l++) if (r[l]) try {
                            r[l].apply(null, c);
                        } catch (h) {
                            a(h);
                        } else r.splice(l, 1), l--, u--;
                        if (o) break;
                        i = i.$parent;
                    } while (i);
                    return s;
                },
                $broadcast: function(e, t) {
                    for (var n = this, r = this, i = {
                        name: e,
                        targetScope: this,
                        preventDefault: function() {
                            i.defaultPrevented = !0;
                        },
                        defaultPrevented: !1
                    }, o = [ i ].concat(Kn.call(arguments, 1)), s, c; n = r; ) {
                        i.currentScope = n;
                        r = n.$$listeners[e] || [];
                        s = 0;
                        for (c = r.length; s < c; s++) if (r[s]) try {
                            r[s].apply(null, o);
                        } catch (l) {
                            a(l);
                        } else r.splice(s, 1), s--, c--;
                        if (!(r = n.$$listenerCount[e] && n.$$childHead || n !== this && n.$$nextSibling)) for (;n !== this && !(r = n.$$nextSibling); ) n = n.$parent;
                    }
                    return i;
                }
            };
            var E = new u();
            return E;
        } ];
    }
    function mn() {
        var e = /^\s*(https?|ftp|mailto|tel|file):/, t = /^\s*((https?|ftp|file):|data:image\/)/;
        this.aHrefSanitizationWhitelist = function(t) {
            return g(t) ? (e = t, this) : e;
        };
        this.imgSrcSanitizationWhitelist = function(e) {
            return g(e) ? (t = e, this) : t;
        };
        this.$get = function() {
            return function(n, r) {
                var i = r ? t : e, o;
                if (!Xn || 8 <= Xn) if (o = Rn(n).href, "" !== o && !o.match(i)) return "unsafe:" + o;
                return n;
            };
        };
    }
    function En(e) {
        if ("self" === e) return e;
        if (T(e)) {
            if (-1 < e.indexOf("***")) throw qr("iwcard", e);
            e = e.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08").replace("\\*\\*", ".*").replace("\\*", "[^:/.?&;]*");
            return RegExp("^" + e + "$");
        }
        if (b(e)) return RegExp("^" + e.source + "$");
        throw qr("imatcher");
    }
    function vn(e) {
        var t = [];
        g(e) && o(e, function(e) {
            t.push(En(e));
        });
        return t;
    }
    function gn() {
        this.SCE_CONTEXTS = Yr;
        var e = [ "self" ], t = [];
        this.resourceUrlWhitelist = function(t) {
            arguments.length && (e = vn(t));
            return e;
        };
        this.resourceUrlBlacklist = function(e) {
            arguments.length && (t = vn(e));
            return t;
        };
        this.$get = [ "$injector", function(r) {
            function i(e) {
                var t = function(e) {
                    this.$$unwrapTrustedValue = function() {
                        return e;
                    };
                };
                e && (t.prototype = new e());
                t.prototype.valueOf = function() {
                    return this.$$unwrapTrustedValue();
                };
                t.prototype.toString = function() {
                    return this.$$unwrapTrustedValue().toString();
                };
                return t;
            }
            var o = function(e) {
                throw qr("unsafe");
            };
            r.has("$sanitize") && (o = r.get("$sanitize"));
            var a = i(), s = {};
            s[Yr.HTML] = i(a);
            s[Yr.CSS] = i(a);
            s[Yr.URL] = i(a);
            s[Yr.JS] = i(a);
            s[Yr.RESOURCE_URL] = i(s[Yr.URL]);
            return {
                trustAs: function(e, t) {
                    var r = s.hasOwnProperty(e) ? s[e] : null;
                    if (!r) throw qr("icontext", e, t);
                    if (null === t || t === n || "" === t) return t;
                    if ("string" !== typeof t) throw qr("itype", e);
                    return new r(t);
                },
                getTrusted: function(r, i) {
                    if (null === i || i === n || "" === i) return i;
                    var a = s.hasOwnProperty(r) ? s[r] : null;
                    if (a && i instanceof a) return i.$$unwrapTrustedValue();
                    if (r === Yr.RESOURCE_URL) {
                        var a = Rn(i.toString()), c, l, u = !1;
                        c = 0;
                        for (l = e.length; c < l; c++) if ("self" === e[c] ? _n(a) : e[c].exec(a.href)) {
                            u = !0;
                            break;
                        }
                        if (u) for (c = 0, l = t.length; c < l; c++) if ("self" === t[c] ? _n(a) : t[c].exec(a.href)) {
                            u = !1;
                            break;
                        }
                        if (u) return i;
                        throw qr("insecurl", i.toString());
                    }
                    if (r === Yr.HTML) return o(i);
                    throw qr("unsafe");
                },
                valueOf: function(e) {
                    return e instanceof a ? e.$$unwrapTrustedValue() : e;
                }
            };
        } ];
    }
    function yn() {
        var e = !0;
        this.enabled = function(t) {
            arguments.length && (e = !!t);
            return e;
        };
        this.$get = [ "$parse", "$sniffer", "$sceDelegate", function(t, n, r) {
            if (e && n.msie && 8 > n.msieDocumentMode) throw qr("iequirks");
            var i = P(Yr);
            i.isEnabled = function() {
                return e;
            };
            i.trustAs = r.trustAs;
            i.getTrusted = r.getTrusted;
            i.valueOf = r.valueOf;
            e || (i.trustAs = i.getTrusted = function(e, t) {
                return t;
            }, i.valueOf = m);
            i.parseAs = function(e, n) {
                var r = t(n);
                return r.literal && r.constant ? r : function(t, n) {
                    return i.getTrusted(e, r(t, n));
                };
            };
            var a = i.parseAs, s = i.getTrusted, c = i.trustAs;
            o(Yr, function(e, t) {
                var n = In(t);
                i[tt("parse_as_" + n)] = function(t) {
                    return a(e, t);
                };
                i[tt("get_trusted_" + n)] = function(t) {
                    return s(e, t);
                };
                i[tt("trust_as_" + n)] = function(t) {
                    return c(e, t);
                };
            });
            return i;
        } ];
    }
    function Tn() {
        this.$get = [ "$window", "$document", function(e, t) {
            var n = {}, r = f((/android (\d+)/.exec(In((e.navigator || {}).userAgent)) || [])[1]), i = /Boxee/i.test((e.navigator || {}).userAgent), o = t[0] || {}, a = o.documentMode, s, c = /^(Moz|webkit|O|ms)(?=[A-Z])/, l = o.body && o.body.style, u = !1, h = !1;
            if (l) {
                for (var p in l) if (u = c.exec(p)) {
                    s = u[0];
                    s = s.substr(0, 1).toUpperCase() + s.substr(1);
                    break;
                }
                s || (s = "WebkitOpacity" in l && "webkit");
                u = !!("transition" in l || s + "Transition" in l);
                h = !!("animation" in l || s + "Animation" in l);
                !r || u && h || (u = T(o.body.style.webkitTransition), h = T(o.body.style.webkitAnimation));
            }
            return {
                history: !(!e.history || !e.history.pushState || 4 > r || i),
                hashchange: "onhashchange" in e && (!a || 7 < a),
                hasEvent: function(e) {
                    if ("input" == e && 9 == Xn) return !1;
                    if (v(n[e])) {
                        var t = o.createElement("div");
                        n[e] = "on" + e in t;
                    }
                    return n[e];
                },
                csp: ar(),
                vendorPrefix: s,
                transitions: u,
                animations: h,
                android: r,
                msie: Xn,
                msieDocumentMode: a
            };
        } ];
    }
    function xn() {
        this.$get = [ "$rootScope", "$browser", "$q", "$exceptionHandler", function(e, t, n, r) {
            function i(i, a, s) {
                var c = n.defer(), l = c.promise, u = g(s) && !s;
                a = t.defer(function() {
                    try {
                        c.resolve(i());
                    } catch (t) {
                        c.reject(t), r(t);
                    } finally {
                        delete o[l.$$timeoutId];
                    }
                    u || e.$apply();
                }, a);
                l.$$timeoutId = a;
                o[a] = c;
                return l;
            }
            var o = {};
            i.cancel = function(e) {
                return e && e.$$timeoutId in o ? (o[e.$$timeoutId].reject("canceled"), delete o[e.$$timeoutId], 
                t.defer.cancel(e.$$timeoutId)) : !1;
            };
            return i;
        } ];
    }
    function Rn(e, t) {
        var n = e;
        Xn && (Kr.setAttribute("href", n), n = Kr.href);
        Kr.setAttribute("href", n);
        return {
            href: Kr.href,
            protocol: Kr.protocol ? Kr.protocol.replace(/:$/, "") : "",
            host: Kr.host,
            search: Kr.search ? Kr.search.replace(/^\?/, "") : "",
            hash: Kr.hash ? Kr.hash.replace(/^#/, "") : "",
            hostname: Kr.hostname,
            port: Kr.port,
            pathname: "/" === Kr.pathname.charAt(0) ? Kr.pathname : "/" + Kr.pathname
        };
    }
    function _n(e) {
        e = T(e) ? Rn(e) : e;
        return e.protocol === Zr.protocol && e.host === Zr.host;
    }
    function bn() {
        this.$get = E(e);
    }
    function wn(e) {
        function t(r, i) {
            if (y(r)) {
                var a = {};
                o(r, function(e, n) {
                    a[n] = t(n, e);
                });
                return a;
            }
            return e.factory(r + n, i);
        }
        var n = "Filter";
        this.register = t;
        this.$get = [ "$injector", function(e) {
            return function(t) {
                return e.get(t + n);
            };
        } ];
        t("currency", Sn);
        t("date", $n);
        t("filter", Hn);
        t("json", kn);
        t("limitTo", Ln);
        t("lowercase", ni);
        t("number", Mn);
        t("orderBy", Fn);
        t("uppercase", ri);
    }
    function Hn() {
        return function(e, t, n) {
            if (!ir(e)) return e;
            var r = typeof n, i = [];
            i.check = function(e) {
                for (var t = 0; t < i.length; t++) if (!i[t](e)) return !1;
                return !0;
            };
            "function" !== r && (n = "boolean" === r && n ? function(e, t) {
                return er.equals(e, t);
            } : function(e, t) {
                if (e && t && "object" === typeof e && "object" === typeof t) {
                    for (var r in e) if ("$" !== r.charAt(0) && Gn.call(e, r) && n(e[r], t[r])) return !0;
                    return !1;
                }
                t = ("" + t).toLowerCase();
                return -1 < ("" + e).toLowerCase().indexOf(t);
            });
            var o = function(e, t) {
                if ("string" == typeof t && "!" === t.charAt(0)) return !o(e, t.substr(1));
                switch (typeof e) {
                  case "boolean":
                  case "number":
                  case "string":
                    return n(e, t);

                  case "object":
                    switch (typeof t) {
                      case "object":
                        return n(e, t);

                      default:
                        for (var r in e) if ("$" !== r.charAt(0) && o(e[r], t)) return !0;
                    }
                    return !1;

                  case "array":
                    for (r = 0; r < e.length; r++) if (o(e[r], t)) return !0;
                    return !1;

                  default:
                    return !1;
                }
            };
            switch (typeof t) {
              case "boolean":
              case "number":
              case "string":
                t = {
                    $: t
                };

              case "object":
                for (var a in t) (function(e) {
                    "undefined" !== typeof t[e] && i.push(function(n) {
                        return o("$" == e ? n : n && n[e], t[e]);
                    });
                })(a);
                break;

              case "function":
                i.push(t);
                break;

              default:
                return e;
            }
            r = [];
            for (a = 0; a < e.length; a++) {
                var s = e[a];
                i.check(s) && r.push(s);
            }
            return r;
        };
    }
    function Sn(e) {
        var t = e.NUMBER_FORMATS;
        return function(e, n) {
            v(n) && (n = t.CURRENCY_SYM);
            return Cn(e, t.PATTERNS[1], t.GROUP_SEP, t.DECIMAL_SEP, 2).replace(/\u00A4/g, n);
        };
    }
    function Mn(e) {
        var t = e.NUMBER_FORMATS;
        return function(e, n) {
            return Cn(e, t.PATTERNS[0], t.GROUP_SEP, t.DECIMAL_SEP, n);
        };
    }
    function Cn(e, t, n, r, i) {
        if (null == e || !isFinite(e) || y(e)) return "";
        var o = 0 > e;
        e = Math.abs(e);
        var a = e + "", s = "", c = [], l = !1;
        if (-1 !== a.indexOf("e")) {
            var u = a.match(/([\d\.]+)e(-?)(\d+)/);
            u && "-" == u[2] && u[3] > i + 1 ? (a = "0", e = 0) : (s = a, l = !0);
        }
        if (l) 0 < i && (-1 < e && 1 > e) && (s = e.toFixed(i)); else {
            a = (a.split(Qr)[1] || "").length;
            v(i) && (i = Math.min(Math.max(t.minFrac, a), t.maxFrac));
            e = +(Math.round(+(e.toString() + "e" + i)).toString() + "e" + -i);
            0 === e && (o = !1);
            e = ("" + e).split(Qr);
            a = e[0];
            e = e[1] || "";
            var u = 0, h = t.lgSize, f = t.gSize;
            if (a.length >= h + f) for (u = a.length - h, l = 0; l < u; l++) 0 === (u - l) % f && 0 !== l && (s += n), 
            s += a.charAt(l);
            for (l = u; l < a.length; l++) 0 === (a.length - l) % h && 0 !== l && (s += n), 
            s += a.charAt(l);
            for (;e.length < i; ) e += "0";
            i && "0" !== i && (s += r + e.substr(0, i));
        }
        c.push(o ? t.negPre : t.posPre);
        c.push(s);
        c.push(o ? t.negSuf : t.posSuf);
        return c.join("");
    }
    function An(e, t, n) {
        var r = "";
        0 > e && (r = "-", e = -e);
        for (e = "" + e; e.length < t; ) e = "0" + e;
        n && (e = e.substr(e.length - t));
        return r + e;
    }
    function $(e, t, n, r) {
        n = n || 0;
        return function(i) {
            i = i["get" + e]();
            if (0 < n || i > -n) i += n;
            0 === i && -12 == n && (i = 12);
            return An(i, t, r);
        };
    }
    function Pn(e, t) {
        return function(n, r) {
            var i = n["get" + e](), o = Wn(t ? "SHORT" + e : e);
            return r[o][i];
        };
    }
    function $n(e) {
        function t(e) {
            var t;
            if (t = e.match(n)) {
                e = new Date(0);
                var r = 0, i = 0, o = t[8] ? e.setUTCFullYear : e.setFullYear, a = t[8] ? e.setUTCHours : e.setHours;
                t[9] && (r = f(t[9] + t[10]), i = f(t[9] + t[11]));
                o.call(e, f(t[1]), f(t[2]) - 1, f(t[3]));
                r = f(t[4] || 0) - r;
                i = f(t[5] || 0) - i;
                o = f(t[6] || 0);
                t = Math.round(1e3 * parseFloat("0." + (t[7] || 0)));
                a.call(e, r, i, o, t);
            }
            return e;
        }
        var n = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
        return function(n, r) {
            var i = "", a = [], s, c;
            r = r || "mediumDate";
            r = e.DATETIME_FORMATS[r] || r;
            T(n) && (n = ti.test(n) ? f(n) : t(n));
            x(n) && (n = new Date(n));
            if (!R(n)) return n;
            for (;r; ) (c = ei.exec(r)) ? (a = a.concat(Kn.call(c, 1)), r = a.pop()) : (a.push(r), 
            r = null);
            o(a, function(t) {
                s = Jr[t];
                i += s ? s(n, e.DATETIME_FORMATS) : t.replace(/(^'|'$)/g, "").replace(/''/g, "'");
            });
            return i;
        };
    }
    function kn() {
        return function(e) {
            return D(e, !0);
        };
    }
    function Ln() {
        return function(e, t) {
            if (!ir(e) && !T(e)) return e;
            t = Infinity === Math.abs(Number(t)) ? Number(t) : f(t);
            if (T(e)) return t ? 0 <= t ? e.slice(0, t) : e.slice(t, e.length) : "";
            var n = [], r, i;
            t > e.length ? t = e.length : t < -e.length && (t = -e.length);
            0 < t ? (r = 0, i = t) : (r = e.length + t, i = e.length);
            for (;r < i; r++) n.push(e[r]);
            return n;
        };
    }
    function Fn(e) {
        return function(t, n, r) {
            function o(e, t) {
                return V(t) ? function(t, n) {
                    return e(n, t);
                } : e;
            }
            function a(e, t) {
                var n = typeof e, r = typeof t;
                return n == r ? (R(e) && R(t) && (e = e.valueOf(), t = t.valueOf()), "string" == n && (e = e.toLowerCase(), 
                t = t.toLowerCase()), e === t ? 0 : e < t ? -1 : 1) : n < r ? -1 : 1;
            }
            if (!i(t) || !n) return t;
            n = ir(n) ? n : [ n ];
            n = S(n, function(t) {
                var n = !1, r = t || m;
                if (T(t)) {
                    if ("+" == t.charAt(0) || "-" == t.charAt(0)) n = "-" == t.charAt(0), t = t.substring(1);
                    r = e(t);
                    if (r.constant) {
                        var i = r();
                        return o(function(e, t) {
                            return a(e[i], t[i]);
                        }, n);
                    }
                }
                return o(function(e, t) {
                    return a(r(e), r(t));
                }, n);
            });
            for (var s = [], c = 0; c < t.length; c++) s.push(t[c]);
            return s.sort(o(function(e, t) {
                for (var r = 0; r < n.length; r++) {
                    var i = n[r](e, t);
                    if (0 !== i) return i;
                }
                return 0;
            }, r));
        };
    }
    function Dn(e) {
        _(e) && (e = {
            link: e
        });
        e.restrict = e.restrict || "AC";
        return E(e);
    }
    function Un(e, t, n, r) {
        function i(t, n) {
            n = n ? "-" + X(n, "-") : "";
            r.setClass(e, (t ? Ei : vi) + n, (t ? vi : Ei) + n);
        }
        var a = this, s = e.parent().controller("form") || ai, c = 0, l = a.$error = {}, u = [];
        a.$name = t.name || t.ngForm;
        a.$dirty = !1;
        a.$pristine = !0;
        a.$valid = !0;
        a.$invalid = !1;
        s.$addControl(a);
        e.addClass(gi);
        i(!0);
        a.$addControl = function(e) {
            K(e.$name, "input");
            u.push(e);
            e.$name && (a[e.$name] = e);
        };
        a.$removeControl = function(e) {
            e.$name && a[e.$name] === e && delete a[e.$name];
            o(l, function(t, n) {
                a.$setValidity(n, !0, e);
            });
            C(u, e);
        };
        a.$setValidity = function(e, t, n) {
            var r = l[e];
            if (t) r && (C(r, n), r.length || (c--, c || (i(t), a.$valid = !0, a.$invalid = !1), 
            l[e] = !1, i(!0, e), s.$setValidity(e, !0, a))); else {
                c || i(t);
                if (r) {
                    if (-1 != M(r, n)) return;
                } else l[e] = r = [], c++, i(!1, e), s.$setValidity(e, !1, a);
                r.push(n);
                a.$valid = !1;
                a.$invalid = !0;
            }
        };
        a.$setDirty = function() {
            r.removeClass(e, gi);
            r.addClass(e, yi);
            a.$dirty = !0;
            a.$pristine = !1;
            s.$setDirty();
        };
        a.$setPristine = function() {
            r.removeClass(e, yi);
            r.addClass(e, gi);
            a.$dirty = !1;
            a.$pristine = !0;
            o(u, function(e) {
                e.$setPristine();
            });
        };
    }
    function Vn(e, t, r, i) {
        e.$setValidity(t, r);
        return r ? i : n;
    }
    function On(e, t) {
        var n, r;
        if (t) for (n = 0; n < t.length; ++n) if (r = t[n], e[r]) return !0;
        return !1;
    }
    function zn(e, t, n, r, i) {
        y(i) && (e.$$hasNativeValidators = !0, e.$parsers.push(function(o) {
            if (e.$error[t] || On(i, r) || !On(i, n)) return o;
            e.$setValidity(t, !1);
        }));
    }
    function Bn(e, t, n, i, o, a) {
        var s = t.prop(Nn), c = t[0].placeholder, l = {}, u = In(t[0].type);
        i.$$validityState = s;
        if (!o.android) {
            var h = !1;
            t.on("compositionstart", function(e) {
                h = !0;
            });
            t.on("compositionend", function() {
                h = !1;
                p();
            });
        }
        var p = function(r) {
            if (!h) {
                var o = t.val();
                if (Xn && "input" === (r || l).type && t[0].placeholder !== c) c = t[0].placeholder; else if ("password" !== u && V(n.ngTrim || "T") && (o = or(o)), 
                r = s && i.$$hasNativeValidators, i.$viewValue !== o || "" === o && r) e.$root.$$phase ? i.$setViewValue(o) : e.$apply(function() {
                    i.$setViewValue(o);
                });
            }
        };
        if (o.hasEvent("input")) t.on("input", p); else {
            var d, m = function() {
                d || (d = a.defer(function() {
                    p();
                    d = null;
                }));
            };
            t.on("keydown", function(e) {
                e = e.keyCode;
                91 === e || (15 < e && 19 > e || 37 <= e && 40 >= e) || m();
            });
            if (o.hasEvent("paste")) t.on("paste cut", m);
        }
        t.on("change", p);
        i.$render = function() {
            t.val(i.$isEmpty(i.$viewValue) ? "" : i.$viewValue);
        };
        var E = n.ngPattern;
        E && ((o = E.match(/^\/(.*)\/([gim]*)$/)) ? (E = RegExp(o[1], o[2]), o = function(e) {
            return Vn(i, "pattern", i.$isEmpty(e) || E.test(e), e);
        }) : o = function(n) {
            var o = e.$eval(E);
            if (!o || !o.test) throw r("ngPattern")("noregexp", E, o, O(t));
            return Vn(i, "pattern", i.$isEmpty(n) || o.test(n), n);
        }, i.$formatters.push(o), i.$parsers.push(o));
        if (n.ngMinlength) {
            var v = f(n.ngMinlength);
            o = function(e) {
                return Vn(i, "minlength", i.$isEmpty(e) || e.length >= v, e);
            };
            i.$parsers.push(o);
            i.$formatters.push(o);
        }
        if (n.ngMaxlength) {
            var g = f(n.ngMaxlength);
            o = function(e) {
                return Vn(i, "maxlength", i.$isEmpty(e) || e.length <= g, e);
            };
            i.$parsers.push(o);
            i.$formatters.push(o);
        }
    }
    function jn(e, t) {
        e = "ngClass" + e;
        return [ "$animate", function(n) {
            function r(e, t) {
                var n = [], r = 0;
                e: for (;r < e.length; r++) {
                    for (var i = e[r], o = 0; o < t.length; o++) if (i == t[o]) continue e;
                    n.push(i);
                }
                return n;
            }
            function i(e) {
                if (!ir(e)) {
                    if (T(e)) return e.split(" ");
                    if (y(e)) {
                        var t = [];
                        o(e, function(e, n) {
                            e && (t = t.concat(n.split(" ")));
                        });
                        return t;
                    }
                }
                return e;
            }
            return {
                restrict: "AC",
                link: function(a, s, c) {
                    function l(e, t) {
                        var n = s.data("$classCounts") || {}, r = [];
                        o(e, function(e) {
                            if (0 < t || n[e]) n[e] = (n[e] || 0) + t, n[e] === +(0 < t) && r.push(e);
                        });
                        s.data("$classCounts", n);
                        return r.join(" ");
                    }
                    function u(e) {
                        if (!0 === t || a.$index % 2 === t) {
                            var o = i(e || []);
                            if (!h) {
                                var u = l(o, 1);
                                c.$addClass(u);
                            } else if (!k(e, h)) {
                                var f = i(h), u = r(o, f), o = r(f, o), o = l(o, -1), u = l(u, 1);
                                0 === u.length ? n.removeClass(s, o) : 0 === o.length ? n.addClass(s, u) : n.setClass(s, u, o);
                            }
                        }
                        h = P(e);
                    }
                    var h;
                    a.$watch(c[e], u, !0);
                    c.$observe("class", function(t) {
                        u(a.$eval(c[e]));
                    });
                    "ngClass" !== e && a.$watch("$index", function(n, r) {
                        var o = n & 1;
                        if (o !== (r & 1)) {
                            var s = i(a.$eval(c[e]));
                            o === t ? (o = l(s, 1), c.$addClass(o)) : (o = l(s, -1), c.$removeClass(o));
                        }
                    });
                }
            };
        } ];
    }
    var Nn = "validity", In = function(e) {
        return T(e) ? e.toLowerCase() : e;
    }, Gn = Object.prototype.hasOwnProperty, Wn = function(e) {
        return T(e) ? e.toUpperCase() : e;
    }, Xn, qn, Yn, Kn = [].slice, Zn = [].push, Qn = Object.prototype.toString, Jn = r("ng"), er = e.angular || (e.angular = {}), tr, nr, rr = [ "0", "0", "0" ];
    Xn = f((/msie (\d+)/.exec(In(navigator.userAgent)) || [])[1]);
    isNaN(Xn) && (Xn = f((/trident\/.*; rv:(\d+)/.exec(In(navigator.userAgent)) || [])[1]));
    d.$inject = [];
    m.$inject = [];
    var ir = function() {
        return _(Array.isArray) ? Array.isArray : function(e) {
            return "[object Array]" === Qn.call(e);
        };
    }(), or = function() {
        return String.prototype.trim ? function(e) {
            return T(e) ? e.trim() : e;
        } : function(e) {
            return T(e) ? e.replace(/^\s\s*/, "").replace(/\s\s*$/, "") : e;
        };
    }();
    nr = 9 > Xn ? function(e) {
        e = e.nodeName ? e : e[0];
        return e.scopeName && "HTML" != e.scopeName ? Wn(e.scopeName + ":" + e.nodeName) : e.nodeName;
    } : function(e) {
        return e.nodeName ? e.nodeName : e[0].nodeName;
    };
    var ar = function() {
        if (g(ar.isActive_)) return ar.isActive_;
        var e = !(!t.querySelector("[ng-csp]") && !t.querySelector("[data-ng-csp]"));
        if (!e) try {
            new Function("");
        } catch (n) {
            e = !0;
        }
        return ar.isActive_ = e;
    }, sr = /[A-Z]/g, cr = {
        full: "1.2.26",
        major: 1,
        minor: 2,
        dot: 26,
        codeName: "zucchini-expansion"
    };
    rt.expando = "ng339";
    var lr = rt.cache = {}, ur = 1, hr = e.document.addEventListener ? function(e, t, n) {
        e.addEventListener(t, n, !1);
    } : function(e, t, n) {
        e.attachEvent("on" + t, n);
    }, fr = e.document.removeEventListener ? function(e, t, n) {
        e.removeEventListener(t, n, !1);
    } : function(e, t, n) {
        e.detachEvent("on" + t, n);
    };
    rt._data = function(e) {
        return this.cache[e[this.expando]] || {};
    };
    var pr = /([\:\-\_]+(.))/g, dr = /^moz([A-Z])/, mr = r("jqLite"), Er = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, vr = /<|&#?\w+;/, gr = /<([\w:]+)/, yr = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, Tr = {
        option: [ 1, '<select multiple="multiple">', "</select>" ],
        thead: [ 1, "<table>", "</table>" ],
        col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        _default: [ 0, "", "" ]
    };
    Tr.optgroup = Tr.option;
    Tr.tbody = Tr.tfoot = Tr.colgroup = Tr.caption = Tr.thead;
    Tr.th = Tr.td;
    var xr = rt.prototype = {
        ready: function(n) {
            function r() {
                i || (i = !0, n());
            }
            var i = !1;
            "complete" === t.readyState ? setTimeout(r) : (this.on("DOMContentLoaded", r), rt(e).on("load", r));
        },
        toString: function() {
            var e = [];
            o(this, function(t) {
                e.push("" + t);
            });
            return "[" + e.join(", ") + "]";
        },
        eq: function(e) {
            return 0 <= e ? qn(this[e]) : qn(this[this.length + e]);
        },
        length: 0,
        push: Zn,
        sort: [].sort,
        splice: [].splice
    }, Rr = {};
    o("multiple selected checked disabled readOnly required open".split(" "), function(e) {
        Rr[In(e)] = e;
    });
    var _r = {};
    o("input select option textarea button form details".split(" "), function(e) {
        _r[Wn(e)] = !0;
    });
    o({
        data: lt,
        removeData: st
    }, function(e, t) {
        rt[t] = e;
    });
    o({
        data: lt,
        inheritedData: mt,
        scope: function(e) {
            return qn.data(e, "$scope") || mt(e.parentNode || e, [ "$isolateScope", "$scope" ]);
        },
        isolateScope: function(e) {
            return qn.data(e, "$isolateScope") || qn.data(e, "$isolateScopeNoTemplate");
        },
        controller: dt,
        injector: function(e) {
            return mt(e, "$injector");
        },
        removeAttr: function(e, t) {
            e.removeAttribute(t);
        },
        hasClass: ut,
        css: function(e, t, r) {
            t = tt(t);
            if (g(r)) e.style[t] = r; else {
                var i;
                8 >= Xn && (i = e.currentStyle && e.currentStyle[t], "" === i && (i = "auto"));
                i = i || e.style[t];
                8 >= Xn && (i = "" === i ? n : i);
                return i;
            }
        },
        attr: function(e, t, r) {
            var i = In(t);
            if (Rr[i]) if (g(r)) r ? (e[t] = !0, e.setAttribute(t, i)) : (e[t] = !1, e.removeAttribute(i)); else return e[t] || (e.attributes.getNamedItem(t) || d).specified ? i : n; else if (g(r)) e.setAttribute(t, r); else if (e.getAttribute) return e = e.getAttribute(t, 2), 
            null === e ? n : e;
        },
        prop: function(e, t, n) {
            if (g(n)) e[t] = n; else return e[t];
        },
        text: function() {
            function e(e, n) {
                var r = t[e.nodeType];
                if (v(n)) return r ? e[r] : "";
                e[r] = n;
            }
            var t = [];
            9 > Xn ? (t[1] = "innerText", t[3] = "nodeValue") : t[1] = t[3] = "textContent";
            e.$dv = "";
            return e;
        }(),
        val: function(e, t) {
            if (v(t)) {
                if ("SELECT" === nr(e) && e.multiple) {
                    var n = [];
                    o(e.options, function(e) {
                        e.selected && n.push(e.value || e.text);
                    });
                    return 0 === n.length ? null : n;
                }
                return e.value;
            }
            e.value = t;
        },
        html: function(e, t) {
            if (v(t)) return e.innerHTML;
            for (var n = 0, r = e.childNodes; n < r.length; n++) ot(r[n]);
            e.innerHTML = t;
        },
        empty: Et
    }, function(e, t) {
        rt.prototype[t] = function(t, r) {
            var i, o, a = this.length;
            if (e !== Et && (2 == e.length && e !== ut && e !== dt ? t : r) === n) {
                if (y(t)) {
                    for (i = 0; i < a; i++) if (e === lt) e(this[i], t); else for (o in t) e(this[i], o, t[o]);
                    return this;
                }
                i = e.$dv;
                a = i === n ? Math.min(a, 1) : a;
                for (o = 0; o < a; o++) {
                    var s = e(this[o], t, r);
                    i = i ? i + s : s;
                }
                return i;
            }
            for (i = 0; i < a; i++) e(this[i], t, r);
            return this;
        };
    });
    o({
        removeData: st,
        dealoc: ot,
        on: function ro(e, n, r, i) {
            if (g(i)) throw mr("onargs");
            var a = ct(e, "events"), s = ct(e, "handle");
            a || ct(e, "events", a = {});
            s || ct(e, "handle", s = gt(e, a));
            o(n.split(" "), function(n) {
                var i = a[n];
                if (!i) {
                    if ("mouseenter" == n || "mouseleave" == n) {
                        var o = t.body.contains || t.body.compareDocumentPosition ? function(e, t) {
                            var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode;
                            return e === r || !!(r && 1 === r.nodeType && (n.contains ? n.contains(r) : e.compareDocumentPosition && e.compareDocumentPosition(r) & 16));
                        } : function(e, t) {
                            if (t) for (;t = t.parentNode; ) if (t === e) return !0;
                            return !1;
                        };
                        a[n] = [];
                        ro(e, {
                            mouseleave: "mouseout",
                            mouseenter: "mouseover"
                        }[n], function(e) {
                            var t = e.relatedTarget;
                            t && (t === this || o(this, t)) || s(e, n);
                        });
                    } else hr(e, n, s), a[n] = [];
                    i = a[n];
                }
                i.push(r);
            });
        },
        off: at,
        one: function(e, t, n) {
            e = qn(e);
            e.on(t, function r() {
                e.off(t, n);
                e.off(t, r);
            });
            e.on(t, n);
        },
        replaceWith: function(e, t) {
            var n, r = e.parentNode;
            ot(e);
            o(new rt(t), function(t) {
                n ? r.insertBefore(t, n.nextSibling) : r.replaceChild(t, e);
                n = t;
            });
        },
        children: function(e) {
            var t = [];
            o(e.childNodes, function(e) {
                1 === e.nodeType && t.push(e);
            });
            return t;
        },
        contents: function(e) {
            return e.contentDocument || e.childNodes || [];
        },
        append: function(e, t) {
            o(new rt(t), function(t) {
                1 !== e.nodeType && 11 !== e.nodeType || e.appendChild(t);
            });
        },
        prepend: function(e, t) {
            if (1 === e.nodeType) {
                var n = e.firstChild;
                o(new rt(t), function(t) {
                    e.insertBefore(t, n);
                });
            }
        },
        wrap: function(e, t) {
            t = qn(t)[0];
            var n = e.parentNode;
            n && n.replaceChild(t, e);
            t.appendChild(e);
        },
        remove: function(e) {
            ot(e);
            var t = e.parentNode;
            t && t.removeChild(e);
        },
        after: function(e, t) {
            var n = e, r = e.parentNode;
            o(new rt(t), function(e) {
                r.insertBefore(e, n.nextSibling);
                n = e;
            });
        },
        addClass: ft,
        removeClass: ht,
        toggleClass: function(e, t, n) {
            t && o(t.split(" "), function(t) {
                var r = n;
                v(r) && (r = !ut(e, t));
                (r ? ft : ht)(e, t);
            });
        },
        parent: function(e) {
            return (e = e.parentNode) && 11 !== e.nodeType ? e : null;
        },
        next: function(e) {
            if (e.nextElementSibling) return e.nextElementSibling;
            for (e = e.nextSibling; null != e && 1 !== e.nodeType; ) e = e.nextSibling;
            return e;
        },
        find: function(e, t) {
            return e.getElementsByTagName ? e.getElementsByTagName(t) : [];
        },
        clone: it,
        triggerHandler: function(e, t, n) {
            var r, i;
            r = t.type || t;
            var a = (ct(e, "events") || {})[r];
            a && (r = {
                preventDefault: function() {
                    this.defaultPrevented = !0;
                },
                isDefaultPrevented: function() {
                    return !0 === this.defaultPrevented;
                },
                stopPropagation: d,
                type: r,
                target: e
            }, t.type && (r = h(r, t)), t = P(a), i = n ? [ r ].concat(n) : [ r ], o(t, function(t) {
                t.apply(e, i);
            }));
        }
    }, function(e, t) {
        rt.prototype[t] = function(t, n, r) {
            for (var i, o = 0; o < this.length; o++) v(i) ? (i = e(this[o], t, n, r), g(i) && (i = qn(i))) : pt(i, e(this[o], t, n, r));
            return g(i) ? i : this;
        };
        rt.prototype.bind = rt.prototype.on;
        rt.prototype.unbind = rt.prototype.off;
    });
    Tt.prototype = {
        put: function(e, t) {
            this[yt(e, this.nextUid)] = t;
        },
        get: function(e) {
            return this[yt(e, this.nextUid)];
        },
        remove: function(e) {
            var t = this[e = yt(e, this.nextUid)];
            delete this[e];
            return t;
        }
    };
    var br = /^function\s*[^\(]*\(\s*([^\)]*)\)/m, wr = /,/, Hr = /^\s*(_?)(\S+?)\1\s*$/, Sr = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm, Mr = r("$injector"), Cr = r("$animate"), Ar = [ "$provide", function(e) {
        this.$$selectors = {};
        this.register = function(t, n) {
            var r = t + "-animation";
            if (t && "." != t.charAt(0)) throw Cr("notcsel", t);
            this.$$selectors[t.substr(1)] = r;
            e.factory(r, n);
        };
        this.classNameFilter = function(e) {
            1 === arguments.length && (this.$$classNameFilter = e instanceof RegExp ? e : null);
            return this.$$classNameFilter;
        };
        this.$get = [ "$timeout", "$$asyncCallback", function(e, t) {
            return {
                enter: function(e, n, r, i) {
                    r ? r.after(e) : (n && n[0] || (n = r.parent()), n.append(e));
                    i && t(i);
                },
                leave: function(e, n) {
                    e.remove();
                    n && t(n);
                },
                move: function(e, t, n, r) {
                    this.enter(e, t, n, r);
                },
                addClass: function(e, n, r) {
                    n = T(n) ? n : ir(n) ? n.join(" ") : "";
                    o(e, function(e) {
                        ft(e, n);
                    });
                    r && t(r);
                },
                removeClass: function(e, n, r) {
                    n = T(n) ? n : ir(n) ? n.join(" ") : "";
                    o(e, function(e) {
                        ht(e, n);
                    });
                    r && t(r);
                },
                setClass: function(e, n, r, i) {
                    o(e, function(e) {
                        ft(e, n);
                        ht(e, r);
                    });
                    i && t(i);
                },
                enabled: d
            };
        } ];
    } ], Pr = r("$compile");
    Ct.$inject = [ "$provide", "$$sanitizeUriProvider" ];
    var $r = /^(x[\:\-_]|data[\:\-_])/i, kr = r("$interpolate"), Lr = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/, Fr = {
        http: 80,
        https: 443,
        ftp: 21
    }, Dr = r("$location");
    Jt.prototype = Qt.prototype = Zt.prototype = {
        $$html5: !1,
        $$replace: !1,
        absUrl: en("$$absUrl"),
        url: function(e) {
            if (v(e)) return this.$$url;
            e = Lr.exec(e);
            e[1] && this.path(decodeURIComponent(e[1]));
            (e[2] || e[1]) && this.search(e[3] || "");
            this.hash(e[5] || "");
            return this;
        },
        protocol: en("$$protocol"),
        host: en("$$host"),
        port: en("$$port"),
        path: tn("$$path", function(e) {
            e = e ? e.toString() : "";
            return "/" == e.charAt(0) ? e : "/" + e;
        }),
        search: function(e, t) {
            switch (arguments.length) {
              case 0:
                return this.$$search;

              case 1:
                if (T(e) || x(e)) e = e.toString(), this.$$search = B(e); else if (y(e)) o(e, function(t, n) {
                    null == t && delete e[n];
                }), this.$$search = e; else throw Dr("isrcharg");
                break;

              default:
                v(t) || null === t ? delete this.$$search[e] : this.$$search[e] = t;
            }
            this.$$compose();
            return this;
        },
        hash: tn("$$hash", function(e) {
            return e ? e.toString() : "";
        }),
        replace: function() {
            this.$$replace = !0;
            return this;
        }
    };
    var Ur = r("$parse"), Vr = {}, Or, zr = Function.prototype.call, Br = Function.prototype.apply, jr = Function.prototype.bind, Nr = {
        "null": function() {
            return null;
        },
        "true": function() {
            return !0;
        },
        "false": function() {
            return !1;
        },
        undefined: d,
        "+": function(e, t, r, i) {
            r = r(e, t);
            i = i(e, t);
            return g(r) ? g(i) ? r + i : r : g(i) ? i : n;
        },
        "-": function(e, t, n, r) {
            n = n(e, t);
            r = r(e, t);
            return (g(n) ? n : 0) - (g(r) ? r : 0);
        },
        "*": function(e, t, n, r) {
            return n(e, t) * r(e, t);
        },
        "/": function(e, t, n, r) {
            return n(e, t) / r(e, t);
        },
        "%": function(e, t, n, r) {
            return n(e, t) % r(e, t);
        },
        "^": function(e, t, n, r) {
            return n(e, t) ^ r(e, t);
        },
        "=": d,
        "===": function(e, t, n, r) {
            return n(e, t) === r(e, t);
        },
        "!==": function(e, t, n, r) {
            return n(e, t) !== r(e, t);
        },
        "==": function(e, t, n, r) {
            return n(e, t) == r(e, t);
        },
        "!=": function(e, t, n, r) {
            return n(e, t) != r(e, t);
        },
        "<": function(e, t, n, r) {
            return n(e, t) < r(e, t);
        },
        ">": function(e, t, n, r) {
            return n(e, t) > r(e, t);
        },
        "<=": function(e, t, n, r) {
            return n(e, t) <= r(e, t);
        },
        ">=": function(e, t, n, r) {
            return n(e, t) >= r(e, t);
        },
        "&&": function(e, t, n, r) {
            return n(e, t) && r(e, t);
        },
        "||": function(e, t, n, r) {
            return n(e, t) || r(e, t);
        },
        "&": function(e, t, n, r) {
            return n(e, t) & r(e, t);
        },
        "|": function(e, t, n, r) {
            return r(e, t)(e, t, n(e, t));
        },
        "!": function(e, t, n) {
            return !n(e, t);
        }
    }, Ir = {
        n: "\n",
        f: "\f",
        r: "\r",
        t: "	",
        v: "",
        "'": "'",
        '"': '"'
    }, Gr = function(e) {
        this.options = e;
    };
    Gr.prototype = {
        constructor: Gr,
        lex: function(e) {
            this.text = e;
            this.index = 0;
            this.ch = n;
            this.lastCh = ":";
            for (this.tokens = []; this.index < this.text.length; ) {
                this.ch = this.text.charAt(this.index);
                if (this.is("\"'")) this.readString(this.ch); else if (this.isNumber(this.ch) || this.is(".") && this.isNumber(this.peek())) this.readNumber(); else if (this.isIdent(this.ch)) this.readIdent(); else if (this.is("(){}[].,;:?")) this.tokens.push({
                    index: this.index,
                    text: this.ch
                }), this.index++; else if (this.isWhitespace(this.ch)) {
                    this.index++;
                    continue;
                } else {
                    e = this.ch + this.peek();
                    var t = e + this.peek(2), r = Nr[this.ch], i = Nr[e], o = Nr[t];
                    o ? (this.tokens.push({
                        index: this.index,
                        text: t,
                        fn: o
                    }), this.index += 3) : i ? (this.tokens.push({
                        index: this.index,
                        text: e,
                        fn: i
                    }), this.index += 2) : r ? (this.tokens.push({
                        index: this.index,
                        text: this.ch,
                        fn: r
                    }), this.index += 1) : this.throwError("Unexpected next character ", this.index, this.index + 1);
                }
                this.lastCh = this.ch;
            }
            return this.tokens;
        },
        is: function(e) {
            return -1 !== e.indexOf(this.ch);
        },
        was: function(e) {
            return -1 !== e.indexOf(this.lastCh);
        },
        peek: function(e) {
            e = e || 1;
            return this.index + e < this.text.length ? this.text.charAt(this.index + e) : !1;
        },
        isNumber: function(e) {
            return "0" <= e && "9" >= e;
        },
        isWhitespace: function(e) {
            return " " === e || "\r" === e || "	" === e || "\n" === e || "" === e || " " === e;
        },
        isIdent: function(e) {
            return "a" <= e && "z" >= e || "A" <= e && "Z" >= e || "_" === e || "$" === e;
        },
        isExpOperator: function(e) {
            return "-" === e || "+" === e || this.isNumber(e);
        },
        throwError: function(e, t, n) {
            n = n || this.index;
            t = g(t) ? "s " + t + "-" + this.index + " [" + this.text.substring(t, n) + "]" : " " + n;
            throw Ur("lexerr", e, t, this.text);
        },
        readNumber: function() {
            for (var e = "", t = this.index; this.index < this.text.length; ) {
                var n = In(this.text.charAt(this.index));
                if ("." == n || this.isNumber(n)) e += n; else {
                    var r = this.peek();
                    if ("e" == n && this.isExpOperator(r)) e += n; else if (this.isExpOperator(n) && r && this.isNumber(r) && "e" == e.charAt(e.length - 1)) e += n; else if (!this.isExpOperator(n) || r && this.isNumber(r) || "e" != e.charAt(e.length - 1)) break; else this.throwError("Invalid exponent");
                }
                this.index++;
            }
            e *= 1;
            this.tokens.push({
                index: t,
                text: e,
                literal: !0,
                constant: !0,
                fn: function() {
                    return e;
                }
            });
        },
        readIdent: function() {
            for (var e = this, t = "", n = this.index, r, i, o, a; this.index < this.text.length; ) {
                a = this.text.charAt(this.index);
                if ("." === a || this.isIdent(a) || this.isNumber(a)) "." === a && (r = this.index), 
                t += a; else break;
                this.index++;
            }
            if (r) for (i = this.index; i < this.text.length; ) {
                a = this.text.charAt(i);
                if ("(" === a) {
                    o = t.substr(r - n + 1);
                    t = t.substr(0, r - n);
                    this.index = i;
                    break;
                }
                if (this.isWhitespace(a)) i++; else break;
            }
            n = {
                index: n,
                text: t
            };
            if (Nr.hasOwnProperty(t)) n.fn = Nr[t], n.literal = !0, n.constant = !0; else {
                var s = ln(t, this.options, this.text);
                n.fn = h(function(e, t) {
                    return s(e, t);
                }, {
                    assign: function(n, r) {
                        return sn(n, t, r, e.text, e.options);
                    }
                });
            }
            this.tokens.push(n);
            o && (this.tokens.push({
                index: r,
                text: "."
            }), this.tokens.push({
                index: r + 1,
                text: o
            }));
        },
        readString: function(e) {
            var t = this.index;
            this.index++;
            for (var n = "", r = e, i = !1; this.index < this.text.length; ) {
                var o = this.text.charAt(this.index), r = r + o;
                if (i) "u" === o ? (i = this.text.substring(this.index + 1, this.index + 5), i.match(/[\da-f]{4}/i) || this.throwError("Invalid unicode escape [\\u" + i + "]"), 
                this.index += 4, n += String.fromCharCode(parseInt(i, 16))) : n += Ir[o] || o, i = !1; else if ("\\" === o) i = !0; else {
                    if (o === e) {
                        this.index++;
                        this.tokens.push({
                            index: t,
                            text: r,
                            string: n,
                            literal: !0,
                            constant: !0,
                            fn: function() {
                                return n;
                            }
                        });
                        return;
                    }
                    n += o;
                }
                this.index++;
            }
            this.throwError("Unterminated quote", t);
        }
    };
    var Wr = function(e, t, n) {
        this.lexer = e;
        this.$filter = t;
        this.options = n;
    };
    Wr.ZERO = h(function() {
        return 0;
    }, {
        constant: !0
    });
    Wr.prototype = {
        constructor: Wr,
        parse: function(e) {
            this.text = e;
            this.tokens = this.lexer.lex(e);
            e = this.statements();
            0 !== this.tokens.length && this.throwError("is an unexpected token", this.tokens[0]);
            e.literal = !!e.literal;
            e.constant = !!e.constant;
            return e;
        },
        primary: function() {
            var e;
            if (this.expect("(")) e = this.filterChain(), this.consume(")"); else if (this.expect("[")) e = this.arrayDeclaration(); else if (this.expect("{")) e = this.object(); else {
                var t = this.expect();
                (e = t.fn) || this.throwError("not a primary expression", t);
                e.literal = !!t.literal;
                e.constant = !!t.constant;
            }
            for (var n; t = this.expect("(", "[", "."); ) "(" === t.text ? (e = this.functionCall(e, n), 
            n = null) : "[" === t.text ? (n = e, e = this.objectIndex(e)) : "." === t.text ? (n = e, 
            e = this.fieldAccess(e)) : this.throwError("IMPOSSIBLE");
            return e;
        },
        throwError: function(e, t) {
            throw Ur("syntax", t.text, e, t.index + 1, this.text, this.text.substring(t.index));
        },
        peekToken: function() {
            if (0 === this.tokens.length) throw Ur("ueoe", this.text);
            return this.tokens[0];
        },
        peek: function(e, t, n, r) {
            if (0 < this.tokens.length) {
                var i = this.tokens[0], o = i.text;
                if (o === e || o === t || o === n || o === r || !(e || t || n || r)) return i;
            }
            return !1;
        },
        expect: function(e, t, n, r) {
            return (e = this.peek(e, t, n, r)) ? (this.tokens.shift(), e) : !1;
        },
        consume: function(e) {
            this.expect(e) || this.throwError("is unexpected, expecting [" + e + "]", this.peek());
        },
        unaryFn: function(e, t) {
            return h(function(n, r) {
                return e(n, r, t);
            }, {
                constant: t.constant
            });
        },
        ternaryFn: function(e, t, n) {
            return h(function(r, i) {
                return e(r, i) ? t(r, i) : n(r, i);
            }, {
                constant: e.constant && t.constant && n.constant
            });
        },
        binaryFn: function(e, t, n) {
            return h(function(r, i) {
                return t(r, i, e, n);
            }, {
                constant: e.constant && n.constant
            });
        },
        statements: function() {
            for (var e = []; ;) if (0 < this.tokens.length && !this.peek("}", ")", ";", "]") && e.push(this.filterChain()), 
            !this.expect(";")) return 1 === e.length ? e[0] : function(t, n) {
                for (var r, i = 0; i < e.length; i++) {
                    var o = e[i];
                    o && (r = o(t, n));
                }
                return r;
            };
        },
        filterChain: function() {
            for (var e = this.expression(), t; ;) if (t = this.expect("|")) e = this.binaryFn(e, t.fn, this.filter()); else return e;
        },
        filter: function() {
            for (var e = this.expect(), t = this.$filter(e.text), n = []; ;) if (e = this.expect(":")) n.push(this.expression()); else {
                var r = function(e, r, i) {
                    i = [ i ];
                    for (var o = 0; o < n.length; o++) i.push(n[o](e, r));
                    return t.apply(e, i);
                };
                return function() {
                    return r;
                };
            }
        },
        expression: function() {
            return this.assignment();
        },
        assignment: function() {
            var e = this.ternary(), t, n;
            return (n = this.expect("=")) ? (e.assign || this.throwError("implies assignment but [" + this.text.substring(0, n.index) + "] can not be assigned to", n), 
            t = this.ternary(), function(n, r) {
                return e.assign(n, t(n, r), r);
            }) : e;
        },
        ternary: function() {
            var e = this.logicalOR(), t, n;
            if (this.expect("?")) {
                t = this.assignment();
                if (n = this.expect(":")) return this.ternaryFn(e, t, this.assignment());
                this.throwError("expected :", n);
            } else return e;
        },
        logicalOR: function() {
            for (var e = this.logicalAND(), t; ;) if (t = this.expect("||")) e = this.binaryFn(e, t.fn, this.logicalAND()); else return e;
        },
        logicalAND: function() {
            var e = this.equality(), t;
            if (t = this.expect("&&")) e = this.binaryFn(e, t.fn, this.logicalAND());
            return e;
        },
        equality: function() {
            var e = this.relational(), t;
            if (t = this.expect("==", "!=", "===", "!==")) e = this.binaryFn(e, t.fn, this.equality());
            return e;
        },
        relational: function() {
            var e = this.additive(), t;
            if (t = this.expect("<", ">", "<=", ">=")) e = this.binaryFn(e, t.fn, this.relational());
            return e;
        },
        additive: function() {
            for (var e = this.multiplicative(), t; t = this.expect("+", "-"); ) e = this.binaryFn(e, t.fn, this.multiplicative());
            return e;
        },
        multiplicative: function() {
            for (var e = this.unary(), t; t = this.expect("*", "/", "%"); ) e = this.binaryFn(e, t.fn, this.unary());
            return e;
        },
        unary: function() {
            var e;
            return this.expect("+") ? this.primary() : (e = this.expect("-")) ? this.binaryFn(Wr.ZERO, e.fn, this.unary()) : (e = this.expect("!")) ? this.unaryFn(e.fn, this.unary()) : this.primary();
        },
        fieldAccess: function(e) {
            var t = this, n = this.expect().text, r = ln(n, this.options, this.text);
            return h(function(t, n, i) {
                return r(i || e(t, n));
            }, {
                assign: function(r, i, o) {
                    (o = e(r, o)) || e.assign(r, o = {});
                    return sn(o, n, i, t.text, t.options);
                }
            });
        },
        objectIndex: function(e) {
            var t = this, r = this.expression();
            this.consume("]");
            return h(function(i, o) {
                var a = e(i, o), s = r(i, o), c;
                on(s, t.text);
                if (!a) return n;
                (a = an(a[s], t.text)) && (a.then && t.options.unwrapPromises) && (c = a, "$$v" in a || (c.$$v = n, 
                c.then(function(e) {
                    c.$$v = e;
                })), a = a.$$v);
                return a;
            }, {
                assign: function(n, i, o) {
                    var a = on(r(n, o), t.text);
                    (o = an(e(n, o), t.text)) || e.assign(n, o = {});
                    return o[a] = i;
                }
            });
        },
        functionCall: function(e, t) {
            var n = [];
            if (")" !== this.peekToken().text) {
                do n.push(this.expression()); while (this.expect(","));
            }
            this.consume(")");
            var r = this;
            return function(i, o) {
                for (var a = [], s = t ? t(i, o) : i, c = 0; c < n.length; c++) a.push(an(n[c](i, o), r.text));
                c = e(i, o, s) || d;
                an(s, r.text);
                var l = r.text;
                if (c) {
                    if (c.constructor === c) throw Ur("isecfn", l);
                    if (c === zr || c === Br || jr && c === jr) throw Ur("isecff", l);
                }
                a = c.apply ? c.apply(s, a) : c(a[0], a[1], a[2], a[3], a[4]);
                return an(a, r.text);
            };
        },
        arrayDeclaration: function() {
            var e = [], t = !0;
            if ("]" !== this.peekToken().text) {
                do {
                    if (this.peek("]")) break;
                    var n = this.expression();
                    e.push(n);
                    n.constant || (t = !1);
                } while (this.expect(","));
            }
            this.consume("]");
            return h(function(t, n) {
                for (var r = [], i = 0; i < e.length; i++) r.push(e[i](t, n));
                return r;
            }, {
                literal: !0,
                constant: t
            });
        },
        object: function() {
            var e = [], t = !0;
            if ("}" !== this.peekToken().text) {
                do {
                    if (this.peek("}")) break;
                    var n = this.expect(), n = n.string || n.text;
                    this.consume(":");
                    var r = this.expression();
                    e.push({
                        key: n,
                        value: r
                    });
                    r.constant || (t = !1);
                } while (this.expect(","));
            }
            this.consume("}");
            return h(function(t, n) {
                for (var r = {}, i = 0; i < e.length; i++) {
                    var o = e[i];
                    r[o.key] = o.value(t, n);
                }
                return r;
            }, {
                literal: !0,
                constant: t
            });
        }
    };
    var Xr = {}, qr = r("$sce"), Yr = {
        HTML: "html",
        CSS: "css",
        URL: "url",
        RESOURCE_URL: "resourceUrl",
        JS: "js"
    }, Kr = t.createElement("a"), Zr = Rn(e.location.href, !0);
    wn.$inject = [ "$provide" ];
    Sn.$inject = [ "$locale" ];
    Mn.$inject = [ "$locale" ];
    var Qr = ".", Jr = {
        yyyy: $("FullYear", 4),
        yy: $("FullYear", 2, 0, !0),
        y: $("FullYear", 1),
        MMMM: Pn("Month"),
        MMM: Pn("Month", !0),
        MM: $("Month", 2, 1),
        M: $("Month", 1, 1),
        dd: $("Date", 2),
        d: $("Date", 1),
        HH: $("Hours", 2),
        H: $("Hours", 1),
        hh: $("Hours", 2, -12),
        h: $("Hours", 1, -12),
        mm: $("Minutes", 2),
        m: $("Minutes", 1),
        ss: $("Seconds", 2),
        s: $("Seconds", 1),
        sss: $("Milliseconds", 3),
        EEEE: Pn("Day"),
        EEE: Pn("Day", !0),
        a: function(e, t) {
            return 12 > e.getHours() ? t.AMPMS[0] : t.AMPMS[1];
        },
        Z: function(e) {
            e = -1 * e.getTimezoneOffset();
            return e = (0 <= e ? "+" : "") + (An(Math[0 < e ? "floor" : "ceil"](e / 60), 2) + An(Math.abs(e % 60), 2));
        }
    }, ei = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/, ti = /^\-?\d+$/;
    $n.$inject = [ "$locale" ];
    var ni = E(In), ri = E(Wn);
    Fn.$inject = [ "$parse" ];
    var ii = E({
        restrict: "E",
        compile: function(e, n) {
            8 >= Xn && (n.href || n.name || n.$set("href", ""), e.append(t.createComment("IE fix")));
            if (!n.href && !n.xlinkHref && !n.name) return function(e, t) {
                var n = "[object SVGAnimatedString]" === Qn.call(t.prop("href")) ? "xlink:href" : "href";
                t.on("click", function(e) {
                    t.attr(n) || e.preventDefault();
                });
            };
        }
    }), oi = {};
    o(Rr, function(e, t) {
        if ("multiple" != e) {
            var n = At("ng-" + t);
            oi[n] = function() {
                return {
                    priority: 100,
                    link: function(e, r, i) {
                        e.$watch(i[n], function(e) {
                            i.$set(t, !!e);
                        });
                    }
                };
            };
        }
    });
    o([ "src", "srcset", "href" ], function(e) {
        var t = At("ng-" + e);
        oi[t] = function() {
            return {
                priority: 99,
                link: function(n, r, i) {
                    var o = e, a = e;
                    "href" === e && "[object SVGAnimatedString]" === Qn.call(r.prop("href")) && (a = "xlinkHref", 
                    i.$attr[a] = "xlink:href", o = null);
                    i.$observe(t, function(t) {
                        t ? (i.$set(a, t), Xn && o && r.prop(o, i[a])) : "href" === e && i.$set(a, null);
                    });
                }
            };
        };
    });
    var ai = {
        $addControl: d,
        $removeControl: d,
        $setValidity: d,
        $setDirty: d,
        $setPristine: d
    };
    Un.$inject = [ "$element", "$attrs", "$scope", "$animate" ];
    var si = function(e) {
        return [ "$timeout", function(t) {
            return {
                name: "form",
                restrict: e ? "EAC" : "E",
                controller: Un,
                compile: function() {
                    return {
                        pre: function(e, r, i, o) {
                            if (!i.action) {
                                var a = function(e) {
                                    e.preventDefault ? e.preventDefault() : e.returnValue = !1;
                                };
                                hr(r[0], "submit", a);
                                r.on("$destroy", function() {
                                    t(function() {
                                        fr(r[0], "submit", a);
                                    }, 0, !1);
                                });
                            }
                            var s = r.parent().controller("form"), c = i.name || i.ngForm;
                            c && sn(e, c, o, c);
                            if (s) r.on("$destroy", function() {
                                s.$removeControl(o);
                                c && sn(e, c, n, c);
                                h(o, ai);
                            });
                        }
                    };
                }
            };
        } ];
    }, ci = si(), li = si(!0), ui = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/, hi = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i, fi = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/, pi = {
        text: Bn,
        number: function(e, t, r, i, o, a) {
            Bn(e, t, r, i, o, a);
            i.$parsers.push(function(e) {
                var t = i.$isEmpty(e);
                if (t || fi.test(e)) return i.$setValidity("number", !0), "" === e ? null : t ? e : parseFloat(e);
                i.$setValidity("number", !1);
                return n;
            });
            zn(i, "number", di, null, i.$$validityState);
            i.$formatters.push(function(e) {
                return i.$isEmpty(e) ? "" : "" + e;
            });
            r.min && (e = function(e) {
                var t = parseFloat(r.min);
                return Vn(i, "min", i.$isEmpty(e) || e >= t, e);
            }, i.$parsers.push(e), i.$formatters.push(e));
            r.max && (e = function(e) {
                var t = parseFloat(r.max);
                return Vn(i, "max", i.$isEmpty(e) || e <= t, e);
            }, i.$parsers.push(e), i.$formatters.push(e));
            i.$formatters.push(function(e) {
                return Vn(i, "number", i.$isEmpty(e) || x(e), e);
            });
        },
        url: function(e, t, n, r, i, o) {
            Bn(e, t, n, r, i, o);
            e = function(e) {
                return Vn(r, "url", r.$isEmpty(e) || ui.test(e), e);
            };
            r.$formatters.push(e);
            r.$parsers.push(e);
        },
        email: function(e, t, n, r, i, o) {
            Bn(e, t, n, r, i, o);
            e = function(e) {
                return Vn(r, "email", r.$isEmpty(e) || hi.test(e), e);
            };
            r.$formatters.push(e);
            r.$parsers.push(e);
        },
        radio: function(e, t, n, r) {
            v(n.name) && t.attr("name", l());
            t.on("click", function() {
                t[0].checked && e.$apply(function() {
                    r.$setViewValue(n.value);
                });
            });
            r.$render = function() {
                t[0].checked = n.value == r.$viewValue;
            };
            n.$observe("value", r.$render);
        },
        checkbox: function(e, t, n, r) {
            var i = n.ngTrueValue, o = n.ngFalseValue;
            T(i) || (i = !0);
            T(o) || (o = !1);
            t.on("click", function() {
                e.$apply(function() {
                    r.$setViewValue(t[0].checked);
                });
            });
            r.$render = function() {
                t[0].checked = r.$viewValue;
            };
            r.$isEmpty = function(e) {
                return e !== i;
            };
            r.$formatters.push(function(e) {
                return e === i;
            });
            r.$parsers.push(function(e) {
                return e ? i : o;
            });
        },
        hidden: d,
        button: d,
        submit: d,
        reset: d,
        file: d
    }, di = [ "badInput" ], mi = [ "$browser", "$sniffer", function(e, t) {
        return {
            restrict: "E",
            require: "?ngModel",
            link: function(n, r, i, o) {
                o && (pi[In(i.type)] || pi.text)(n, r, i, o, t, e);
            }
        };
    } ], Ei = "ng-valid", vi = "ng-invalid", gi = "ng-pristine", yi = "ng-dirty", Ti = [ "$scope", "$exceptionHandler", "$attrs", "$element", "$parse", "$animate", function(e, t, n, i, a, s) {
        function c(e, t) {
            t = t ? "-" + X(t, "-") : "";
            s.removeClass(i, (e ? vi : Ei) + t);
            s.addClass(i, (e ? Ei : vi) + t);
        }
        this.$modelValue = this.$viewValue = Number.NaN;
        this.$parsers = [];
        this.$formatters = [];
        this.$viewChangeListeners = [];
        this.$pristine = !0;
        this.$dirty = !1;
        this.$valid = !0;
        this.$invalid = !1;
        this.$name = n.name;
        var l = a(n.ngModel), u = l.assign;
        if (!u) throw r("ngModel")("nonassign", n.ngModel, O(i));
        this.$render = d;
        this.$isEmpty = function(e) {
            return v(e) || "" === e || null === e || e !== e;
        };
        var h = i.inheritedData("$formController") || ai, f = 0, p = this.$error = {};
        i.addClass(gi);
        c(!0);
        this.$setValidity = function(e, t) {
            p[e] !== !t && (t ? (p[e] && f--, f || (c(!0), this.$valid = !0, this.$invalid = !1)) : (c(!1), 
            this.$invalid = !0, this.$valid = !1, f++), p[e] = !t, c(t, e), h.$setValidity(e, t, this));
        };
        this.$setPristine = function() {
            this.$dirty = !1;
            this.$pristine = !0;
            s.removeClass(i, yi);
            s.addClass(i, gi);
        };
        this.$setViewValue = function(n) {
            this.$viewValue = n;
            this.$pristine && (this.$dirty = !0, this.$pristine = !1, s.removeClass(i, gi), 
            s.addClass(i, yi), h.$setDirty());
            o(this.$parsers, function(e) {
                n = e(n);
            });
            this.$modelValue !== n && (this.$modelValue = n, u(e, n), o(this.$viewChangeListeners, function(e) {
                try {
                    e();
                } catch (n) {
                    t(n);
                }
            }));
        };
        var m = this;
        e.$watch(function() {
            var t = l(e);
            if (m.$modelValue !== t) {
                var n = m.$formatters, r = n.length;
                for (m.$modelValue = t; r--; ) t = n[r](t);
                m.$viewValue !== t && (m.$viewValue = t, m.$render());
            }
            return t;
        });
    } ], xi = function() {
        return {
            require: [ "ngModel", "^?form" ],
            controller: Ti,
            link: function(e, t, n, r) {
                var i = r[0], o = r[1] || ai;
                o.$addControl(i);
                e.$on("$destroy", function() {
                    o.$removeControl(i);
                });
            }
        };
    }, Ri = E({
        require: "ngModel",
        link: function(e, t, n, r) {
            r.$viewChangeListeners.push(function() {
                e.$eval(n.ngChange);
            });
        }
    }), _i = function() {
        return {
            require: "?ngModel",
            link: function(e, t, n, r) {
                if (r) {
                    n.required = !0;
                    var i = function(e) {
                        if (n.required && r.$isEmpty(e)) r.$setValidity("required", !1); else return r.$setValidity("required", !0), 
                        e;
                    };
                    r.$formatters.push(i);
                    r.$parsers.unshift(i);
                    n.$observe("required", function() {
                        i(r.$viewValue);
                    });
                }
            }
        };
    }, bi = function() {
        return {
            require: "ngModel",
            link: function(e, t, r, i) {
                var a = (e = /\/(.*)\//.exec(r.ngList)) && RegExp(e[1]) || r.ngList || ",";
                i.$parsers.push(function(e) {
                    if (!v(e)) {
                        var t = [];
                        e && o(e.split(a), function(e) {
                            e && t.push(or(e));
                        });
                        return t;
                    }
                });
                i.$formatters.push(function(e) {
                    return ir(e) ? e.join(", ") : n;
                });
                i.$isEmpty = function(e) {
                    return !e || !e.length;
                };
            }
        };
    }, wi = /^(true|false|\d+)$/, Hi = function() {
        return {
            priority: 100,
            compile: function(e, t) {
                return wi.test(t.ngValue) ? function(e, t, n) {
                    n.$set("value", e.$eval(n.ngValue));
                } : function(e, t, n) {
                    e.$watch(n.ngValue, function(e) {
                        n.$set("value", e);
                    });
                };
            }
        };
    }, Si = Dn({
        compile: function(e) {
            e.addClass("ng-binding");
            return function(e, t, r) {
                t.data("$binding", r.ngBind);
                e.$watch(r.ngBind, function(e) {
                    t.text(e == n ? "" : e);
                });
            };
        }
    }), Mi = [ "$interpolate", function(e) {
        return function(t, n, r) {
            t = e(n.attr(r.$attr.ngBindTemplate));
            n.addClass("ng-binding").data("$binding", t);
            r.$observe("ngBindTemplate", function(e) {
                n.text(e);
            });
        };
    } ], Ci = [ "$sce", "$parse", function(e, t) {
        return {
            compile: function(n) {
                n.addClass("ng-binding");
                return function(n, r, i) {
                    r.data("$binding", i.ngBindHtml);
                    var o = t(i.ngBindHtml);
                    n.$watch(function() {
                        return (o(n) || "").toString();
                    }, function(t) {
                        r.html(e.getTrustedHtml(o(n)) || "");
                    });
                };
            }
        };
    } ], Ai = jn("", !0), Pi = jn("Odd", 0), $i = jn("Even", 1), ki = Dn({
        compile: function(e, t) {
            t.$set("ngCloak", n);
            e.removeClass("ng-cloak");
        }
    }), Li = [ function() {
        return {
            scope: !0,
            controller: "@",
            priority: 500
        };
    } ], Fi = {}, Di = {
        blur: !0,
        focus: !0
    };
    o("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function(e) {
        var t = At("ng-" + e);
        Fi[t] = [ "$parse", "$rootScope", function(n, r) {
            return {
                compile: function(i, o) {
                    var a = n(o[t]);
                    return function(t, n) {
                        n.on(e, function(n) {
                            var i = function() {
                                a(t, {
                                    $event: n
                                });
                            };
                            Di[e] && r.$$phase ? t.$evalAsync(i) : t.$apply(i);
                        });
                    };
                }
            };
        } ];
    });
    var Ui = [ "$animate", function(e) {
        return {
            transclude: "element",
            priority: 600,
            terminal: !0,
            restrict: "A",
            $$tlb: !0,
            link: function(n, r, i, o, a) {
                var s, c, l;
                n.$watch(i.ngIf, function(o) {
                    V(o) ? c || (c = n.$new(), a(c, function(n) {
                        n[n.length++] = t.createComment(" end ngIf: " + i.ngIf + " ");
                        s = {
                            clone: n
                        };
                        e.enter(n, r.parent(), r);
                    })) : (l && (l.remove(), l = null), c && (c.$destroy(), c = null), s && (l = Q(s.clone), 
                    e.leave(l, function() {
                        l = null;
                    }), s = null));
                });
            }
        };
    } ], Vi = [ "$http", "$templateCache", "$anchorScroll", "$animate", "$sce", function(e, t, n, r, i) {
        return {
            restrict: "ECA",
            priority: 400,
            terminal: !0,
            transclude: "element",
            controller: er.noop,
            compile: function(o, a) {
                var s = a.ngInclude || a.src, c = a.onload || "", l = a.autoscroll;
                return function(o, a, u, h, f) {
                    var p = 0, d, m, E, v = function() {
                        m && (m.remove(), m = null);
                        d && (d.$destroy(), d = null);
                        E && (r.leave(E, function() {
                            m = null;
                        }), m = E, E = null);
                    };
                    o.$watch(i.parseAsResourceUrl(s), function(i) {
                        var s = function() {
                            !g(l) || l && !o.$eval(l) || n();
                        }, u = ++p;
                        i ? (e.get(i, {
                            cache: t
                        }).success(function(e) {
                            if (u === p) {
                                var t = o.$new();
                                h.template = e;
                                e = f(t, function(e) {
                                    v();
                                    r.enter(e, null, a, s);
                                });
                                d = t;
                                E = e;
                                d.$emit("$includeContentLoaded");
                                o.$eval(c);
                            }
                        }).error(function() {
                            u === p && v();
                        }), o.$emit("$includeContentRequested")) : (v(), h.template = null);
                    });
                };
            }
        };
    } ], Oi = [ "$compile", function(e) {
        return {
            restrict: "ECA",
            priority: -400,
            require: "ngInclude",
            link: function(t, n, r, i) {
                n.html(i.template);
                e(n.contents())(t);
            }
        };
    } ], zi = Dn({
        priority: 450,
        compile: function() {
            return {
                pre: function(e, t, n) {
                    e.$eval(n.ngInit);
                }
            };
        }
    }), Bi = Dn({
        terminal: !0,
        priority: 1e3
    }), ji = [ "$locale", "$interpolate", function(e, t) {
        var n = /{}/g;
        return {
            restrict: "EA",
            link: function(r, i, a) {
                var s = a.count, c = a.$attr.when && i.attr(a.$attr.when), l = a.offset || 0, u = r.$eval(c) || {}, h = {}, f = t.startSymbol(), p = t.endSymbol(), d = /^when(Minus)?(.+)$/;
                o(a, function(e, t) {
                    d.test(t) && (u[In(t.replace("when", "").replace("Minus", "-"))] = i.attr(a.$attr[t]));
                });
                o(u, function(e, r) {
                    h[r] = t(e.replace(n, f + s + "-" + l + p));
                });
                r.$watch(function() {
                    var t = parseFloat(r.$eval(s));
                    if (isNaN(t)) return "";
                    t in u || (t = e.pluralCat(t - l));
                    return h[t](r, i, !0);
                }, function(e) {
                    i.text(e);
                });
            }
        };
    } ], Ni = [ "$parse", "$animate", function(e, n) {
        var a = r("ngRepeat");
        return {
            transclude: "element",
            priority: 1e3,
            terminal: !0,
            $$tlb: !0,
            link: function(r, s, c, l, u) {
                var h = c.ngRepeat, f = h.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?\s*$/), p, d, m, E, v, g, y = {
                    $id: yt
                };
                if (!f) throw a("iexp", h);
                c = f[1];
                l = f[2];
                (f = f[3]) ? (p = e(f), d = function(e, t, n) {
                    g && (y[g] = e);
                    y[v] = t;
                    y.$index = n;
                    return p(r, y);
                }) : (m = function(e, t) {
                    return yt(t);
                }, E = function(e) {
                    return e;
                });
                f = c.match(/^(?:([\$\w]+)|\(([\$\w]+)\s*,\s*([\$\w]+)\))$/);
                if (!f) throw a("iidexp", c);
                v = f[3] || f[1];
                g = f[2];
                var T = {};
                r.$watchCollection(l, function(e) {
                    var c, l, f = s[0], p, y = {}, x, R, _, b, w, H, S, M = [];
                    if (i(e)) H = e, w = d || m; else {
                        w = d || E;
                        H = [];
                        for (_ in e) e.hasOwnProperty(_) && "$" != _.charAt(0) && H.push(_);
                        H.sort();
                    }
                    x = H.length;
                    l = M.length = H.length;
                    for (c = 0; c < l; c++) if (_ = e === H ? c : H[c], b = e[_], p = w(_, b, c), K(p, "`track by` id"), 
                    T.hasOwnProperty(p)) S = T[p], delete T[p], y[p] = S, M[c] = S; else {
                        if (y.hasOwnProperty(p)) throw o(M, function(e) {
                            e && e.scope && (T[e.id] = e);
                        }), a("dupes", h, p, D(b));
                        M[c] = {
                            id: p
                        };
                        y[p] = !1;
                    }
                    for (_ in T) T.hasOwnProperty(_) && (S = T[_], c = Q(S.clone), n.leave(c), o(c, function(e) {
                        e.$$NG_REMOVED = !0;
                    }), S.scope.$destroy());
                    c = 0;
                    for (l = H.length; c < l; c++) {
                        _ = e === H ? c : H[c];
                        b = e[_];
                        S = M[c];
                        M[c - 1] && (f = M[c - 1].clone[M[c - 1].clone.length - 1]);
                        if (S.scope) {
                            R = S.scope;
                            p = f;
                            do p = p.nextSibling; while (p && p.$$NG_REMOVED);
                            S.clone[0] != p && n.move(Q(S.clone), null, qn(f));
                            f = S.clone[S.clone.length - 1];
                        } else R = r.$new();
                        R[v] = b;
                        g && (R[g] = _);
                        R.$index = c;
                        R.$first = 0 === c;
                        R.$last = c === x - 1;
                        R.$middle = !(R.$first || R.$last);
                        R.$odd = !(R.$even = 0 === (c & 1));
                        S.scope || u(R, function(e) {
                            e[e.length++] = t.createComment(" end ngRepeat: " + h + " ");
                            n.enter(e, null, qn(f));
                            f = e;
                            S.scope = R;
                            S.clone = e;
                            y[S.id] = S;
                        });
                    }
                    T = y;
                });
            }
        };
    } ], Ii = [ "$animate", function(e) {
        return function(t, n, r) {
            t.$watch(r.ngShow, function(t) {
                e[V(t) ? "removeClass" : "addClass"](n, "ng-hide");
            });
        };
    } ], Gi = [ "$animate", function(e) {
        return function(t, n, r) {
            t.$watch(r.ngHide, function(t) {
                e[V(t) ? "addClass" : "removeClass"](n, "ng-hide");
            });
        };
    } ], Wi = Dn(function(e, t, n) {
        e.$watch(n.ngStyle, function(e, n) {
            n && e !== n && o(n, function(e, n) {
                t.css(n, "");
            });
            e && t.css(e);
        }, !0);
    }), Xi = [ "$animate", function(e) {
        return {
            restrict: "EA",
            require: "ngSwitch",
            controller: [ "$scope", function() {
                this.cases = {};
            } ],
            link: function(t, n, r, i) {
                var a = [], s = [], c = [], l = [];
                t.$watch(r.ngSwitch || r.on, function(n) {
                    var u, h;
                    u = 0;
                    for (h = c.length; u < h; ++u) c[u].remove();
                    u = c.length = 0;
                    for (h = l.length; u < h; ++u) {
                        var f = s[u];
                        l[u].$destroy();
                        c[u] = f;
                        e.leave(f, function() {
                            c.splice(u, 1);
                        });
                    }
                    s.length = 0;
                    l.length = 0;
                    if (a = i.cases["!" + n] || i.cases["?"]) t.$eval(r.change), o(a, function(n) {
                        var r = t.$new();
                        l.push(r);
                        n.transclude(r, function(t) {
                            var r = n.element;
                            s.push(t);
                            e.enter(t, r.parent(), r);
                        });
                    });
                });
            }
        };
    } ], qi = Dn({
        transclude: "element",
        priority: 800,
        require: "^ngSwitch",
        link: function(e, t, n, r, i) {
            r.cases["!" + n.ngSwitchWhen] = r.cases["!" + n.ngSwitchWhen] || [];
            r.cases["!" + n.ngSwitchWhen].push({
                transclude: i,
                element: t
            });
        }
    }), Yi = Dn({
        transclude: "element",
        priority: 800,
        require: "^ngSwitch",
        link: function(e, t, n, r, i) {
            r.cases["?"] = r.cases["?"] || [];
            r.cases["?"].push({
                transclude: i,
                element: t
            });
        }
    }), Ki = Dn({
        link: function(e, t, n, i, o) {
            if (!o) throw r("ngTransclude")("orphan", O(t));
            o(function(e) {
                t.empty();
                t.append(e);
            });
        }
    }), Zi = [ "$templateCache", function(e) {
        return {
            restrict: "E",
            terminal: !0,
            compile: function(t, n) {
                "text/ng-template" == n.type && e.put(n.id, t[0].text);
            }
        };
    } ], Qi = r("ngOptions"), Ji = E({
        terminal: !0
    }), eo = [ "$compile", "$parse", function(e, r) {
        var i = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/, s = {
            $setViewValue: d
        };
        return {
            restrict: "E",
            require: [ "select", "?ngModel" ],
            controller: [ "$element", "$scope", "$attrs", function(e, t, n) {
                var r = this, i = {}, o = s, a;
                r.databound = n.ngModel;
                r.init = function(e, t, n) {
                    o = e;
                    a = n;
                };
                r.addOption = function(t) {
                    K(t, '"option value"');
                    i[t] = !0;
                    o.$viewValue == t && (e.val(t), a.parent() && a.remove());
                };
                r.removeOption = function(e) {
                    this.hasOption(e) && (delete i[e], o.$viewValue == e && this.renderUnknownOption(e));
                };
                r.renderUnknownOption = function(t) {
                    t = "? " + yt(t) + " ?";
                    a.val(t);
                    e.prepend(a);
                    e.val(t);
                    a.prop("selected", !0);
                };
                r.hasOption = function(e) {
                    return i.hasOwnProperty(e);
                };
                t.$on("$destroy", function() {
                    r.renderUnknownOption = d;
                });
            } ],
            link: function(s, c, l, u) {
                function h(e, t, n, r) {
                    n.$render = function() {
                        var e = n.$viewValue;
                        r.hasOption(e) ? (_.parent() && _.remove(), t.val(e), "" === e && T.prop("selected", !0)) : v(e) && T ? t.val("") : r.renderUnknownOption(e);
                    };
                    t.on("change", function() {
                        e.$apply(function() {
                            _.parent() && _.remove();
                            n.$setViewValue(t.val());
                        });
                    });
                }
                function f(e, t, n) {
                    var r;
                    n.$render = function() {
                        var e = new Tt(n.$viewValue);
                        o(t.find("option"), function(t) {
                            t.selected = g(e.get(t.value));
                        });
                    };
                    e.$watch(function() {
                        k(r, n.$viewValue) || (r = P(n.$viewValue), n.$render());
                    });
                    t.on("change", function() {
                        e.$apply(function() {
                            var e = [];
                            o(t.find("option"), function(t) {
                                t.selected && e.push(t.value);
                            });
                            n.$setViewValue(e);
                        });
                    });
                }
                function p(t, o, s) {
                    function c() {
                        var e = {
                            "": []
                        }, n = [ "" ], r, i, c, l, E;
                        c = s.$modelValue;
                        l = T(t) || [];
                        var w = f ? a(l) : l, H, S, M;
                        S = {};
                        M = !1;
                        if (m) if (i = s.$modelValue, _ && ir(i)) for (M = new Tt([]), r = {}, E = 0; E < i.length; E++) r[h] = i[E], 
                        M.put(_(t, r), i[E]); else M = new Tt(i);
                        E = M;
                        var C, A;
                        for (M = 0; H = w.length, M < H; M++) {
                            i = M;
                            if (f) {
                                i = w[M];
                                if ("$" === i.charAt(0)) continue;
                                S[f] = i;
                            }
                            S[h] = l[i];
                            r = p(t, S) || "";
                            (i = e[r]) || (i = e[r] = [], n.push(r));
                            m ? r = g(E.remove(_ ? _(t, S) : v(t, S))) : (_ ? (r = {}, r[h] = c, r = _(t, r) === _(t, S)) : r = c === v(t, S), 
                            E = E || r);
                            C = u(t, S);
                            C = g(C) ? C : "";
                            i.push({
                                id: _ ? _(t, S) : f ? w[M] : M,
                                label: C,
                                selected: r
                            });
                        }
                        m || (y || null === c ? e[""].unshift({
                            id: "",
                            label: "",
                            selected: !E
                        }) : E || e[""].unshift({
                            id: "?",
                            label: "",
                            selected: !0
                        }));
                        S = 0;
                        for (w = n.length; S < w; S++) {
                            r = n[S];
                            i = e[r];
                            b.length <= S ? (c = {
                                element: R.clone().attr("label", r),
                                label: i.label
                            }, l = [ c ], b.push(l), o.append(c.element)) : (l = b[S], c = l[0], c.label != r && c.element.attr("label", c.label = r));
                            C = null;
                            M = 0;
                            for (H = i.length; M < H; M++) r = i[M], (E = l[M + 1]) ? (C = E.element, E.label !== r.label && C.text(E.label = r.label), 
                            E.id !== r.id && C.val(E.id = r.id), C[0].selected !== r.selected && (C.prop("selected", E.selected = r.selected), 
                            Xn && C.prop("selected", E.selected))) : ("" === r.id && y ? A = y : (A = x.clone()).val(r.id).prop("selected", r.selected).attr("selected", r.selected).text(r.label), 
                            l.push({
                                element: A,
                                label: r.label,
                                id: r.id,
                                selected: r.selected
                            }), d.addOption(r.label, A), C ? C.after(A) : c.element.append(A), C = A);
                            for (M++; l.length > M; ) r = l.pop(), d.removeOption(r.label), r.element.remove();
                        }
                        for (;b.length > S; ) b.pop()[0].element.remove();
                    }
                    var l;
                    if (!(l = E.match(i))) throw Qi("iexp", E, O(o));
                    var u = r(l[2] || l[1]), h = l[4] || l[6], f = l[5], p = r(l[3] || ""), v = r(l[2] ? l[1] : h), T = r(l[7]), _ = l[8] ? r(l[8]) : null, b = [ [ {
                        element: o,
                        label: ""
                    } ] ];
                    y && (e(y)(t), y.removeClass("ng-scope"), y.remove());
                    o.empty();
                    o.on("change", function() {
                        t.$apply(function() {
                            var e, r = T(t) || [], i = {}, a, l, u, p, d, E, g;
                            if (m) for (l = [], p = 0, E = b.length; p < E; p++) for (e = b[p], u = 1, d = e.length; u < d; u++) {
                                if ((a = e[u].element)[0].selected) {
                                    a = a.val();
                                    f && (i[f] = a);
                                    if (_) for (g = 0; g < r.length && (i[h] = r[g], _(t, i) != a); g++) ; else i[h] = r[a];
                                    l.push(v(t, i));
                                }
                            } else if (a = o.val(), "?" == a) l = n; else if ("" === a) l = null; else if (_) for (g = 0; g < r.length; g++) {
                                if (i[h] = r[g], _(t, i) == a) {
                                    l = v(t, i);
                                    break;
                                }
                            } else i[h] = r[a], f && (i[f] = a), l = v(t, i);
                            s.$setViewValue(l);
                            c();
                        });
                    });
                    s.$render = c;
                    t.$watchCollection(T, c);
                    t.$watchCollection(function() {
                        var e = {}, n = T(t);
                        if (n) {
                            for (var r = Array(n.length), i = 0, o = n.length; i < o; i++) e[h] = n[i], r[i] = u(t, e);
                            return r;
                        }
                    }, c);
                    m && t.$watchCollection(function() {
                        return s.$modelValue;
                    }, c);
                }
                if (u[1]) {
                    var d = u[0];
                    u = u[1];
                    var m = l.multiple, E = l.ngOptions, y = !1, T, x = qn(t.createElement("option")), R = qn(t.createElement("optgroup")), _ = x.clone();
                    l = 0;
                    for (var b = c.children(), w = b.length; l < w; l++) if ("" === b[l].value) {
                        T = y = b.eq(l);
                        break;
                    }
                    d.init(u, y, _);
                    m && (u.$isEmpty = function(e) {
                        return !e || 0 === e.length;
                    });
                    E ? p(s, c, u) : m ? f(s, c, u) : h(s, c, u, d);
                }
            }
        };
    } ], to = [ "$interpolate", function(e) {
        var t = {
            addOption: d,
            removeOption: d
        };
        return {
            restrict: "E",
            priority: 100,
            compile: function(n, r) {
                if (v(r.value)) {
                    var i = e(n.text(), !0);
                    i || r.$set("value", n.text());
                }
                return function(e, n, r) {
                    var o = n.parent(), a = o.data("$selectController") || o.parent().data("$selectController");
                    a && a.databound ? n.prop("selected", !1) : a = t;
                    i ? e.$watch(i, function(e, t) {
                        r.$set("value", e);
                        e !== t && a.removeOption(t);
                        a.addOption(e);
                    }) : a.addOption(r.value);
                    n.on("$destroy", function() {
                        a.removeOption(r.value);
                    });
                };
            }
        };
    } ], no = E({
        restrict: "E",
        terminal: !0
    });
    e.angular.bootstrap ? console.log("WARNING: Tried to load angular more than once.") : ((Yn = e.jQuery) && Yn.fn.on ? (qn = Yn, 
    h(Yn.fn, {
        scope: xr.scope,
        isolateScope: xr.isolateScope,
        controller: xr.controller,
        injector: xr.injector,
        inheritedData: xr.inheritedData
    }), nt("remove", !0, !0, !1), nt("empty", !1, !1, !1), nt("html", !1, !1, !0)) : qn = rt, 
    er.element = qn, et(er), qn(t).ready(function() {
        G(t, W);
    }));
})(window, document);

!window.angular.$$csp() && window.angular.element(document).find("head").prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}</style>');

(function(e, t, n) {
    "use strict";
    function r(e, n, r) {
        return {
            restrict: "ECA",
            terminal: !0,
            priority: 400,
            transclude: "element",
            link: function(i, o, a, s, c) {
                function l() {
                    p && (p.remove(), p = null);
                    h && (h.$destroy(), h = null);
                    f && (r.leave(f, function() {
                        p = null;
                    }), p = f, f = null);
                }
                function u() {
                    var a = e.current && e.current.locals;
                    if (t.isDefined(a && a.$template)) {
                        var a = i.$new(), s = e.current;
                        f = c(a, function(e) {
                            r.enter(e, null, f || o, function() {
                                !t.isDefined(d) || d && !i.$eval(d) || n();
                            });
                            l();
                        });
                        h = s.scope = a;
                        h.$emit("$viewContentLoaded");
                        h.$eval(m);
                    } else l();
                }
                var h, f, p, d = a.autoscroll, m = a.onload || "";
                i.$on("$routeChangeSuccess", u);
                u();
            }
        };
    }
    function i(e, t, n) {
        return {
            restrict: "ECA",
            priority: -400,
            link: function(r, i) {
                var o = n.current, a = o.locals;
                i.html(a.$template);
                var s = e(i.contents());
                o.controller && (a.$scope = r, a = t(o.controller, a), o.controllerAs && (r[o.controllerAs] = a), 
                i.data("$ngControllerController", a), i.children().data("$ngControllerController", a));
                s(r);
            }
        };
    }
    e = t.module("ngRoute", [ "ng" ]).provider("$route", function() {
        function e(e, n) {
            return t.extend(new (t.extend(function() {}, {
                prototype: e
            }))(), n);
        }
        function n(e, t) {
            var n = t.caseInsensitiveMatch, r = {
                originalPath: e,
                regexp: e
            }, i = r.keys = [];
            e = e.replace(/([().])/g, "\\$1").replace(/(\/)?:(\w+)([\?\*])?/g, function(e, t, n, r) {
                e = "?" === r ? r : null;
                r = "*" === r ? r : null;
                i.push({
                    name: n,
                    optional: !!e
                });
                t = t || "";
                return "" + (e ? "" : t) + "(?:" + (e ? t : "") + (r && "(.+?)" || "([^/]+)") + (e || "") + ")" + (e || "");
            }).replace(/([\/$\*])/g, "\\$1");
            r.regexp = RegExp("^" + e + "$", n ? "i" : "");
            return r;
        }
        var r = {};
        this.when = function(e, i) {
            r[e] = t.extend({
                reloadOnSearch: !0
            }, i, e && n(e, i));
            if (e) {
                var o = "/" == e[e.length - 1] ? e.substr(0, e.length - 1) : e + "/";
                r[o] = t.extend({
                    redirectTo: e
                }, n(o, i));
            }
            return this;
        };
        this.otherwise = function(e) {
            this.when(null, e);
            return this;
        };
        this.$get = [ "$rootScope", "$location", "$routeParams", "$q", "$injector", "$http", "$templateCache", "$sce", function(n, i, o, a, s, c, l, u) {
            function h() {
                var e = f(), r = m.current;
                if (e && r && e.$$route === r.$$route && t.equals(e.pathParams, r.pathParams) && !e.reloadOnSearch && !d) r.params = e.params, 
                t.copy(r.params, o), n.$broadcast("$routeUpdate", r); else if (e || r) d = !1, n.$broadcast("$routeChangeStart", e, r), 
                (m.current = e) && e.redirectTo && (t.isString(e.redirectTo) ? i.path(p(e.redirectTo, e.params)).search(e.params).replace() : i.url(e.redirectTo(e.pathParams, i.path(), i.search())).replace()), 
                a.when(e).then(function() {
                    if (e) {
                        var n = t.extend({}, e.resolve), r, i;
                        t.forEach(n, function(e, r) {
                            n[r] = t.isString(e) ? s.get(e) : s.invoke(e);
                        });
                        t.isDefined(r = e.template) ? t.isFunction(r) && (r = r(e.params)) : t.isDefined(i = e.templateUrl) && (t.isFunction(i) && (i = i(e.params)), 
                        i = u.getTrustedResourceUrl(i), t.isDefined(i) && (e.loadedTemplateUrl = i, r = c.get(i, {
                            cache: l
                        }).then(function(e) {
                            return e.data;
                        })));
                        t.isDefined(r) && (n.$template = r);
                        return a.all(n);
                    }
                }).then(function(i) {
                    e == m.current && (e && (e.locals = i, t.copy(e.params, o)), n.$broadcast("$routeChangeSuccess", e, r));
                }, function(t) {
                    e == m.current && n.$broadcast("$routeChangeError", e, r, t);
                });
            }
            function f() {
                var n, o;
                t.forEach(r, function(r, a) {
                    var s;
                    if (s = !o) {
                        var c = i.path();
                        s = r.keys;
                        var l = {};
                        if (r.regexp) if (c = r.regexp.exec(c)) {
                            for (var u = 1, h = c.length; u < h; ++u) {
                                var f = s[u - 1], p = c[u];
                                f && p && (l[f.name] = p);
                            }
                            s = l;
                        } else s = null; else s = null;
                        s = n = s;
                    }
                    s && (o = e(r, {
                        params: t.extend({}, i.search(), n),
                        pathParams: n
                    }), o.$$route = r);
                });
                return o || r[null] && e(r[null], {
                    params: {},
                    pathParams: {}
                });
            }
            function p(e, n) {
                var r = [];
                t.forEach((e || "").split(":"), function(e, t) {
                    if (0 === t) r.push(e); else {
                        var i = e.match(/(\w+)(.*)/), o = i[1];
                        r.push(n[o]);
                        r.push(i[2] || "");
                        delete n[o];
                    }
                });
                return r.join("");
            }
            var d = !1, m = {
                routes: r,
                reload: function() {
                    d = !0;
                    n.$evalAsync(h);
                }
            };
            n.$on("$locationChangeSuccess", h);
            return m;
        } ];
    });
    e.provider("$routeParams", function() {
        this.$get = function() {
            return {};
        };
    });
    e.directive("ngView", r);
    e.directive("ngView", i);
    r.$inject = [ "$route", "$anchorScroll", "$animate" ];
    i.$inject = [ "$compile", "$controller", "$route" ];
})(window, window.angular);

(function(e, t, n) {
    "use strict";
    function r(e) {
        var n = [];
        c(n, t.noop).chars(e);
        return n.join("");
    }
    function i(e) {
        var t = {};
        e = e.split(",");
        var n;
        for (n = 0; n < e.length; n++) t[e[n]] = !0;
        return t;
    }
    function o(e, n) {
        function r(e, r, o, s) {
            r = t.lowercase(r);
            if (R[r]) for (;c.last() && _[c.last()]; ) i("", c.last());
            x[r] && c.last() == r && i("", r);
            (s = T[r] || !!s) || c.push(r);
            var l = {};
            o.replace(f, function(e, t, n, r, i) {
                l[t] = a(n || r || i || "");
            });
            n.start && n.start(r, l, s);
        }
        function i(e, r) {
            var i = 0, o;
            if (r = t.lowercase(r)) for (i = c.length - 1; 0 <= i && c[i] != r; i--) ;
            if (0 <= i) {
                for (o = c.length - 1; o >= i; o--) n.end && n.end(c[o]);
                c.length = i;
            }
        }
        "string" !== typeof e && (e = null === e || "undefined" === typeof e ? "" : "" + e);
        var o, s, c = [], g = e, y;
        for (c.last = function() {
            return c[c.length - 1];
        }; e; ) {
            y = "";
            s = !0;
            if (c.last() && b[c.last()]) e = e.replace(RegExp("(.*)<\\s*\\/\\s*" + c.last() + "[^>]*>", "i"), function(e, t) {
                t = t.replace(m, "$1").replace(v, "$1");
                n.chars && n.chars(a(t));
                return "";
            }), i("", c.last()); else {
                if (0 === e.indexOf("<!--")) o = e.indexOf("--", 4), 0 <= o && e.lastIndexOf("-->", o) === o && (n.comment && n.comment(e.substring(4, o)), 
                e = e.substring(o + 3), s = !1); else if (E.test(e)) {
                    if (o = e.match(E)) e = e.replace(o[0], ""), s = !1;
                } else if (d.test(e)) {
                    if (o = e.match(h)) e = e.substring(o[0].length), o[0].replace(h, i), s = !1;
                } else p.test(e) && ((o = e.match(u)) ? (o[4] && (e = e.substring(o[0].length), 
                o[0].replace(u, r)), s = !1) : (y += "<", e = e.substring(1)));
                s && (o = e.indexOf("<"), y += 0 > o ? e : e.substring(0, o), e = 0 > o ? "" : e.substring(o), 
                n.chars && n.chars(a(y)));
            }
            if (e == g) throw l("badparse", e);
            g = e;
        }
        i();
    }
    function a(e) {
        if (!e) return "";
        var t = C.exec(e);
        e = t[1];
        var n = t[3];
        if (t = t[2]) M.innerHTML = t.replace(/</g, "&lt;"), t = "textContent" in M ? M.textContent : M.innerText;
        return e + t + n;
    }
    function s(e) {
        return e.replace(/&/g, "&amp;").replace(g, function(e) {
            var t = e.charCodeAt(0);
            e = e.charCodeAt(1);
            return "&#" + (1024 * (t - 55296) + (e - 56320) + 65536) + ";";
        }).replace(y, function(e) {
            return "&#" + e.charCodeAt(0) + ";";
        }).replace(/</g, "&lt;").replace(/>/g, "&gt;");
    }
    function c(e, n) {
        var r = !1, i = t.bind(e, e.push);
        return {
            start: function(e, o, a) {
                e = t.lowercase(e);
                !r && b[e] && (r = e);
                r || !0 !== w[e] || (i("<"), i(e), t.forEach(o, function(r, o) {
                    var a = t.lowercase(o), c = "img" === e && "src" === a || "background" === a;
                    !0 !== S[a] || !0 === H[a] && !n(r, c) || (i(" "), i(o), i('="'), i(s(r)), i('"'));
                }), i(a ? "/>" : ">"));
            },
            end: function(e) {
                e = t.lowercase(e);
                r || !0 !== w[e] || (i("</"), i(e), i(">"));
                e == r && (r = !1);
            },
            chars: function(e) {
                r || i(s(e));
            }
        };
    }
    var l = t.$$minErr("$sanitize"), u = /^<((?:[a-zA-Z])[\w:-]*)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*(>?)/, h = /^<\/\s*([\w:-]+)[^>]*>/, f = /([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g, p = /^</, d = /^<\//, m = /\x3c!--(.*?)--\x3e/g, E = /<!DOCTYPE([^>]*?)>/i, v = /<!\[CDATA\[(.*?)]]\x3e/g, g = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g, y = /([^\#-~| |!])/g, T = i("area,br,col,hr,img,wbr");
    e = i("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr");
    n = i("rp,rt");
    var x = t.extend({}, n, e), R = t.extend({}, e, i("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul")), _ = t.extend({}, n, i("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var")), b = i("script,style"), w = t.extend({}, T, R, _, x), H = i("background,cite,href,longdesc,src,usemap"), S = t.extend({}, H, i("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,target,title,type,valign,value,vspace,width")), M = document.createElement("pre"), C = /^(\s*)([\s\S]*?)(\s*)$/;
    t.module("ngSanitize", []).provider("$sanitize", function() {
        this.$get = [ "$$sanitizeUri", function(e) {
            return function(t) {
                var n = [];
                o(t, c(n, function(t, n) {
                    return !/^unsafe/.test(e(t, n));
                }));
                return n.join("");
            };
        } ];
    });
    t.module("ngSanitize").filter("linky", [ "$sanitize", function(e) {
        var n = /((ftp|https?):\/\/|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"]/, i = /^mailto:/;
        return function(o, a) {
            function s(e) {
                e && h.push(r(e));
            }
            function c(e, n) {
                h.push("<a ");
                t.isDefined(a) && (h.push('target="'), h.push(a), h.push('" '));
                h.push('href="');
                h.push(e);
                h.push('">');
                s(n);
                h.push("</a>");
            }
            if (!o) return o;
            for (var l, u = o, h = [], f, p; l = u.match(n); ) f = l[0], l[2] == l[3] && (f = "mailto:" + f), 
            p = l.index, s(u.substr(0, p)), c(f, l[0].replace(i, "")), u = u.substring(p + l[0].length);
            s(u);
            return e(h.join(""));
        };
    } ]);
})(window, window.angular);

(function(e, t, n) {
    "use strict";
    t.module("ngAnimate", [ "ng" ]).directive("ngAnimateChildren", function() {
        return function(e, n, r) {
            r = r.ngAnimateChildren;
            t.isString(r) && 0 === r.length ? n.data("$$ngAnimateChildren", !0) : e.$watch(r, function(e) {
                n.data("$$ngAnimateChildren", !!e);
            });
        };
    }).factory("$$animateReflow", [ "$$rAF", "$document", function(e, t) {
        return function(t) {
            return e(function() {
                t();
            });
        };
    } ]).config([ "$provide", "$animateProvider", function(r, i) {
        function o(e) {
            for (var t = 0; t < e.length; t++) {
                var n = e[t];
                if (n.nodeType == u) return n;
            }
        }
        function a(e) {
            return t.element(o(e));
        }
        var s = t.noop, c = t.forEach, l = i.$$selectors, u = 1, h = "$$ngAnimateState", f = "$$ngAnimateChildren", p = "ng-animate", d = {
            running: !0
        };
        r.decorator("$animate", [ "$delegate", "$injector", "$sniffer", "$rootElement", "$$asyncCallback", "$rootScope", "$document", function(e, n, $, r, u, m, E) {
            function v(e) {
                var t = e.data(h) || {};
                t.running = !0;
                e.data(h, t);
            }
            function g(e) {
                if (e) {
                    var t = [], r = {};
                    e = e.substr(1).split(".");
                    ($.transitions || $.animations) && t.push(n.get(l[""]));
                    for (var i = 0; i < e.length; i++) {
                        var o = e[i], a = l[o];
                        a && !r[o] && (t.push(n.get(a)), r[o] = !0);
                    }
                    return t;
                }
            }
            function y(e, n, r) {
                function i(e, t) {
                    var n = e[t], r = e["before" + t.charAt(0).toUpperCase() + t.substr(1)];
                    if (n || r) return "leave" == t && (r = n, n = null), T.push({
                        event: t,
                        fn: n
                    }), E.push({
                        event: t,
                        fn: r
                    }), !0;
                }
                function o(t, n, i) {
                    var o = [];
                    c(t, function(e) {
                        e.fn && o.push(e);
                    });
                    var a = 0;
                    c(o, function(t, c) {
                        var l = function() {
                            e: {
                                if (n) {
                                    (n[c] || s)();
                                    if (++a < o.length) break e;
                                    n = null;
                                }
                                i();
                            }
                        };
                        switch (t.event) {
                          case "setClass":
                            n.push(t.fn(e, h, f, l));
                            break;

                          case "addClass":
                            n.push(t.fn(e, h || r, l));
                            break;

                          case "removeClass":
                            n.push(t.fn(e, f || r, l));
                            break;

                          default:
                            n.push(t.fn(e, l));
                        }
                    });
                    n && 0 === n.length && i();
                }
                var a = e[0];
                if (a) {
                    var l = "setClass" == n, u = l || "addClass" == n || "removeClass" == n, h, f;
                    t.isArray(r) && (h = r[0], f = r[1], r = h + " " + f);
                    var p = e.attr("class") + " " + r;
                    if (H(p)) {
                        var d = s, m = [], E = [], v = s, y = [], T = [], p = (" " + p).replace(/\s+/g, ".");
                        c(g(p), function(e) {
                            !i(e, n) && l && (i(e, "addClass"), i(e, "removeClass"));
                        });
                        return {
                            node: a,
                            event: n,
                            className: r,
                            isClassBased: u,
                            isSetClassOperation: l,
                            before: function(e) {
                                d = e;
                                o(E, m, function() {
                                    d = s;
                                    e();
                                });
                            },
                            after: function(e) {
                                v = e;
                                o(T, y, function() {
                                    v = s;
                                    e();
                                });
                            },
                            cancel: function() {
                                m && (c(m, function(e) {
                                    (e || s)(!0);
                                }), d(!0));
                                y && (c(y, function(e) {
                                    (e || s)(!0);
                                }), v(!0));
                            }
                        };
                    }
                }
            }
            function T(e, n, r, i, o, a, s) {
                function l(t) {
                    var i = "$animate:" + t;
                    T && (T[i] && 0 < T[i].length) && u(function() {
                        r.triggerHandler(i, {
                            event: e,
                            className: n
                        });
                    });
                }
                function f() {
                    l("before");
                }
                function d() {
                    l("after");
                }
                function m() {
                    l("close");
                    s && u(function() {
                        s();
                    });
                }
                function E() {
                    E.hasBeenRun || (E.hasBeenRun = !0, a());
                }
                function v() {
                    if (!v.hasBeenRun) {
                        v.hasBeenRun = !0;
                        var t = r.data(h);
                        t && (g && g.isClassBased ? R(r, n) : (u(function() {
                            var t = r.data(h) || {};
                            C == t.index && R(r, n, e);
                        }), r.data(h, t)));
                        m();
                    }
                }
                var g = y(r, e, n);
                if (g) {
                    n = g.className;
                    var T = t.element._data(g.node), T = T && T.events;
                    i || (i = o ? o.parent() : r.parent());
                    var x = r.data(h) || {};
                    o = x.active || {};
                    var w = x.totalActive || 0, H = x.last, S;
                    g.isClassBased && (S = x.running || x.disabled || H && !H.isClassBased);
                    if (S || _(r, i)) E(), f(), d(), v(); else {
                        i = !1;
                        if (0 < w) {
                            S = [];
                            if (g.isClassBased) "setClass" == H.event ? (S.push(H), R(r, n)) : o[n] && (M = o[n], 
                            M.event == e ? i = !0 : (S.push(M), R(r, n))); else if ("leave" == e && o["ng-leave"]) i = !0; else {
                                for (var M in o) S.push(o[M]), R(r, M);
                                o = {};
                                w = 0;
                            }
                            0 < S.length && c(S, function(e) {
                                e.cancel();
                            });
                        }
                        !g.isClassBased || (g.isSetClassOperation || i) || (i = "addClass" == e == r.hasClass(n));
                        if (i) E(), f(), d(), m(); else {
                            if ("leave" == e) r.one("$destroy", function(e) {
                                e = t.element(this);
                                var n = e.data(h);
                                n && (n = n.active["ng-leave"]) && (n.cancel(), R(e, "ng-leave"));
                            });
                            r.addClass(p);
                            var C = b++;
                            w++;
                            o[n] = g;
                            r.data(h, {
                                last: g,
                                active: o,
                                index: C,
                                totalActive: w
                            });
                            f();
                            g.before(function(t) {
                                var i = r.data(h);
                                t = t || !i || !i.active[n] || g.isClassBased && i.active[n].event != e;
                                E();
                                !0 === t ? v() : (d(), g.after(v));
                            });
                        }
                    }
                } else E(), f(), d(), v();
            }
            function x(e) {
                if (e = o(e)) e = t.isFunction(e.getElementsByClassName) ? e.getElementsByClassName(p) : e.querySelectorAll("." + p), 
                c(e, function(e) {
                    e = t.element(e);
                    (e = e.data(h)) && e.active && c(e.active, function(e) {
                        e.cancel();
                    });
                });
            }
            function R(e, t) {
                if (o(e) == o(r)) d.disabled || (d.running = !1, d.structural = !1); else if (t) {
                    var n = e.data(h) || {}, i = !0 === t;
                    !i && (n.active && n.active[t]) && (n.totalActive--, delete n.active[t]);
                    if (i || !n.totalActive) e.removeClass(p), e.removeData(h);
                }
            }
            function _(e, n) {
                if (d.disabled) return !0;
                if (o(e) == o(r)) return d.running;
                var i, a, s;
                do {
                    if (0 === n.length) break;
                    var c = o(n) == o(r), l = c ? d : n.data(h) || {};
                    if (l.disabled) return !0;
                    c && (s = !0);
                    !1 !== i && (c = n.data(f), t.isDefined(c) && (i = c));
                    a = a || l.running || l.last && !l.last.isClassBased;
                } while (n = n.parent());
                return !s || !i && a;
            }
            var b = 0;
            r.data(h, d);
            m.$$postDigest(function() {
                m.$$postDigest(function() {
                    d.running = !1;
                });
            });
            var w = i.classNameFilter(), H = w ? function(e) {
                return w.test(e);
            } : function() {
                return !0;
            };
            return {
                enter: function(n, r, i, o) {
                    n = t.element(n);
                    r = r && t.element(r);
                    i = i && t.element(i);
                    v(n);
                    e.enter(n, r, i);
                    m.$$postDigest(function() {
                        n = a(n);
                        T("enter", "ng-enter", n, r, i, s, o);
                    });
                },
                leave: function(n, r) {
                    n = t.element(n);
                    x(n);
                    v(n);
                    m.$$postDigest(function() {
                        T("leave", "ng-leave", a(n), null, null, function() {
                            e.leave(n);
                        }, r);
                    });
                },
                move: function(n, r, i, o) {
                    n = t.element(n);
                    r = r && t.element(r);
                    i = i && t.element(i);
                    x(n);
                    v(n);
                    e.move(n, r, i);
                    m.$$postDigest(function() {
                        n = a(n);
                        T("move", "ng-move", n, r, i, s, o);
                    });
                },
                addClass: function(n, r, i) {
                    n = t.element(n);
                    n = a(n);
                    T("addClass", r, n, null, null, function() {
                        e.addClass(n, r);
                    }, i);
                },
                removeClass: function(n, r, i) {
                    n = t.element(n);
                    n = a(n);
                    T("removeClass", r, n, null, null, function() {
                        e.removeClass(n, r);
                    }, i);
                },
                setClass: function(n, r, i, o) {
                    n = t.element(n);
                    n = a(n);
                    T("setClass", [ r, i ], n, null, null, function() {
                        e.setClass(n, r, i);
                    }, o);
                },
                enabled: function(e, t) {
                    switch (arguments.length) {
                      case 2:
                        if (e) R(t); else {
                            var n = t.data(h) || {};
                            n.disabled = !0;
                            t.data(h, n);
                        }
                        break;

                      case 1:
                        d.disabled = !e;
                        break;

                      default:
                        e = !d.disabled;
                    }
                    return !!e;
                }
            };
        } ]);
        i.register("", [ "$window", "$sniffer", "$timeout", "$$animateReflow", function(r, i, a, l) {
            function h(e, t) {
                X && X();
                W.push(t);
                X = l(function() {
                    c(W, function(e) {
                        e();
                    });
                    W = [];
                    X = null;
                    I = {};
                });
            }
            function f(e, n) {
                var r = o(e);
                e = t.element(r);
                K.push(e);
                r = Date.now() + n;
                r <= Y || (a.cancel(q), Y = r, q = a(function() {
                    p(K);
                    K = [];
                }, n, !1));
            }
            function p(e) {
                c(e, function(e) {
                    (e = e.data(O)) && (e.closeAnimationFn || s)();
                });
            }
            function d(e, t) {
                var n = t ? I[t] : null;
                if (!n) {
                    var i = 0, o = 0, a = 0, s = 0, l, h, f, p;
                    c(e, function(e) {
                        if (e.nodeType == u) {
                            e = r.getComputedStyle(e) || {};
                            f = e[C + L];
                            i = Math.max(m(f), i);
                            p = e[C + F];
                            l = e[C + D];
                            o = Math.max(m(l), o);
                            h = e[P + D];
                            s = Math.max(m(h), s);
                            var t = m(e[P + L]);
                            0 < t && (t *= parseInt(e[P + U], 10) || 1);
                            a = Math.max(t, a);
                        }
                    });
                    n = {
                        total: 0,
                        transitionPropertyStyle: p,
                        transitionDurationStyle: f,
                        transitionDelayStyle: l,
                        transitionDelay: o,
                        transitionDuration: i,
                        animationDelayStyle: h,
                        animationDelay: s,
                        animationDuration: a
                    };
                    t && (I[t] = n);
                }
                return n;
            }
            function m(e) {
                var n = 0;
                e = t.isString(e) ? e.split(/\s*,\s*/) : [];
                c(e, function(e) {
                    n = Math.max(parseFloat(e) || 0, n);
                });
                return n;
            }
            function E(e) {
                var t = e.parent(), n = t.data(V);
                n || (t.data(V, ++G), n = G);
                return n + "-" + o(e).getAttribute("class");
            }
            function v(e, t, n, r) {
                var i = E(t), a = i + " " + n, c = I[a] ? ++I[a].total : 0, l = {};
                if (0 < c) {
                    var u = n + "-stagger", l = i + " " + u;
                    (i = !I[l]) && t.addClass(u);
                    l = d(t, l);
                    i && t.removeClass(u);
                }
                r = r || function(e) {
                    return e();
                };
                t.addClass(n);
                var u = t.data(O) || {}, h = r(function() {
                    return d(t, a);
                });
                r = h.transitionDuration;
                i = h.animationDuration;
                if (0 === r && 0 === i) return t.removeClass(n), !1;
                t.data(O, {
                    running: u.running || 0,
                    itemIndex: c,
                    stagger: l,
                    timings: h,
                    closeAnimationFn: s
                });
                e = 0 < u.running || "setClass" == e;
                0 < r && g(t, n, e);
                0 < i && (0 < l.animationDelay && 0 === l.animationDuration) && (o(t).style[P] = "none 0s");
                return !0;
            }
            function g(e, t, n) {
                "ng-enter" != t && ("ng-move" != t && "ng-leave" != t) && n ? e.addClass(z) : o(e).style[C + F] = "none";
            }
            function y(e, t) {
                var n = C + F, r = o(e);
                r.style[n] && 0 < r.style[n].length && (r.style[n] = "");
                e.removeClass(z);
            }
            function T(e) {
                var t = P;
                e = o(e);
                e.style[t] && 0 < e.style[t].length && (e.style[t] = "");
            }
            function x(e, t, n, r) {
                function i(e) {
                    t.off(g, a);
                    t.removeClass(l);
                    H(t, n);
                    e = o(t);
                    for (var r in T) e.style.removeProperty(T[r]);
                }
                function a(e) {
                    e.stopPropagation();
                    var t = e.originalEvent || e;
                    e = t.$manualTimeStamp || t.timeStamp || Date.now();
                    t = parseFloat(t.elapsedTime.toFixed(B));
                    Math.max(e - v, 0) >= E && t >= d && r();
                }
                var s = o(t);
                e = t.data(O);
                if (-1 != s.getAttribute("class").indexOf(n) && e) {
                    var l = "";
                    c(n.split(" "), function(e, t) {
                        l += (0 < t ? " " : "") + e + "-active";
                    });
                    var u = e.stagger, h = e.timings, p = e.itemIndex, d = Math.max(h.transitionDuration, h.animationDuration), m = Math.max(h.transitionDelay, h.animationDelay), E = m * N, v = Date.now(), g = k + " " + A, y = "", T = [];
                    if (0 < h.transitionDuration) {
                        var x = h.transitionPropertyStyle;
                        -1 == x.indexOf("all") && (y += M + "transition-property: " + x + ";", y += M + "transition-duration: " + h.transitionDurationStyle + ";", 
                        T.push(M + "transition-property"), T.push(M + "transition-duration"));
                    }
                    0 < p && (0 < u.transitionDelay && 0 === u.transitionDuration && (y += M + "transition-delay: " + R(h.transitionDelayStyle, u.transitionDelay, p) + "; ", 
                    T.push(M + "transition-delay")), 0 < u.animationDelay && 0 === u.animationDuration && (y += M + "animation-delay: " + R(h.animationDelayStyle, u.animationDelay, p) + "; ", 
                    T.push(M + "animation-delay")));
                    0 < T.length && (h = s.getAttribute("style") || "", s.setAttribute("style", h + "; " + y));
                    t.on(g, a);
                    t.addClass(l);
                    e.closeAnimationFn = function() {
                        i();
                        r();
                    };
                    s = (p * (Math.max(u.animationDelay, u.transitionDelay) || 0) + (m + d) * j) * N;
                    e.running++;
                    f(t, s);
                    return i;
                }
                r();
            }
            function R(e, t, n) {
                var r = "";
                c(e.split(","), function(e, i) {
                    r += (0 < i ? "," : "") + (n * t + parseInt(e, 10)) + "s";
                });
                return r;
            }
            function _(e, t, n, r) {
                if (v(e, t, n, r)) return function(e) {
                    e && H(t, n);
                };
            }
            function b(e, t, n, r) {
                if (t.data(O)) return x(e, t, n, r);
                H(t, n);
                r();
            }
            function w(e, t, n, r) {
                var i = _(e, t, n);
                if (i) {
                    var o = i;
                    h(t, function() {
                        y(t, n);
                        T(t);
                        o = b(e, t, n, r);
                    });
                    return function(e) {
                        (o || s)(e);
                    };
                }
                r();
            }
            function H(e, t) {
                e.removeClass(t);
                var n = e.data(O);
                n && (n.running && n.running--, n.running && 0 !== n.running || e.removeData(O));
            }
            function S(e, n) {
                var r = "";
                e = t.isArray(e) ? e : e.split(/\s+/);
                c(e, function(e, t) {
                    e && 0 < e.length && (r += (0 < t ? " " : "") + e + n);
                });
                return r;
            }
            var M = "", C, A, P, k;
            e.ontransitionend === n && e.onwebkittransitionend !== n ? (M = "-webkit-", C = "WebkitTransition", 
            A = "webkitTransitionEnd transitionend") : (C = "transition", A = "transitionend");
            e.onanimationend === n && e.onwebkitanimationend !== n ? (M = "-webkit-", P = "WebkitAnimation", 
            k = "webkitAnimationEnd animationend") : (P = "animation", k = "animationend");
            var L = "Duration", F = "Property", D = "Delay", U = "IterationCount", V = "$$ngAnimateKey", O = "$$ngAnimateCSS3Data", z = "ng-animate-block-transitions", B = 3, j = 1.5, N = 1e3, I = {}, G = 0, W = [], X, q = null, Y = 0, K = [];
            return {
                enter: function(e, t) {
                    return w("enter", e, "ng-enter", t);
                },
                leave: function(e, t) {
                    return w("leave", e, "ng-leave", t);
                },
                move: function(e, t) {
                    return w("move", e, "ng-move", t);
                },
                beforeSetClass: function(e, t, n, r) {
                    var i = S(n, "-remove") + " " + S(t, "-add"), o = _("setClass", e, i, function(r) {
                        var i = e.attr("class");
                        e.removeClass(n);
                        e.addClass(t);
                        r = r();
                        e.attr("class", i);
                        return r;
                    });
                    if (o) return h(e, function() {
                        y(e, i);
                        T(e);
                        r();
                    }), o;
                    r();
                },
                beforeAddClass: function(e, t, n) {
                    var r = _("addClass", e, S(t, "-add"), function(n) {
                        e.addClass(t);
                        n = n();
                        e.removeClass(t);
                        return n;
                    });
                    if (r) return h(e, function() {
                        y(e, t);
                        T(e);
                        n();
                    }), r;
                    n();
                },
                setClass: function(e, t, n, r) {
                    n = S(n, "-remove");
                    t = S(t, "-add");
                    return b("setClass", e, n + " " + t, r);
                },
                addClass: function(e, t, n) {
                    return b("addClass", e, S(t, "-add"), n);
                },
                beforeRemoveClass: function(e, t, n) {
                    var r = _("removeClass", e, S(t, "-remove"), function(n) {
                        var r = e.attr("class");
                        e.removeClass(t);
                        n = n();
                        e.attr("class", r);
                        return n;
                    });
                    if (r) return h(e, function() {
                        y(e, t);
                        T(e);
                        n();
                    }), r;
                    n();
                },
                removeClass: function(e, t, n) {
                    return b("removeClass", e, S(t, "-remove"), n);
                }
            };
        } ]);
    } ]);
})(window, window.angular);

angular.module("youtube-embed", [ "ng" ]).service("youtubeEmbedUtils", [ "$window", "$rootScope", function(e, t) {
    function n(e, t) {
        return e.indexOf(t) > -1;
    }
    var r = {}, i = /https?:\/\/(?:[0-9A-Z-]+\.)?(?:youtu\.be\/|youtube(?:-nocookie)?\.com\S*[^\w\s-])([\w-]{11})(?=[^\w-]|$)(?![?=&+%\w.-]*(?:['"][^<>]*>|<\/a>))[?=&+%\w.-]*/gi, o = /t=(\d+)[ms]?(\d+)?s?/;
    return r.getIdFromURL = function(e) {
        var t = e.replace(i, "$1");
        if (n(t, ";")) {
            var r = t.split(";");
            if (n(r[1], "%")) {
                var o = decodeURIComponent(t.split(";")[1]);
                t = ("http://youtube.com" + o).replace(i, "$1");
            } else t = r[0];
        } else n(t, "#") && (t = t.split("#")[0]);
        return t;
    }, r.getTimeFromURL = function(e) {
        e = e || "";
        var t = e.match(o);
        if (!t) return 0;
        var r = t[0], i = t[1], a = t[2];
        return "undefined" != typeof a ? (a = parseInt(a, 10), i = parseInt(i, 10)) : n(r, "m") ? (i = parseInt(i, 10), 
        a = 0) : (a = parseInt(i, 10), i = 0), a + 60 * i;
    }, function() {
        var e = [ "http:", "https:" ], t = "//www.youtube.com/iframe_api";
        e.indexOf(window.location.protocol) < 0 && (t = "http:" + t);
        var n = document.createElement("script");
        n.src = t;
        var r = document.getElementsByTagName("script")[0];
        r.parentNode.insertBefore(n, r);
    }(), r.ready = !1, e.onYouTubeIframeAPIReady = function() {
        t.$apply(function() {
            r.ready = !0;
        });
    }, r;
} ]).directive("youtubeVideo", [ "youtubeEmbedUtils", function(e) {
    var t = 1, n = {
        "-1": "unstarted",
        0: "ended",
        1: "playing",
        2: "paused",
        3: "buffering",
        5: "queued"
    }, r = "youtube.player.";
    return {
        restrict: "EA",
        scope: {
            videoId: "=?",
            videoUrl: "=?",
            player: "=?",
            playerVars: "=?",
            playerHeight: "=?",
            playerWidth: "=?"
        },
        link: function(i, o, a) {
            function s() {
                var e = Array.prototype.slice.call(arguments);
                i.$apply(function() {
                    i.$emit.apply(i, e);
                });
            }
            function c(e) {
                var t = n[e.data];
                "undefined" != typeof t && s(r + t, i.player, e), i.$apply(function() {
                    i.player.currentState = t;
                });
            }
            function l(e) {
                s(r + "ready", i.player, e);
            }
            function u() {
                var e = angular.copy(i.playerVars);
                e.start = e.start || i.urlStartTime;
                var t = new YT.Player(f, {
                    height: i.playerHeight,
                    width: i.playerWidth,
                    videoId: i.videoId,
                    playerVars: e,
                    events: {
                        onReady: l,
                        onStateChange: c
                    }
                });
                return t.id = f, t;
            }
            function h() {
                f && i.videoId && (i.player && "function" == typeof i.player.destroy && i.player.destroy(), 
                i.player = u());
            }
            i.utils = e;
            var f = a.playerId || o[0].id || "unique-youtube-embed-id-" + t++;
            o[0].id = f, i.playerHeight = i.playerHeight || 390, i.playerWidth = i.playerWidth || 640, 
            i.playerVars = i.playerVars || {};
            var p = i.$watch(function() {
                return i.utils.ready && ("undefined" != typeof i.videoUrl || "undefined" != typeof i.videoId);
            }, function(e) {
                e && (p(), "undefined" != typeof i.videoUrl ? i.$watch("videoUrl", function(e) {
                    i.videoId = i.utils.getIdFromURL(e), i.urlStartTime = i.utils.getTimeFromURL(e), 
                    h();
                }) : i.$watch("videoId", function() {
                    i.urlStartTime = null, h();
                }));
            });
            i.$on("$destroy", function() {
                i.player && i.player.destroy();
            });
        }
    };
} ]);

!function(e) {
    if ("object" == typeof exports) module.exports = e(); else if ("function" == typeof define && define.amd) define(e); else {
        var t;
        "undefined" != typeof window ? t = window : "undefined" != typeof global ? t = global : "undefined" != typeof self && (t = self), 
        t.contentful = e();
    }
}(function() {
    var e;
    return function t(e, n, r) {
        function i(a, s) {
            if (!n[a]) {
                if (!e[a]) {
                    var c = "function" == typeof require && require;
                    if (!s && c) return c(a, !0);
                    if (o) return o(a, !0);
                    throw new Error("Cannot find module '" + a + "'");
                }
                var l = n[a] = {
                    exports: {}
                };
                e[a][0].call(l.exports, function(t) {
                    var n = e[a][1][t];
                    return i(n ? n : t);
                }, l, l.exports, t, e, n, r);
            }
            return n[a].exports;
        }
        for (var o = "function" == typeof require && require, a = 0; a < r.length; a++) i(r[a]);
        return i;
    }({
        1: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return p.reduce(e, function(e, t, n) {
                    return p.truthy(t) && (e[n] = t), e;
                }, {});
            }
            function i(e, t) {
                if (!p.exists(e[t])) throw new TypeError("Expected property " + t);
            }
            function o(e) {
                return p.getPath(e, [ "sys", "type" ]) in S;
            }
            function a(e) {
                var t = S[e.sys.type];
                return t.parse(e);
            }
            function s(e) {
                return JSON.parse(e.body);
            }
            function c(e) {
                return p.reduce(e, function(e, t, n) {
                    return e[n] = p.isArray(t) ? t.join(",") : t, e;
                }, {});
            }
            function l(e) {
                return f(e, u, function(t) {
                    return h(e, t) || t;
                }), e.items;
            }
            function u(e) {
                return "Link" === p.getPath(e, [ "sys", "type" ]);
            }
            function h(e, t) {
                var n = t.sys.linkType, r = t.sys.id, i = function(e) {
                    return e.sys.type === n && e.sys.id === r;
                };
                return p.find(e.items, i) || e.includes && p.find(e.includes[n], i);
            }
            function f(e, t, n) {
                return t(e) ? n(e) : p.isArray(e) || p.isObject(e) ? (p.each(e, function(r, i) {
                    e[i] = f(r, t, n);
                }), e) : e;
            }
            var p = e("underscore-contrib"), d = e("questor"), m = e("redefine"), E = e("querystring"), v = m.Class({
                constructor: function(e) {
                    i(e, "accessToken"), i(e, "space"), this.options = p.defaults({}, e, {
                        host: "cdn.contentful.com",
                        secure: !0
                    });
                },
                request: function(e, t) {
                    t || (t = {}), t.headers || (t.headers = {}), t.query || (t.query = {}), t.headers["Content-Type"] = "application/vnd.contentful.delivery.v1+json", 
                    t.query.access_token = this.options.accessToken;
                    var n = [ this.options.secure ? "https" : "http", "://", p.first(this.options.host.split(":")), ":", this.options.secure ? "443" : "80", "/spaces/", this.options.space, e, "?", E.stringify(t.query) ].join("");
                    return d(n, t).then(s).catch(Error, function(e) {
                        throw e;
                    }).catch(function(e) {
                        throw s(e);
                    });
                },
                asset: function(e, t) {
                    return this.request("/assets/" + e).then(g.parse).nodeify(t);
                },
                assets: function(e, t) {
                    var n = _.parse(e);
                    return this.request("/assets", {
                        query: n
                    }).then(p.partial(R.parse, g)).nodeify(t);
                },
                contentType: function(e, t) {
                    return this.request("/content_types/" + e).then(T.parse).nodeify(t);
                },
                contentTypes: function(e, t) {
                    var n = _.parse(e);
                    return this.request("/content_types", {
                        query: n
                    }).then(p.partial(R.parse, T)).nodeify(t);
                },
                entry: function(e, t) {
                    return this.request("/entries/" + e).then(y.parse).nodeify(t);
                },
                entries: function(e, t) {
                    var n = _.parse(e);
                    return this.request("/entries", {
                        query: n
                    }).then(p.partial(R.parse, y)).nodeify(t);
                },
                space: function(e) {
                    return this.request("").nodeify(e);
                }
            }), g = m.Class({
                constructor: function() {},
                statics: {
                    parse: function(e) {
                        return p.extend(new g(), {
                            sys: w.parse(e.sys),
                            fields: e.fields
                        });
                    }
                }
            }), y = m.Class({
                constructor: function() {},
                statics: {
                    parse: function(e) {
                        return p.extend(new y(), {
                            sys: w.parse(e.sys),
                            fields: e.fields
                        });
                    }
                }
            }), T = m.Class({
                constructor: function() {},
                statics: {
                    parse: function(e) {
                        return p.extend(new T(), {
                            sys: w.parse(e.sys),
                            fields: e.fields.map(x.parse)
                        }, p.pick(e, "name", "displayField"));
                    }
                }
            }), x = m.Class({
                constructor: function() {},
                statics: {
                    parse: function(e) {
                        return p.extend(new x(), e);
                    }
                }
            }), R = m.Class({
                constructor: function() {},
                statics: {
                    parse: function(e, t) {
                        f(t, o, a);
                        var n = l(t);
                        return m(n, {
                            limit: t.limit,
                            skip: t.skip,
                            total: t.total
                        }, {
                            enumerable: !1
                        });
                    }
                }
            }), _ = m.Class({
                constructor: function() {},
                toQueryString: function() {
                    return E.stringify(this);
                },
                statics: {
                    parse: function(e) {
                        return p.extend(new _(), c(e));
                    }
                }
            }), b = m.Class({
                constructor: function() {},
                statics: {
                    parse: function(e) {
                        return p.extend(new b(), e);
                    }
                }
            }), w = m.Class({
                constructor: function() {},
                statics: {
                    parse: function(e) {
                        return p.extend(new w(), p.pick(e, "id", "revision", "type", "locale"), r({
                            contentType: e.contentType && H.parse(e.contentType),
                            createdAt: e.createdAt && new Date(e.createdAt),
                            linkType: e.linkType,
                            updatedAt: e.updatedAt && new Date(e.updatedAt),
                            space: e.space && H.parse(e.space)
                        }));
                    }
                }
            }), H = m.Class({
                constructor: function() {},
                statics: {
                    parse: function(e) {
                        return p.extend(new H(), {
                            sys: w.parse(e.sys)
                        });
                    }
                }
            });
            n.createClient = p.fnull(function(e) {
                return new v(e);
            }, {});
            var S = {
                Asset: g,
                ContentType: T,
                Entry: y,
                Space: b
            };
        }, {
            querystring: 22,
            questor: 19,
            redefine: 2,
            "underscore-contrib": 3
        } ],
        2: [ function(e, t) {
            var n = this._ = function(e, n, r) {
                function i(e, t) {
                    for (var n, r = {}, i = Y(e), o = 0, a = i.length; a > o; o++) n = i[o], r[n] = q(e, n);
                    return Q(void 0 === t ? K(e) : t, r);
                }
                function o(e, t, n, r) {
                    H(n || v.defaults || {}, rt), H(r, rt), (X.call(r, L) || X.call(r, O)) && (delete rt[N], 
                    delete rt[j]), $(e, t, rt), et(rt);
                }
                function a(e, t, n, r) {
                    o(e, t, r, n instanceof u ? n : n instanceof m ? l(e, t, n) : (ot[j] = n, ot)), 
                    delete ot[j];
                }
                function s(e, t, n) {
                    for (var r in t) X.call(t, r) && a(e, r, t[r], n);
                }
                function c(e, t) {
                    for (var n, r = 0; r < t.length; r++) n = t[r], d(n) && (n = "mixin" === (n.type || n.name) ? n.call(n) || n : n[V]), 
                    Z(e, n);
                }
                function l(e, t, n) {
                    var r, i = n._, o = X.call(n, C) ? !!n[C] : !0, a = X.call(n, P) && n[P], s = X.call(n, N) && n[N];
                    return n[L] = function() {
                        return at && (n = q(e, t), delete e[t]), rt[j] = i.call(r = this), rt[C] = o, rt[P] = a, 
                        rt[N] = s, $(r, t, rt), et(rt), at && (H(n, rt), $(e, t, rt), et(rt)), r[t];
                    }, at && (n[C] = !0), n;
                }
                function u(e) {
                    H(e, this);
                }
                function h(e) {
                    return new u(e);
                }
                function f(e) {
                    return Q(d(e) ? e[V] : e);
                }
                function p(e, t, n) {
                    var r = f(e);
                    return t ? v(r, t, n) : r;
                }
                function d(e) {
                    return "function" == typeof e;
                }
                function m(e) {
                    this._ = d(e) ? e : H(e, this) || e[j];
                }
                function E(e) {
                    return new m(e);
                }
                function v(e, t, n, r) {
                    return ("string" == typeof t ? a(e, t, n, r) : s(e, t, n)) || e;
                }
                function g(e) {
                    return function(t, n, r) {
                        return ("string" == typeof n ? a(t, n, r, e) : s(t, n, e)) || t;
                    };
                }
                function y(e, t) {
                    for (var n, r, i, o; t = K(t); ) for (i = Y(t), n = i.length; n--; ) if (t[r = i[n]] === e) {
                        do o = K(t), t = o; while (o[r] === e);
                        return o[r];
                    }
                }
                function T() {
                    return y(T.caller, this).apply(this, arguments);
                }
                function x(e, t) {
                    return "string" == typeof e ? x(this, e) : e[D + t] || R(e, t);
                }
                function R(e, t) {
                    return tt[j] = G.call(e[t], e), $(e, D + t, tt), tt[j] = x, e[D + t];
                }
                function _(e, t) {
                    var n, r = X.call(e, A) ? e[A] : function() {}, i = X.call(e, z) && e[z], a = X.call(e, k) && e[k];
                    if (t || (t = {}, t[N] = !0), delete e[A], a && (delete e[k], v(r[V] = f(a), "constructor", r), 
                    d(a))) for (n in a) X.call(a, n) && "name" !== n && "length" !== n && o(r, n, rt, q(a, n));
                    return i && (delete e[z], s(r, i, it)), X.call(e, F) && (c(r[V], [].concat(e[F])), 
                    delete e[F]), s(r[V], e, t), b(r[V]), M in r[V] || $(r[V], M, tt), r;
                }
                function b(e) {
                    return X.call(e, B) ? object : $(e, B, nt);
                }
                var w, H, S, M = "bound", C = "configurable", A = "constructor", P = "enumerable", k = "extend", L = "get", F = "mixin", D = "__@", U = "__proto__", V = "prototype", O = "set", z = "statics", B = "super", j = "value", N = "writable", I = n, G = n.bind || function(e) {
                    var t = this;
                    return function() {
                        return t.apply(e, arguments);
                    };
                }, W = function(t, n) {
                    return e[t] || r[t] || n;
                }, $ = W("defineProperty"), X = W("hasOwnProperty"), q = W("getOwnPropertyDescriptor"), Y = W("getOwnPropertyNames", r.keys), K = W("getPrototypeOf", function(e) {
                    return e[U];
                }), Z = r.mixin || function(e, t) {
                    for (var n = Y(t), r = n.length; r--; o(e, n[r], rt, q(t, n[r]))) ;
                    return e;
                }, Q = e.create || e.inherit || r.create, J = [ C, P, L, O, j, N ], et = I("o", "delete o." + J.join(";delete o.")), tt = Q(null), nt = Q(null), rt = Q(null), it = {}, ot = {}, at = !1;
                for (it[N] = !0, it[P] = !0, w = 0; w < J.length; w++) J[w] = [ 'if(h.call(a,"', '"))b.', "=a.", ";" ].join(J[w]);
                H = I("h", "return function(a,b){" + J.join("") + "}")(X), nt[j] = function ct(e) {
                    return G.apply(y(ct.caller, e), arguments);
                }, nt[C] = nt[P] = nt[N] = !1, $(T, "bind", nt), nt[j] = T, tt[P] = !1, tt[C] = tt[N] = !0, 
                tt[j] = x, v.from = p, v.Class = _, v[B] = b, v.mixin = Z, v.bound = x, v.clone = i, 
                v.as = h, v.later = E, v.using = g, v.defaults = {}, "undefined" != typeof t && t.exports && ((t.exports = v).redefine = v), 
                e.mixin ? e.mixin({
                    redefine: v
                }) : e.redefine = v;
                try {
                    S = Q(v({}, {
                        _: E(r)
                    }))._;
                } catch (st) {
                    et(rt), at = !0;
                }
                return e;
            }(n || this, Function, Object);
        }, {} ],
        3: [ function(e, t) {
            e("./underscore.array.builders"), e("./underscore.array.selectors"), e("./underscore.collections.walk"), 
            e("./underscore.function.arity"), e("./underscore.function.combinators"), e("./underscore.function.dispatch"), 
            e("./underscore.function.iterators"), e("./underscore.function.predicates"), e("./underscore.object.builders"), 
            e("./underscore.object.selectors"), e("./underscore.util.existential"), e("./underscore.util.operators"), 
            e("./underscore.util.strings"), e("./underscore.util.trampolines"), t.exports = e("underscore");
        }, {
            "./underscore.array.builders": 5,
            "./underscore.array.selectors": 6,
            "./underscore.collections.walk": 7,
            "./underscore.function.arity": 8,
            "./underscore.function.combinators": 9,
            "./underscore.function.dispatch": 10,
            "./underscore.function.iterators": 11,
            "./underscore.function.predicates": 12,
            "./underscore.object.builders": 13,
            "./underscore.object.selectors": 14,
            "./underscore.util.existential": 15,
            "./underscore.util.operators": 16,
            "./underscore.util.strings": 17,
            "./underscore.util.trampolines": 18,
            underscore: 4
        } ],
        4: [ function(e, t, n) {
            (function() {
                var e = this, r = e._, i = {}, o = Array.prototype, a = Object.prototype, s = Function.prototype, c = o.push, l = o.slice, u = o.concat, h = a.toString, f = a.hasOwnProperty, p = o.forEach, d = o.map, m = o.reduce, E = o.reduceRight, v = o.filter, g = o.every, y = o.some, T = o.indexOf, x = o.lastIndexOf, R = Array.isArray, _ = Object.keys, b = s.bind, w = function(e) {
                    return e instanceof w ? e : this instanceof w ? void (this._wrapped = e) : new w(e);
                };
                "undefined" != typeof n ? ("undefined" != typeof t && t.exports && (n = t.exports = w), 
                n._ = w) : e._ = w, w.VERSION = "1.5.2";
                var H = w.each = w.forEach = function(e, t, n) {
                    if (null != e) if (p && e.forEach === p) e.forEach(t, n); else if (e.length === +e.length) {
                        for (var r = 0, o = e.length; o > r; r++) if (t.call(n, e[r], r, e) === i) return;
                    } else for (var a = w.keys(e), r = 0, o = a.length; o > r; r++) if (t.call(n, e[a[r]], a[r], e) === i) return;
                };
                w.map = w.collect = function(e, t, n) {
                    var r = [];
                    return null == e ? r : d && e.map === d ? e.map(t, n) : (H(e, function(e, i, o) {
                        r.push(t.call(n, e, i, o));
                    }), r);
                };
                var S = "Reduce of empty array with no initial value";
                w.reduce = w.foldl = w.inject = function(e, t, n, r) {
                    var i = arguments.length > 2;
                    if (null == e && (e = []), m && e.reduce === m) return r && (t = w.bind(t, r)), 
                    i ? e.reduce(t, n) : e.reduce(t);
                    if (H(e, function(e, o, a) {
                        i ? n = t.call(r, n, e, o, a) : (n = e, i = !0);
                    }), !i) throw new TypeError(S);
                    return n;
                }, w.reduceRight = w.foldr = function(e, t, n, r) {
                    var i = arguments.length > 2;
                    if (null == e && (e = []), E && e.reduceRight === E) return r && (t = w.bind(t, r)), 
                    i ? e.reduceRight(t, n) : e.reduceRight(t);
                    var o = e.length;
                    if (o !== +o) {
                        var a = w.keys(e);
                        o = a.length;
                    }
                    if (H(e, function(s, c, l) {
                        c = a ? a[--o] : --o, i ? n = t.call(r, n, e[c], c, l) : (n = e[c], i = !0);
                    }), !i) throw new TypeError(S);
                    return n;
                }, w.find = w.detect = function(e, t, n) {
                    var r;
                    return M(e, function(e, i, o) {
                        return t.call(n, e, i, o) ? (r = e, !0) : void 0;
                    }), r;
                }, w.filter = w.select = function(e, t, n) {
                    var r = [];
                    return null == e ? r : v && e.filter === v ? e.filter(t, n) : (H(e, function(e, i, o) {
                        t.call(n, e, i, o) && r.push(e);
                    }), r);
                }, w.reject = function(e, t, n) {
                    return w.filter(e, function(e, r, i) {
                        return !t.call(n, e, r, i);
                    }, n);
                }, w.every = w.all = function(e, t, n) {
                    t || (t = w.identity);
                    var r = !0;
                    return null == e ? r : g && e.every === g ? e.every(t, n) : (H(e, function(e, o, a) {
                        return (r = r && t.call(n, e, o, a)) ? void 0 : i;
                    }), !!r);
                };
                var M = w.some = w.any = function(e, t, n) {
                    t || (t = w.identity);
                    var r = !1;
                    return null == e ? r : y && e.some === y ? e.some(t, n) : (H(e, function(e, o, a) {
                        return r || (r = t.call(n, e, o, a)) ? i : void 0;
                    }), !!r);
                };
                w.contains = w.include = function(e, t) {
                    return null == e ? !1 : T && e.indexOf === T ? -1 != e.indexOf(t) : M(e, function(e) {
                        return e === t;
                    });
                }, w.invoke = function(e, t) {
                    var n = l.call(arguments, 2), r = w.isFunction(t);
                    return w.map(e, function(e) {
                        return (r ? t : e[t]).apply(e, n);
                    });
                }, w.pluck = function(e, t) {
                    return w.map(e, function(e) {
                        return e[t];
                    });
                }, w.where = function(e, t, n) {
                    return w.isEmpty(t) ? n ? void 0 : [] : w[n ? "find" : "filter"](e, function(e) {
                        for (var n in t) if (t[n] !== e[n]) return !1;
                        return !0;
                    });
                }, w.findWhere = function(e, t) {
                    return w.where(e, t, !0);
                }, w.max = function(e, t, n) {
                    if (!t && w.isArray(e) && e[0] === +e[0] && e.length < 65535) return Math.max.apply(Math, e);
                    if (!t && w.isEmpty(e)) return -1 / 0;
                    var r = {
                        computed: -1 / 0,
                        value: -1 / 0
                    };
                    return H(e, function(e, i, o) {
                        var a = t ? t.call(n, e, i, o) : e;
                        a > r.computed && (r = {
                            value: e,
                            computed: a
                        });
                    }), r.value;
                }, w.min = function(e, t, n) {
                    if (!t && w.isArray(e) && e[0] === +e[0] && e.length < 65535) return Math.min.apply(Math, e);
                    if (!t && w.isEmpty(e)) return 1 / 0;
                    var r = {
                        computed: 1 / 0,
                        value: 1 / 0
                    };
                    return H(e, function(e, i, o) {
                        var a = t ? t.call(n, e, i, o) : e;
                        a < r.computed && (r = {
                            value: e,
                            computed: a
                        });
                    }), r.value;
                }, w.shuffle = function(e) {
                    var t, n = 0, r = [];
                    return H(e, function(e) {
                        t = w.random(n++), r[n - 1] = r[t], r[t] = e;
                    }), r;
                }, w.sample = function(e, t, n) {
                    return arguments.length < 2 || n ? e[w.random(e.length - 1)] : w.shuffle(e).slice(0, Math.max(0, t));
                };
                var C = function(e) {
                    return w.isFunction(e) ? e : function(t) {
                        return t[e];
                    };
                };
                w.sortBy = function(e, t, n) {
                    var r = C(t);
                    return w.pluck(w.map(e, function(e, t, i) {
                        return {
                            value: e,
                            index: t,
                            criteria: r.call(n, e, t, i)
                        };
                    }).sort(function(e, t) {
                        var n = e.criteria, r = t.criteria;
                        if (n !== r) {
                            if (n > r || void 0 === n) return 1;
                            if (r > n || void 0 === r) return -1;
                        }
                        return e.index - t.index;
                    }), "value");
                };
                var A = function(e) {
                    return function(t, n, r) {
                        var i = {}, o = null == n ? w.identity : C(n);
                        return H(t, function(n, a) {
                            var s = o.call(r, n, a, t);
                            e(i, s, n);
                        }), i;
                    };
                };
                w.groupBy = A(function(e, t, n) {
                    (w.has(e, t) ? e[t] : e[t] = []).push(n);
                }), w.indexBy = A(function(e, t, n) {
                    e[t] = n;
                }), w.countBy = A(function(e, t) {
                    w.has(e, t) ? e[t]++ : e[t] = 1;
                }), w.sortedIndex = function(e, t, n, r) {
                    n = null == n ? w.identity : C(n);
                    for (var i = n.call(r, t), o = 0, a = e.length; a > o; ) {
                        var s = o + a >>> 1;
                        n.call(r, e[s]) < i ? o = s + 1 : a = s;
                    }
                    return o;
                }, w.toArray = function(e) {
                    return e ? w.isArray(e) ? l.call(e) : e.length === +e.length ? w.map(e, w.identity) : w.values(e) : [];
                }, w.size = function(e) {
                    return null == e ? 0 : e.length === +e.length ? e.length : w.keys(e).length;
                }, w.first = w.head = w.take = function(e, t, n) {
                    return null == e ? void 0 : null == t || n ? e[0] : l.call(e, 0, t);
                }, w.initial = function(e, t, n) {
                    return l.call(e, 0, e.length - (null == t || n ? 1 : t));
                }, w.last = function(e, t, n) {
                    return null == e ? void 0 : null == t || n ? e[e.length - 1] : l.call(e, Math.max(e.length - t, 0));
                }, w.rest = w.tail = w.drop = function(e, t, n) {
                    return l.call(e, null == t || n ? 1 : t);
                }, w.compact = function(e) {
                    return w.filter(e, w.identity);
                };
                var P = function(e, t, n) {
                    return t && w.every(e, w.isArray) ? u.apply(n, e) : (H(e, function(e) {
                        w.isArray(e) || w.isArguments(e) ? t ? c.apply(n, e) : P(e, t, n) : n.push(e);
                    }), n);
                };
                w.flatten = function(e, t) {
                    return P(e, t, []);
                }, w.without = function(e) {
                    return w.difference(e, l.call(arguments, 1));
                }, w.uniq = w.unique = function(e, t, n, r) {
                    w.isFunction(t) && (r = n, n = t, t = !1);
                    var i = n ? w.map(e, n, r) : e, o = [], a = [];
                    return H(i, function(n, r) {
                        (t ? r && a[a.length - 1] === n : w.contains(a, n)) || (a.push(n), o.push(e[r]));
                    }), o;
                }, w.union = function() {
                    return w.uniq(w.flatten(arguments, !0));
                }, w.intersection = function(e) {
                    var t = l.call(arguments, 1);
                    return w.filter(w.uniq(e), function(e) {
                        return w.every(t, function(t) {
                            return w.indexOf(t, e) >= 0;
                        });
                    });
                }, w.difference = function(e) {
                    var t = u.apply(o, l.call(arguments, 1));
                    return w.filter(e, function(e) {
                        return !w.contains(t, e);
                    });
                }, w.zip = function() {
                    for (var e = w.max(w.pluck(arguments, "length").concat(0)), t = new Array(e), n = 0; e > n; n++) t[n] = w.pluck(arguments, "" + n);
                    return t;
                }, w.object = function(e, t) {
                    if (null == e) return {};
                    for (var n = {}, r = 0, i = e.length; i > r; r++) t ? n[e[r]] = t[r] : n[e[r][0]] = e[r][1];
                    return n;
                }, w.indexOf = function(e, t, n) {
                    if (null == e) return -1;
                    var r = 0, i = e.length;
                    if (n) {
                        if ("number" != typeof n) return r = w.sortedIndex(e, t), e[r] === t ? r : -1;
                        r = 0 > n ? Math.max(0, i + n) : n;
                    }
                    if (T && e.indexOf === T) return e.indexOf(t, n);
                    for (;i > r; r++) if (e[r] === t) return r;
                    return -1;
                }, w.lastIndexOf = function(e, t, n) {
                    if (null == e) return -1;
                    var r = null != n;
                    if (x && e.lastIndexOf === x) return r ? e.lastIndexOf(t, n) : e.lastIndexOf(t);
                    for (var i = r ? n : e.length; i--; ) if (e[i] === t) return i;
                    return -1;
                }, w.range = function(e, t, n) {
                    arguments.length <= 1 && (t = e || 0, e = 0), n = arguments[2] || 1;
                    for (var r = Math.max(Math.ceil((t - e) / n), 0), i = 0, o = new Array(r); r > i; ) o[i++] = e, 
                    e += n;
                    return o;
                };
                var k = function() {};
                w.bind = function(e, t) {
                    var n, r;
                    if (b && e.bind === b) return b.apply(e, l.call(arguments, 1));
                    if (!w.isFunction(e)) throw new TypeError();
                    return n = l.call(arguments, 2), r = function() {
                        if (!(this instanceof r)) return e.apply(t, n.concat(l.call(arguments)));
                        k.prototype = e.prototype;
                        var i = new k();
                        k.prototype = null;
                        var o = e.apply(i, n.concat(l.call(arguments)));
                        return Object(o) === o ? o : i;
                    };
                }, w.partial = function(e) {
                    var t = l.call(arguments, 1);
                    return function() {
                        return e.apply(this, t.concat(l.call(arguments)));
                    };
                }, w.bindAll = function(e) {
                    var t = l.call(arguments, 1);
                    if (0 === t.length) throw new Error("bindAll must be passed function names");
                    return H(t, function(t) {
                        e[t] = w.bind(e[t], e);
                    }), e;
                }, w.memoize = function(e, t) {
                    var n = {};
                    return t || (t = w.identity), function() {
                        var r = t.apply(this, arguments);
                        return w.has(n, r) ? n[r] : n[r] = e.apply(this, arguments);
                    };
                }, w.delay = function(e, t) {
                    var n = l.call(arguments, 2);
                    return setTimeout(function() {
                        return e.apply(null, n);
                    }, t);
                }, w.defer = function(e) {
                    return w.delay.apply(w, [ e, 1 ].concat(l.call(arguments, 1)));
                }, w.throttle = function(e, t, n) {
                    var r, i, o, a = null, s = 0;
                    n || (n = {});
                    var c = function() {
                        s = n.leading === !1 ? 0 : new Date(), a = null, o = e.apply(r, i);
                    };
                    return function() {
                        var l = new Date();
                        s || n.leading !== !1 || (s = l);
                        var u = t - (l - s);
                        return r = this, i = arguments, 0 >= u ? (clearTimeout(a), a = null, s = l, o = e.apply(r, i)) : a || n.trailing === !1 || (a = setTimeout(c, u)), 
                        o;
                    };
                }, w.debounce = function(e, t, n) {
                    var r, i, o, a, s;
                    return function() {
                        o = this, i = arguments, a = new Date();
                        var c = function() {
                            var l = new Date() - a;
                            t > l ? r = setTimeout(c, t - l) : (r = null, n || (s = e.apply(o, i)));
                        }, l = n && !r;
                        return r || (r = setTimeout(c, t)), l && (s = e.apply(o, i)), s;
                    };
                }, w.once = function(e) {
                    var t, n = !1;
                    return function() {
                        return n ? t : (n = !0, t = e.apply(this, arguments), e = null, t);
                    };
                }, w.wrap = function(e, t) {
                    return function() {
                        var n = [ e ];
                        return c.apply(n, arguments), t.apply(this, n);
                    };
                }, w.compose = function() {
                    var e = arguments;
                    return function() {
                        for (var t = arguments, n = e.length - 1; n >= 0; n--) t = [ e[n].apply(this, t) ];
                        return t[0];
                    };
                }, w.after = function(e, t) {
                    return function() {
                        return --e < 1 ? t.apply(this, arguments) : void 0;
                    };
                }, w.keys = _ || function(e) {
                    if (e !== Object(e)) throw new TypeError("Invalid object");
                    var t = [];
                    for (var n in e) w.has(e, n) && t.push(n);
                    return t;
                }, w.values = function(e) {
                    for (var t = w.keys(e), n = t.length, r = new Array(n), i = 0; n > i; i++) r[i] = e[t[i]];
                    return r;
                }, w.pairs = function(e) {
                    for (var t = w.keys(e), n = t.length, r = new Array(n), i = 0; n > i; i++) r[i] = [ t[i], e[t[i]] ];
                    return r;
                }, w.invert = function(e) {
                    for (var t = {}, n = w.keys(e), r = 0, i = n.length; i > r; r++) t[e[n[r]]] = n[r];
                    return t;
                }, w.functions = w.methods = function(e) {
                    var t = [];
                    for (var n in e) w.isFunction(e[n]) && t.push(n);
                    return t.sort();
                }, w.extend = function(e) {
                    return H(l.call(arguments, 1), function(t) {
                        if (t) for (var n in t) e[n] = t[n];
                    }), e;
                }, w.pick = function(e) {
                    var t = {}, n = u.apply(o, l.call(arguments, 1));
                    return H(n, function(n) {
                        n in e && (t[n] = e[n]);
                    }), t;
                }, w.omit = function(e) {
                    var t = {}, n = u.apply(o, l.call(arguments, 1));
                    for (var r in e) w.contains(n, r) || (t[r] = e[r]);
                    return t;
                }, w.defaults = function(e) {
                    return H(l.call(arguments, 1), function(t) {
                        if (t) for (var n in t) void 0 === e[n] && (e[n] = t[n]);
                    }), e;
                }, w.clone = function(e) {
                    return w.isObject(e) ? w.isArray(e) ? e.slice() : w.extend({}, e) : e;
                }, w.tap = function(e, t) {
                    return t(e), e;
                };
                var L = function(e, t, n, r) {
                    if (e === t) return 0 !== e || 1 / e == 1 / t;
                    if (null == e || null == t) return e === t;
                    e instanceof w && (e = e._wrapped), t instanceof w && (t = t._wrapped);
                    var i = h.call(e);
                    if (i != h.call(t)) return !1;
                    switch (i) {
                      case "[object String]":
                        return e == String(t);

                      case "[object Number]":
                        return e != +e ? t != +t : 0 == e ? 1 / e == 1 / t : e == +t;

                      case "[object Date]":
                      case "[object Boolean]":
                        return +e == +t;

                      case "[object RegExp]":
                        return e.source == t.source && e.global == t.global && e.multiline == t.multiline && e.ignoreCase == t.ignoreCase;
                    }
                    if ("object" != typeof e || "object" != typeof t) return !1;
                    for (var o = n.length; o--; ) if (n[o] == e) return r[o] == t;
                    var a = e.constructor, s = t.constructor;
                    if (a !== s && !(w.isFunction(a) && a instanceof a && w.isFunction(s) && s instanceof s)) return !1;
                    n.push(e), r.push(t);
                    var c = 0, l = !0;
                    if ("[object Array]" == i) {
                        if (c = e.length, l = c == t.length) for (;c-- && (l = L(e[c], t[c], n, r)); ) ;
                    } else {
                        for (var u in e) if (w.has(e, u) && (c++, !(l = w.has(t, u) && L(e[u], t[u], n, r)))) break;
                        if (l) {
                            for (u in t) if (w.has(t, u) && !c--) break;
                            l = !c;
                        }
                    }
                    return n.pop(), r.pop(), l;
                };
                w.isEqual = function(e, t) {
                    return L(e, t, [], []);
                }, w.isEmpty = function(e) {
                    if (null == e) return !0;
                    if (w.isArray(e) || w.isString(e)) return 0 === e.length;
                    for (var t in e) if (w.has(e, t)) return !1;
                    return !0;
                }, w.isElement = function(e) {
                    return !(!e || 1 !== e.nodeType);
                }, w.isArray = R || function(e) {
                    return "[object Array]" == h.call(e);
                }, w.isObject = function(e) {
                    return e === Object(e);
                }, H([ "Arguments", "Function", "String", "Number", "Date", "RegExp" ], function(e) {
                    w["is" + e] = function(t) {
                        return h.call(t) == "[object " + e + "]";
                    };
                }), w.isArguments(arguments) || (w.isArguments = function(e) {
                    return !(!e || !w.has(e, "callee"));
                }), "function" != typeof /./ && (w.isFunction = function(e) {
                    return "function" == typeof e;
                }), w.isFinite = function(e) {
                    return isFinite(e) && !isNaN(parseFloat(e));
                }, w.isNaN = function(e) {
                    return w.isNumber(e) && e != +e;
                }, w.isBoolean = function(e) {
                    return e === !0 || e === !1 || "[object Boolean]" == h.call(e);
                }, w.isNull = function(e) {
                    return null === e;
                }, w.isUndefined = function(e) {
                    return void 0 === e;
                }, w.has = function(e, t) {
                    return f.call(e, t);
                }, w.noConflict = function() {
                    return e._ = r, this;
                }, w.identity = function(e) {
                    return e;
                }, w.times = function(e, t, n) {
                    for (var r = Array(Math.max(0, e)), i = 0; e > i; i++) r[i] = t.call(n, i);
                    return r;
                }, w.random = function(e, t) {
                    return null == t && (t = e, e = 0), e + Math.floor(Math.random() * (t - e + 1));
                };
                var F = {
                    escape: {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#x27;"
                    }
                };
                F.unescape = w.invert(F.escape);
                var D = {
                    escape: new RegExp("[" + w.keys(F.escape).join("") + "]", "g"),
                    unescape: new RegExp("(" + w.keys(F.unescape).join("|") + ")", "g")
                };
                w.each([ "escape", "unescape" ], function(e) {
                    w[e] = function(t) {
                        return null == t ? "" : ("" + t).replace(D[e], function(t) {
                            return F[e][t];
                        });
                    };
                }), w.result = function(e, t) {
                    if (null == e) return void 0;
                    var n = e[t];
                    return w.isFunction(n) ? n.call(e) : n;
                }, w.mixin = function(e) {
                    H(w.functions(e), function(t) {
                        var n = w[t] = e[t];
                        w.prototype[t] = function() {
                            var e = [ this._wrapped ];
                            return c.apply(e, arguments), B.call(this, n.apply(w, e));
                        };
                    });
                };
                var U = 0;
                w.uniqueId = function(e) {
                    var t = ++U + "";
                    return e ? e + t : t;
                }, w.templateSettings = {
                    evaluate: /<%([\s\S]+?)%>/g,
                    interpolate: /<%=([\s\S]+?)%>/g,
                    escape: /<%-([\s\S]+?)%>/g
                };
                var V = /(.)^/, O = {
                    "'": "'",
                    "\\": "\\",
                    "\r": "r",
                    "\n": "n",
                    "	": "t",
                    "\u2028": "u2028",
                    "\u2029": "u2029"
                }, z = /\\|'|\r|\n|\t|\u2028|\u2029/g;
                w.template = function(e, t, n) {
                    var r;
                    n = w.defaults({}, n, w.templateSettings);
                    var i = new RegExp([ (n.escape || V).source, (n.interpolate || V).source, (n.evaluate || V).source ].join("|") + "|$", "g"), o = 0, a = "__p+='";
                    e.replace(i, function(t, n, r, i, s) {
                        return a += e.slice(o, s).replace(z, function(e) {
                            return "\\" + O[e];
                        }), n && (a += "'+\n((__t=(" + n + "))==null?'':_.escape(__t))+\n'"), r && (a += "'+\n((__t=(" + r + "))==null?'':__t)+\n'"), 
                        i && (a += "';\n" + i + "\n__p+='"), o = s + t.length, t;
                    }), a += "';\n", n.variable || (a = "with(obj||{}){\n" + a + "}\n"), a = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + a + "return __p;\n";
                    try {
                        r = new Function(n.variable || "obj", "_", a);
                    } catch (s) {
                        throw s.source = a, s;
                    }
                    if (t) return r(t, w);
                    var c = function(e) {
                        return r.call(this, e, w);
                    };
                    return c.source = "function(" + (n.variable || "obj") + "){\n" + a + "}", c;
                }, w.chain = function(e) {
                    return w(e).chain();
                };
                var B = function(e) {
                    return this._chain ? w(e).chain() : e;
                };
                w.mixin(w), H([ "pop", "push", "reverse", "shift", "sort", "splice", "unshift" ], function(e) {
                    var t = o[e];
                    w.prototype[e] = function() {
                        var n = this._wrapped;
                        return t.apply(n, arguments), "shift" != e && "splice" != e || 0 !== n.length || delete n[0], 
                        B.call(this, n);
                    };
                }), H([ "concat", "join", "slice" ], function(e) {
                    var t = o[e];
                    w.prototype[e] = function() {
                        return B.call(this, t.apply(this._wrapped, arguments));
                    };
                }), w.extend(w.prototype, {
                    chain: function() {
                        return this._chain = !0, this;
                    },
                    value: function() {
                        return this._wrapped;
                    }
                });
            }).call(this);
        }, {} ],
        5: [ function(e) {
            !function(t) {
                var n = t._ || e("underscore"), r = Array.prototype.slice, i = Array.prototype.concat, o = function(e) {
                    return null != e;
                };
                n.mixin({
                    cat: function() {
                        return n.reduce(arguments, function(e, t) {
                            return n.isArguments(t) ? i.call(e, r.call(t)) : i.call(e, t);
                        }, []);
                    },
                    cons: function(e, t) {
                        return n.cat([ e ], t);
                    },
                    partition: function(e, t, r) {
                        var i = function(e) {
                            if (null == e) return [];
                            var o = n.take(e, t);
                            return t === n.size(o) ? n.cons(o, i(n.drop(e, t))) : r ? [ n.take(n.cat(o, r), t) ] : [];
                        };
                        return i(e);
                    },
                    partitionAll: function(e, t, r) {
                        r = null != r ? r : t;
                        var i = function(e, t, r) {
                            return n.isEmpty(e) ? [] : n.cons(n.take(e, t), i(n.drop(e, r), t, r));
                        };
                        return i(e, t, r);
                    },
                    mapcat: function(e, t) {
                        return n.cat.apply(null, n.map(e, t));
                    },
                    interpose: function(e, t) {
                        if (!n.isArray(e)) throw new TypeError();
                        var i = n.size(e);
                        return 0 === i ? e : 1 === i ? e : r.call(n.mapcat(e, function(e) {
                            return n.cons(e, [ t ]);
                        }), 0, -1);
                    },
                    weave: function() {
                        return n.some(arguments) ? 1 == arguments.length ? arguments[0] : n.filter(n.flatten(n.zip.apply(null, arguments), !0), function(e) {
                            return null != e;
                        }) : [];
                    },
                    interleave: n.weave,
                    repeat: function(e, t) {
                        return n.times(e, function() {
                            return t;
                        });
                    },
                    cycle: function(e, t) {
                        return n.flatten(n.times(e, function() {
                            return t;
                        }), !0);
                    },
                    splitAt: function(e, t) {
                        return [ n.take(e, t), n.drop(e, t) ];
                    },
                    iterateUntil: function(e, t, n) {
                        for (var r = [], i = e(n); t(i); ) r.push(i), i = e(i);
                        return r;
                    },
                    takeSkipping: function(e, t) {
                        var r = [], i = n.size(e);
                        if (0 >= t) return [];
                        if (1 === t) return e;
                        for (var o = 0; i > o; o += t) r.push(e[o]);
                        return r;
                    },
                    reductions: function(e, t, r) {
                        var i = [], o = r;
                        return n.each(e, function(n, r) {
                            o = t(o, e[r]), i.push(o);
                        }), i;
                    },
                    keepIndexed: function(e, t) {
                        return n.filter(n.map(n.range(n.size(e)), function(n) {
                            return t(n, e[n]);
                        }), o);
                    },
                    reverseOrder: function(e) {
                        if ("string" == typeof e) throw new TypeError("Strings cannot be reversed by _.reverseOrder");
                        return r.call(e).reverse();
                    }
                });
            }(this);
        }, {
            underscore: 4
        } ],
        6: [ function(e) {
            !function(t) {
                var n = t._ || e("underscore"), r = Array.prototype.slice, i = Array.prototype.concat, o = function(e) {
                    return null != e;
                }, a = function(e) {
                    return e !== !1 && o(e);
                }, s = function(e) {
                    return n.isArray(e) || n.isArguments(e);
                };
                n.mixin({
                    second: function(e, t, n) {
                        return null == e ? void 0 : null == t || n ? e[1] : r.call(e, 1, t);
                    },
                    third: function(e, t, n) {
                        return null == e ? void 0 : null == t || n ? e[2] : r.call(e, 2, t);
                    },
                    nth: function(e, t, n) {
                        return null == t || n ? void 0 : e[t];
                    },
                    takeWhile: function(e, t) {
                        if (!s(e)) throw new TypeError();
                        for (var r = n.size(e), i = 0; r > i && a(t(e[i])); i++) ;
                        return n.take(e, i);
                    },
                    dropWhile: function(e, t) {
                        if (!s(e)) throw new TypeError();
                        for (var r = n.size(e), i = 0; r > i && a(t(e[i])); i++) ;
                        return n.drop(e, i);
                    },
                    splitWith: function(e, t) {
                        return [ n.takeWhile(e, t), n.dropWhile(e, t) ];
                    },
                    partitionBy: function(e, t) {
                        if (n.isEmpty(e) || !o(e)) return [];
                        var r = n.first(e), a = t(r), s = i.call([ r ], n.takeWhile(n.rest(e), function(e) {
                            return n.isEqual(a, t(e));
                        }));
                        return i.call([ s ], n.partitionBy(n.drop(e, n.size(s)), t));
                    },
                    best: function(e, t) {
                        return n.reduce(e, function(e, n) {
                            return t(e, n) ? e : n;
                        });
                    },
                    keep: function(e, t) {
                        if (!s(e)) throw new TypeError("expected an array as the first argument");
                        return n.filter(n.map(e, function(e) {
                            return t(e);
                        }), o);
                    }
                });
            }(this);
        }, {
            underscore: 4
        } ],
        7: [ function(e) {
            !function(t) {
                function n(e) {
                    return o.isElement(e) ? e.children : e;
                }
                function r(e, t, n, r, i, l) {
                    var u = [];
                    return function h(e, f, p) {
                        if (o.isObject(e)) {
                            if (u.indexOf(e) >= 0) throw new TypeError(c);
                            u.push(e);
                        }
                        if (n) {
                            var d = n.call(i, e, f, p);
                            if (d === s) return s;
                            if (d === a) return;
                        }
                        var m, E = t(e);
                        if (o.isObject(E) && !o.isEmpty(E)) {
                            l && (m = o.isArray(e) ? [] : {});
                            var v = o.any(E, function(t, n) {
                                var r = h(t, n, e);
                                return r === s ? !0 : void (m && (m[n] = r));
                            });
                            if (v) return s;
                        }
                        return r ? r.call(i, e, f, p, m) : void 0;
                    }(e);
                }
                function i(e, t, n) {
                    var r = [];
                    return this.preorder(e, function(e, i) {
                        return n || i != t ? void (o.has(e, t) && (r[r.length] = e[t])) : a;
                    }), r;
                }
                var o = t._ || e("underscore"), a = {}, s = {}, c = "Not a tree: same object found in two different branches", l = {
                    find: function(e, t, n) {
                        var r;
                        return this.preorder(e, function(e, i, o) {
                            return t.call(n, e, i, o) ? (r = e, s) : void 0;
                        }, n), r;
                    },
                    filter: function(e, t, n, r) {
                        var i = [];
                        return null == e ? i : (t(e, function(e, t, o) {
                            n.call(r, e, t, o) && i.push(e);
                        }, null, this._traversalStrategy), i);
                    },
                    reject: function(e, t, n, r) {
                        return this.filter(e, t, function(e, t, i) {
                            return !n.call(r, e, t, i);
                        });
                    },
                    map: function(e, t, n, r) {
                        var i = [];
                        return t(e, function(e, t, o) {
                            i[i.length] = n.call(r, e, t, o);
                        }, null, this._traversalStrategy), i;
                    },
                    pluck: function(e, t) {
                        return i.call(this, e, t, !1);
                    },
                    pluckRec: function(e, t) {
                        return i.call(this, e, t, !0);
                    },
                    postorder: function(e, t, n, i) {
                        i = i || this._traversalStrategy, r(e, i, null, t, n);
                    },
                    preorder: function(e, t, n, i) {
                        i = i || this._traversalStrategy, r(e, i, t, null, n);
                    },
                    reduce: function(e, t, n, i) {
                        var o = function(e, r, i, o) {
                            return t(o || n, e, r, i);
                        };
                        return r(e, this._traversalStrategy, null, o, i, !0);
                    }
                };
                l.collect = l.map, l.detect = l.find, l.select = l.filter, o.walk = function(e) {
                    var t = o.clone(l);
                    return o.bindAll.apply(null, [ t ].concat(o.keys(t))), t._traversalStrategy = e || n, 
                    t;
                }, o.extend(o.walk, o.walk());
            }(this);
        }, {
            underscore: 4
        } ],
        8: [ function(e) {
            !function(t) {
                function n(e) {
                    return function() {
                        if (1 === arguments.length) return e.apply(this, arguments);
                        throw new RangeError("Only a single argument may be accepted.");
                    };
                }
                var r = t._ || e("underscore"), i = function() {
                    function e(t, r, i, o, a, s) {
                        return s === !0 ? o.unshift(a) : o.push(a), o.length == i ? t.apply(r, o) : n(function() {
                            return e(t, r, i, o.slice(0), arguments[0], s);
                        });
                    }
                    return function(t, r) {
                        var i = this;
                        return n(function() {
                            return e(t, i, t.length, [], arguments[0], r);
                        });
                    };
                }(), o = function() {
                    var e = [];
                    return function(t) {
                        if ("function" != typeof t) throw new Error("Argument 1 must be a function.");
                        var n = t.length;
                        return void 0 === e[n] && (e[n] = function(e) {
                            return function() {
                                if (arguments.length !== n) throw new RangeError(n + " arguments must be applied.");
                                return e.apply(this, arguments);
                            };
                        }), e[n](t);
                    };
                }();
                r.mixin({
                    fix: function(e) {
                        var t = r.rest(arguments), n = function() {
                            for (var n = t.slice(), i = 0, o = 0; o < n.length || i < arguments.length; o++) n[o] === r && (n[o] = arguments[i++]);
                            return e.apply(null, n);
                        };
                        return n._original = e, n;
                    },
                    unary: function(e) {
                        return function(t) {
                            return e.call(this, t);
                        };
                    },
                    binary: function(e) {
                        return function(t, n) {
                            return e.call(this, t, n);
                        };
                    },
                    ternary: function(e) {
                        return function(t, n, r) {
                            return e.call(this, t, n, r);
                        };
                    },
                    quaternary: function(e) {
                        return function(t, n, r, i) {
                            return e.call(this, t, n, r, i);
                        };
                    },
                    curry: i,
                    rCurry: function(e) {
                        return i.call(this, e, !0);
                    },
                    curry2: function(e) {
                        return n(function(t) {
                            return n(function(n) {
                                return e.call(this, t, n);
                            });
                        });
                    },
                    curry3: function(e) {
                        return n(function(t) {
                            return n(function(r) {
                                return n(function(n) {
                                    return e.call(this, t, r, n);
                                });
                            });
                        });
                    },
                    rcurry2: function(e) {
                        return n(function(t) {
                            return n(function(n) {
                                return e.call(this, n, t);
                            });
                        });
                    },
                    rcurry3: function(e) {
                        return n(function(t) {
                            return n(function(r) {
                                return n(function(n) {
                                    return e.call(this, n, r, t);
                                });
                            });
                        });
                    },
                    enforce: o
                }), r.arity = function() {
                    var e = {};
                    return function t(n, r) {
                        if (null == e[n]) {
                            for (var i = new Array(n), o = 0; n > o; ++o) i[o] = "__" + o;
                            var a = i.join(), s = "return function (" + a + ") { return fun.apply(this, arguments); };";
                            e[n] = new Function([ "fun" ], s);
                        }
                        return null == r ? function(e) {
                            return t(n, e);
                        } : e[n](r);
                    };
                }();
            }(this);
        }, {
            underscore: 4
        } ],
        9: [ function(e) {
            !function(t) {
                function n(e, t) {
                    return r.arity(e.length, function() {
                        return e.apply(this, c.call(arguments, t));
                    });
                }
                var r = t._ || e("underscore"), i = function(e) {
                    return null != e;
                }, o = function(e) {
                    return e !== !1 && i(e);
                }, a = [].reverse, s = [].slice, c = [].map, l = function(e) {
                    return function(t, n) {
                        return 1 === arguments.length ? function(n) {
                            return e(t, n);
                        } : e(t, n);
                    };
                };
                r.mixin({
                    always: function(e) {
                        return function() {
                            return e;
                        };
                    },
                    pipeline: function() {
                        var e = r.isArray(arguments[0]) ? arguments[0] : arguments;
                        return function(t) {
                            return r.reduce(e, function(e, t) {
                                return t(e);
                            }, t);
                        };
                    },
                    conjoin: function() {
                        var e = arguments;
                        return function(t) {
                            return r.every(t, function(t) {
                                return r.every(e, function(e) {
                                    return e(t);
                                });
                            });
                        };
                    },
                    disjoin: function() {
                        var e = arguments;
                        return function(t) {
                            return r.some(t, function(t) {
                                return r.some(e, function(e) {
                                    return e(t);
                                });
                            });
                        };
                    },
                    comparator: function(e) {
                        return function(t, n) {
                            return o(e(t, n)) ? -1 : o(e(n, t)) ? 1 : 0;
                        };
                    },
                    complement: function(e) {
                        return function() {
                            return !e.apply(null, arguments);
                        };
                    },
                    splat: function(e) {
                        return function(t) {
                            return e.apply(null, t);
                        };
                    },
                    unsplat: function(e) {
                        var t = e.length;
                        return 1 > t ? e : 1 === t ? function() {
                            return e.call(this, s.call(arguments, 0));
                        } : function() {
                            var n = arguments.length, r = s.call(arguments, 0, t - 1), i = Math.max(t - n - 1, 0), o = new Array(i), a = s.call(arguments, e.length - 1);
                            return e.apply(this, r.concat(o).concat([ a ]));
                        };
                    },
                    unsplatl: function(e) {
                        var t = e.length;
                        return 1 > t ? e : 1 === t ? function() {
                            return e.call(this, s.call(arguments, 0));
                        } : function() {
                            var n = arguments.length, r = s.call(arguments, Math.max(n - t + 1, 0)), i = s.call(arguments, 0, Math.max(n - t + 1, 0));
                            return e.apply(this, [ i ].concat(r));
                        };
                    },
                    mapArgs: l(n),
                    juxt: function() {
                        var e = arguments;
                        return function() {
                            var t = arguments;
                            return r.map(e, function(e) {
                                return e.apply(null, t);
                            });
                        };
                    },
                    fnull: function(e) {
                        var t = r.rest(arguments);
                        return function() {
                            for (var n = r.toArray(arguments), o = r.size(t), a = 0; o > a; a++) i(n[a]) || (n[a] = t[a]);
                            return e.apply(null, n);
                        };
                    },
                    flip2: function(e) {
                        return function() {
                            var t = s.call(arguments);
                            return t[0] = arguments[1], t[1] = arguments[0], e.apply(null, t);
                        };
                    },
                    flip: function(e) {
                        return function() {
                            var t = a.call(arguments);
                            return e.apply(null, t);
                        };
                    },
                    functionalize: function(e) {
                        return function(t) {
                            return e.apply(t, r.rest(arguments));
                        };
                    },
                    methodize: function(e) {
                        return function() {
                            return e.apply(null, r.cons(this, arguments));
                        };
                    },
                    k: r.always,
                    t: r.pipeline
                }), r.unsplatr = r.unsplat, r.mapArgsWith = l(r.flip(n)), r.bound = function(e, t) {
                    var n = e[t];
                    if (!r.isFunction(n)) throw new TypeError("Expected property to be a function");
                    return r.bind(n, e);
                };
            }(this);
        }, {
            underscore: 4
        } ],
        10: [ function(e) {
            !function(t) {
                var n = t._ || e("underscore"), r = Array.prototype.slice;
                n.mixin({
                    attempt: function(e, t) {
                        if (null == e) return void 0;
                        var i = e[t], o = r.call(arguments, 2);
                        return n.isFunction(i) ? i.apply(e, o) : void 0;
                    }
                });
            }(this);
        }, {
            underscore: 4
        } ],
        11: [ function(e) {
            !function(t) {
                function n(e) {
                    return function(t) {
                        return e.call(this, t);
                    };
                }
                function r(e, t, n) {
                    var r, i;
                    for (r = void 0 !== n ? n : e(), i = e(); null != i; ) r = t.call(i, r, i), i = e();
                    return r;
                }
                function i(e, t) {
                    var n = _;
                    return function() {
                        return n === _ ? n = e : null != n && (n = t.call(n, n)), n;
                    };
                }
                function o(e, t) {
                    var n, r, i = e;
                    return function() {
                        return null != i ? (n = t.call(i, i), r = n[1], i = null != r ? n[0] : void 0, r) : void 0;
                    };
                }
                function a(e, t, n) {
                    var r = n;
                    return function() {
                        var n = e();
                        return null == n ? n : r = void 0 === r ? n : t.call(n, r, n);
                    };
                }
                function s(e, t, n) {
                    var r, i, o = n;
                    return function() {
                        return i = e(), null == i ? i : void 0 === o ? o = i : (r = t.call(i, o, i), o = r[0], 
                        r[1]);
                    };
                }
                function c(e, t) {
                    return function() {
                        var n;
                        return n = e(), null != n ? t.call(n, n) : void 0;
                    };
                }
                function l(e, t) {
                    var n = null;
                    return function() {
                        var r, i;
                        if (null == n) {
                            if (i = e(), null == i) return void (n = null);
                            n = t.call(i, i);
                        }
                        for (;null == r; ) if (r = n(), null == r) {
                            if (i = e(), null == i) return void (n = null);
                            n = t.call(i, i);
                        }
                        return r;
                    };
                }
                function u(e, t) {
                    return function() {
                        var n;
                        for (n = e(); null != n; ) {
                            if (t.call(n, n)) return n;
                            n = e();
                        }
                        return void 0;
                    };
                }
                function h(e, t) {
                    return u(e, function(e) {
                        return !t(e);
                    });
                }
                function f(e, t) {
                    return u(e, t)();
                }
                function p(e, t, n) {
                    for (var r = 0; t-- > 0; ) e();
                    return null != n ? function() {
                        return ++r <= n ? e() : void 0;
                    } : e;
                }
                function d(e, t) {
                    return p(e, null == t ? 1 : t);
                }
                function m(e, t) {
                    return p(e, 0, null == t ? 1 : t);
                }
                function E(e) {
                    var t = 0;
                    return function() {
                        return e[t++];
                    };
                }
                function v(e) {
                    var t, n, r;
                    return t = 0, r = [], n = function() {
                        var i, o;
                        return i = e[t++], i instanceof Array ? (r.push({
                            array: e,
                            index: t
                        }), e = i, t = 0, n()) : void 0 === i ? r.length > 0 ? (o = r.pop(), e = o.array, 
                        t = o.index, n()) : void 0 : i;
                    };
                }
                function g(e) {
                    return function() {
                        return e;
                    };
                }
                function y(e, t, n) {
                    return function() {
                        var r;
                        return e > t ? void 0 : (r = e, e += n, r);
                    };
                }
                function T(e, t, n) {
                    return function() {
                        var r;
                        return t > e ? void 0 : (r = e, e -= n, r);
                    };
                }
                function x(e, t, n) {
                    return null == e ? y(1, 1 / 0, 1) : null == t ? y(e, 1 / 0, 1) : null == n ? t >= e ? y(e, t, 1) : T(e, t, 1) : n > 0 ? y(e, t, n) : 0 > n ? T(e, t, Math.abs(n)) : k(e);
                }
                var R = t._ || e("underscore"), _ = {}, b = n(x);
                R.iterators = {
                    accumulate: a,
                    accumulateWithReturn: s,
                    foldl: r,
                    reduce: r,
                    unfold: i,
                    unfoldWithReturn: o,
                    map: c,
                    mapcat: l,
                    select: u,
                    reject: h,
                    filter: u,
                    find: f,
                    slice: p,
                    drop: d,
                    take: m,
                    List: E,
                    Tree: v,
                    constant: g,
                    K: g,
                    numbers: b,
                    range: x
                };
            }(this, void 0);
        }, {
            underscore: 4
        } ],
        12: [ function(e) {
            !function(t) {
                var n = t._ || e("underscore");
                n.mixin({
                    isInstanceOf: function(e, t) {
                        return e instanceof t;
                    },
                    isAssociative: function(e) {
                        return n.isArray(e) || n.isObject(e) || n.isArguments(e);
                    },
                    isIndexed: function(e) {
                        return n.isArray(e) || n.isString(e) || n.isArguments(e);
                    },
                    isSequential: function(e) {
                        return n.isArray(e) || n.isArguments(e);
                    },
                    isPlainObject: function(e) {
                        return n.isObject(e) && e.constructor === t.Object;
                    },
                    isZero: function(e) {
                        return 0 === e;
                    },
                    isEven: function(e) {
                        return n.isFinite(e) && 0 === (1 & e);
                    },
                    isOdd: function(e) {
                        return n.isFinite(e) && !n.isEven(e);
                    },
                    isPositive: function(e) {
                        return e > 0;
                    },
                    isNegative: function(e) {
                        return 0 > e;
                    },
                    isValidDate: function(e) {
                        return n.isDate(e) && !n.isNaN(e.getTime());
                    },
                    isNumeric: function(e) {
                        return !isNaN(parseFloat(e)) && isFinite(e);
                    },
                    isInteger: function(e) {
                        return n.isNumeric(e) && e % 1 === 0;
                    },
                    isFloat: function(e) {
                        return n.isNumeric(e) && !n.isInteger(e);
                    },
                    isJSON: function(e) {
                        try {
                            JSON.parse(e);
                        } catch (t) {
                            return !1;
                        }
                        return !0;
                    },
                    isIncreasing: function() {
                        var e = n.size(arguments);
                        if (1 === e) return !0;
                        if (2 === e) return arguments[0] < arguments[1];
                        for (var t = 1; e > t; t++) if (arguments[t - 1] >= arguments[t]) return !1;
                        return !0;
                    },
                    isDecreasing: function() {
                        var e = n.size(arguments);
                        if (1 === e) return !0;
                        if (2 === e) return arguments[0] > arguments[1];
                        for (var t = 1; e > t; t++) if (arguments[t - 1] <= arguments[t]) return !1;
                        return !0;
                    }
                });
            }(this);
        }, {
            underscore: 4
        } ],
        13: [ function(e) {
            !function(t) {
                var n = t._ || e("underscore"), r = (Array.prototype.slice, Array.prototype.concat), i = function(e) {
                    return null != e;
                }, o = function(e) {
                    return e !== !1 && i(e);
                }, a = function(e) {
                    return n.isArray(e) || n.isObject(e);
                }, s = function(e) {
                    return function(t) {
                        return function(n) {
                            return e(n, t);
                        };
                    };
                };
                n.mixin({
                    merge: function() {
                        var e = n.some(arguments) ? {} : null;
                        return o(e) && n.extend.apply(null, r.call([ e ], n.toArray(arguments))), e;
                    },
                    renameKeys: function(e, t) {
                        return n.reduce(t, function(t, n, r) {
                            return i(e[r]) ? (t[n] = e[r], t) : t;
                        }, n.omit.apply(null, r.call([ e ], n.keys(t))));
                    },
                    snapshot: function(e) {
                        if (null == e || "object" != typeof e) return e;
                        var t = new e.constructor();
                        for (var r in e) e.hasOwnProperty(r) && (t[r] = n.snapshot(e[r]));
                        return t;
                    },
                    updatePath: function(e, t, r, o) {
                        if (!a(e)) throw new TypeError("Attempted to update a non-associative object.");
                        if (!i(r)) return t(e);
                        var s = n.isArray(r), c = s ? r : [ r ], l = s ? n.snapshot(e) : n.clone(e), u = n.last(c), h = l;
                        return n.each(n.initial(c), function(e) {
                            o && !n.has(h, e) && (h[e] = n.clone(o)), h = h[e];
                        }), h[u] = t(h[u]), l;
                    },
                    setPath: function(e, t, r, o) {
                        if (!i(r)) throw new TypeError("Attempted to set a property at a null path.");
                        return n.updatePath(e, function() {
                            return t;
                        }, r, o);
                    },
                    frequencies: s(n.countBy)(n.identity)
                });
            }(this);
        }, {
            underscore: 4
        } ],
        14: [ function(e) {
            !function(t) {
                {
                    var n = t._ || e("underscore"), r = Array.prototype.concat, i = Array.prototype;
                    i.slice;
                }
                n.mixin({
                    accessor: function(e) {
                        return function(t) {
                            return t && t[e];
                        };
                    },
                    dictionary: function(e) {
                        return function(t) {
                            return e && t && e[t];
                        };
                    },
                    selectKeys: function(e, t) {
                        return n.pick.apply(null, r.call([ e ], t));
                    },
                    kv: function(e, t) {
                        return n.has(e, t) ? [ t, e[t] ] : void 0;
                    },
                    getPath: function o(e, t) {
                        return "string" == typeof t && (t = t.split(".")), void 0 === e ? void 0 : 0 === t.length ? e : null === e ? void 0 : o(e[n.first(t)], n.rest(t));
                    },
                    hasPath: function a(e, t) {
                        "string" == typeof t && (t = t.split("."));
                        var r = t.length;
                        return null == e && r > 0 ? !1 : t[0] in e ? 1 === r ? !0 : a(e[n.first(t)], n.rest(t)) : !1;
                    },
                    pickWhen: function(e, t) {
                        var r = {};
                        return n.each(e, function(n, i) {
                            t(e[i]) && (r[i] = e[i]);
                        }), r;
                    },
                    omitWhen: function(e, t) {
                        return n.pickWhen(e, function(e) {
                            return !t(e);
                        });
                    }
                });
            }(this);
        }, {
            underscore: 4
        } ],
        15: [ function(e) {
            !function(t) {
                var n = t._ || e("underscore");
                n.mixin({
                    exists: function(e) {
                        return null != e;
                    },
                    truthy: function(e) {
                        return e !== !1 && n.exists(e);
                    },
                    falsey: function(e) {
                        return !n.truthy(e);
                    },
                    not: function(e) {
                        return !e;
                    },
                    firstExisting: function() {
                        for (var e = 0; e < arguments.length; e++) if (null != arguments[e]) return arguments[e];
                    }
                });
            }(this);
        }, {
            underscore: 4
        } ],
        16: [ function(e) {
            !function(t) {
                function n(e) {
                    return function() {
                        return S.reduce(arguments, e);
                    };
                }
                function r(e) {
                    return function() {
                        for (var t, n = 0; n < arguments.length - 1; n++) if (t = e(arguments[n], arguments[n + 1]), 
                        t === !1) return t;
                        return t;
                    };
                }
                function i(e) {
                    return function() {
                        return !e.apply(this, arguments);
                    };
                }
                function o(e, t) {
                    return e + t;
                }
                function a(e, t) {
                    return e - t;
                }
                function s(e, t) {
                    return e * t;
                }
                function c(e, t) {
                    return e / t;
                }
                function l(e, t) {
                    return e % t;
                }
                function u(e) {
                    return ++e;
                }
                function h(e) {
                    return --e;
                }
                function f(e) {
                    return -e;
                }
                function p(e, t) {
                    return e & t;
                }
                function d(e, t) {
                    return e | t;
                }
                function m(e, t) {
                    return e ^ t;
                }
                function E(e, t) {
                    return e << t;
                }
                function v(e, t) {
                    return e >> t;
                }
                function g(e, t) {
                    return e >>> t;
                }
                function y(e) {
                    return ~e;
                }
                function T(e, t) {
                    return e == t;
                }
                function x(e, t) {
                    return e === t;
                }
                function R(e) {
                    return !e;
                }
                function _(e, t) {
                    return e > t;
                }
                function b(e, t) {
                    return t > e;
                }
                function w(e, t) {
                    return e >= t;
                }
                function H(e, t) {
                    return t >= e;
                }
                var S = t._ || e("underscore");
                S.mixin({
                    add: n(o),
                    sub: n(a),
                    mul: n(s),
                    div: n(c),
                    mod: l,
                    inc: u,
                    dec: h,
                    neg: f,
                    eq: r(T),
                    seq: r(x),
                    neq: i(r(T)),
                    sneq: i(r(x)),
                    not: R,
                    gt: r(_),
                    lt: r(b),
                    gte: r(w),
                    lte: r(H),
                    bitwiseAnd: n(p),
                    bitwiseOr: n(d),
                    bitwiseXor: n(m),
                    bitwiseNot: y,
                    bitwiseLeft: n(E),
                    bitwiseRight: n(v),
                    bitwiseZ: n(g)
                });
            }(this);
        }, {
            underscore: 4
        } ],
        17: [ function(e) {
            !function(t) {
                var n = t._ || e("underscore");
                n.mixin({
                    explode: function(e) {
                        return e.split("");
                    },
                    implode: function(e) {
                        return e.join("");
                    },
                    camelCase: function(e) {
                        return e.replace(/-([a-z])/g, function(e) {
                            return e[1].toUpperCase();
                        });
                    },
                    toDash: function(e) {
                        return e = e.replace(/([A-Z])/g, function(e) {
                            return "-" + e.toLowerCase();
                        }), "-" == e.charAt(0) ? e.substr(1) : e;
                    },
                    strContains: function(e, t) {
                        if ("string" != typeof e) throw new TypeError();
                        return -1 != e.indexOf(t);
                    }
                });
            }(this);
        }, {
            underscore: 4
        } ],
        18: [ function(e) {
            !function(t) {
                var n = t._ || e("underscore");
                n.mixin({
                    done: function(e) {
                        var t = n(e);
                        return t.stopTrampoline = !0, t;
                    },
                    trampoline: function(e) {
                        for (var t = e.apply(e, n.rest(arguments)); n.isFunction(t) && (t = t(), !(t instanceof n && t.stopTrampoline)); ) ;
                        return t.value();
                    }
                });
            }(this);
        }, {
            underscore: 4
        } ],
        19: [ function(t, n, r) {
            var i = "undefined" != typeof self ? self : "undefined" != typeof window ? window : {};
            !function(t) {
                if ("object" == typeof r) n.exports = t(); else if ("function" == typeof e && e.amd) e(t); else {
                    var o;
                    "undefined" != typeof window ? o = window : "undefined" != typeof i ? o = i : "undefined" != typeof self && (o = self), 
                    o.questor = t();
                }
            }(function() {
                return function e(n, r, i) {
                    function o(s, c) {
                        if (!r[s]) {
                            if (!n[s]) {
                                var l = "function" == typeof t && t;
                                if (!c && l) return l(s, !0);
                                if (a) return a(s, !0);
                                throw new Error("Cannot find module '" + s + "'");
                            }
                            var u = r[s] = {
                                exports: {}
                            };
                            n[s][0].call(u.exports, function(e) {
                                var t = n[s][1][e];
                                return o(t ? t : e);
                            }, u, u.exports, e, n, r, i);
                        }
                        return r[s].exports;
                    }
                    for (var a = "function" == typeof t && t, s = 0; s < i.length; s++) o(i[s]);
                    return o;
                }({
                    1: [ function(e, t) {
                        "use strict";
                        function n(e, t) {
                            return t || (t = {}), o({
                                headers: t.headers,
                                method: t.method,
                                uri: e
                            }).spread(function(e) {
                                var t = {
                                    body: e.body,
                                    headers: r(e.getAllResponseHeaders()),
                                    status: e.statusCode
                                };
                                if (t.status >= 300) {
                                    var n = new Error(t.body);
                                    throw n.body = t.body, n.headers = t.headers, n.status = t.status, n;
                                }
                                return t;
                            });
                        }
                        function r(e) {
                            var t = {};
                            if (!e) return t;
                            for (var n = e.split("\r\n"), r = 0; r < n.length; r++) {
                                var i = n[r], o = i.indexOf(": ") || i.indexOf(":");
                                if (o > 0) {
                                    var a = i.substring(0, o), s = i.substring(o + 2);
                                    t[a] = s;
                                }
                            }
                            return t;
                        }
                        var i = e("bluebird"), o = i.promisify(e("xhr"));
                        t.exports = n;
                    }, {
                        bluebird: 5,
                        xhr: 41
                    } ],
                    2: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n, r) {
                            function i(e, t, r) {
                                var i = n(e, o, r, t === !0 && e._isBound() ? e._boundTo : void 0), a = i.promise();
                                return a.isRejected() ? a : (i.setHowMany(1), i.setUnwrap(), i.init(), a);
                            }
                            var o = e("./some_promise_array.js")(r);
                            e("./assert.js"), t.any = function(e) {
                                return i(e, !1, t.any);
                            }, t.prototype.any = function() {
                                return i(this, !0, this.any);
                            };
                        };
                    }, {
                        "./assert.js": 3,
                        "./some_promise_array.js": 36
                    } ],
                    3: [ function(e, t) {
                        "use strict";
                        t.exports = function() {
                            var e = function() {
                                function e(e) {
                                    this.constructor$(e), this.message = e, this.name = "AssertionError";
                                }
                                return e.prototype = new Error(), e.prototype.constructor = e, e.prototype.constructor$ = Error, 
                                e;
                            }();
                            return function t(n, r) {
                                if (n !== !0) {
                                    var i = new e(r);
                                    throw Error.captureStackTrace && Error.captureStackTrace(i, t), console && console.error && console.error(i.stack + ""), 
                                    i;
                                }
                            };
                        }();
                    }, {} ],
                    4: [ function(e, t) {
                        "use strict";
                        function n() {
                            this._isTickUsed = !1, this._length = 0, this._lateBuffer = new i(), this._functionBuffer = new i(75e3);
                            var e = this;
                            this.consumeFunctionBuffer = function() {
                                e._consumeFunctionBuffer();
                            };
                        }
                        var r = (e("./assert.js"), e("./schedule.js")), i = e("./queue.js"), o = e("./util.js").errorObj, a = e("./util.js").tryCatch1;
                        n.prototype.haveItemsQueued = function() {
                            return this._length > 0;
                        }, n.prototype.invokeLater = function(e, t, n) {
                            this._lateBuffer.push(e, t, n), this._queueTick();
                        }, n.prototype.invoke = function(e, t, n) {
                            var r = this._functionBuffer;
                            r.push(e, t, n), this._length = r.length(), this._queueTick();
                        }, n.prototype._consumeFunctionBuffer = function() {
                            for (var e = this._functionBuffer; e.length() > 0; ) {
                                var t = e.shift(), n = e.shift(), r = e.shift();
                                t.call(n, r);
                            }
                            this._reset(), this._consumeLateBuffer();
                        }, n.prototype._consumeLateBuffer = function() {
                            for (var e = this._lateBuffer; e.length() > 0; ) {
                                var t = e.shift(), n = e.shift(), r = e.shift(), i = a(t, n, r);
                                if (i === o) throw this._queueTick(), i.e;
                            }
                        }, n.prototype._queueTick = function() {
                            this._isTickUsed || (r(this.consumeFunctionBuffer), this._isTickUsed = !0);
                        }, n.prototype._reset = function() {
                            this._isTickUsed = !1, this._length = 0;
                        }, t.exports = new n();
                    }, {
                        "./assert.js": 3,
                        "./queue.js": 29,
                        "./schedule.js": 32,
                        "./util.js": 40
                    } ],
                    5: [ function(e, t) {
                        "use strict";
                        var n = e("./promise.js")();
                        t.exports = n;
                    }, {
                        "./promise.js": 21
                    } ],
                    6: [ function(e, t) {
                        "use strict";
                        t.exports = function(e) {
                            function t(e) {
                                var t = "string" == typeof this ? this : "" + this;
                                return e[t];
                            }
                            e.prototype.call = function(e) {
                                for (var t = arguments.length, n = new Array(t - 1), r = 1; t > r; ++r) n[r - 1] = arguments[r];
                                return this._then(function(t) {
                                    return t[e].apply(t, n);
                                }, void 0, void 0, void 0, void 0, this.call);
                            }, e.prototype.get = function(e) {
                                return this._then(t, void 0, void 0, e, void 0, this.get);
                            };
                        };
                    }, {} ],
                    7: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n) {
                            var r = e("./errors.js"), i = e("./async.js"), o = (e("./assert.js"), r.CancellationError), a = {};
                            t.prototype._cancel = function() {
                                if (!this.isCancellable()) return this;
                                var e;
                                if (void 0 !== (e = this._cancellationParent)) return void e.cancel(a);
                                var t = new o();
                                this._attachExtraTrace(t), this._rejectUnchecked(t);
                            }, t.prototype.cancel = function(e) {
                                return this.isCancellable() ? e === a ? (this._cancel(), this) : (i.invokeLater(this._cancel, this, void 0), 
                                this) : this;
                            }, t.prototype.cancellable = function() {
                                return this._cancellable() ? this : (this._setCancellable(), this._cancellationParent = void 0, 
                                this);
                            }, t.prototype.uncancellable = function() {
                                var e = new t(n);
                                return e._setTrace(this.uncancellable, this), e._follow(this), e._unsetCancellable(), 
                                this._isBound() && e._setBoundTo(this._boundTo), e;
                            }, t.prototype.fork = function(e, t, n) {
                                var r = this._then(e, t, n, void 0, void 0, this.fork);
                                return r._setCancellable(), r._cancellationParent = void 0, r;
                            };
                        };
                    }, {
                        "./assert.js": 3,
                        "./async.js": 4,
                        "./errors.js": 11
                    } ],
                    8: [ function(e, t) {
                        "use strict";
                        t.exports = function() {
                            function t(e) {
                                var t;
                                if ("function" == typeof e) t = "[function " + (e.name || "anonymous") + "]"; else {
                                    t = e.toString();
                                    var r = /\[object [a-zA-Z0-9$_]+\]/;
                                    if (r.test(t)) try {
                                        var i = JSON.stringify(e);
                                        t = i;
                                    } catch (o) {}
                                    0 === t.length && (t = "(empty array)");
                                }
                                return "(<" + n(t) + ">, no stack trace)";
                            }
                            function n(e) {
                                var t = 41;
                                return e.length < t ? e : e.substr(0, t - 3) + "...";
                            }
                            function r(e, t) {
                                this.captureStackTrace(e, t);
                            }
                            var i = (e("./assert.js"), e("./util.js").inherits), o = e("./es5.js").defineProperty, a = new RegExp("\\b(?:[\\w.]*Promise(?:Array|Spawn)?\\$_\\w+|tryCatch(?:1|2|Apply)|new \\w*PromiseArray|\\w*PromiseArray\\.\\w*PromiseArray|setTimeout|CatchFilter\\$_\\w+|makeNodePromisified|processImmediate|process._tickCallback|nextTick|Async\\$\\w+)\\b"), s = null, c = null, l = !1;
                            i(r, Error), r.prototype.captureStackTrace = function(e, t) {
                                u(this, e, t);
                            }, r.possiblyUnhandledRejection = function(e) {
                                if ("object" == typeof console) {
                                    var t;
                                    if ("object" == typeof e || "function" == typeof e) {
                                        var n = e.stack;
                                        t = "Possibly unhandled " + c(n, e);
                                    } else t = "Possibly unhandled " + String(e);
                                    "function" == typeof console.error || "object" == typeof console.error ? console.error(t) : ("function" == typeof console.log || "object" == typeof console.error) && console.log(t);
                                }
                            }, l = "CapturedTrace$captureStackTrace" !== r.prototype.captureStackTrace.name, 
                            r.combine = function(e, t) {
                                for (var n = e.length - 1, r = t.length - 1; r >= 0; --r) {
                                    var i = t[r];
                                    if (e[n] !== i) break;
                                    e.pop(), n--;
                                }
                                e.push("From previous event:");
                                for (var o = e.concat(t), c = [], r = 0, l = o.length; l > r; ++r) a.test(o[r]) || r > 0 && !s.test(o[r]) && "From previous event:" !== o[r] || c.push(o[r]);
                                return c;
                            }, r.isSupported = function() {
                                return "function" == typeof u;
                            };
                            var u = function h() {
                                if ("number" == typeof Error.stackTraceLimit && "function" == typeof Error.captureStackTrace) {
                                    s = /^\s*at\s*/, c = function(e, n) {
                                        return "string" == typeof e ? e : void 0 !== n.name && void 0 !== n.message ? n.name + ". " + n.message : t(n);
                                    };
                                    var e = Error.captureStackTrace;
                                    return function(t, n) {
                                        e(t, n);
                                    };
                                }
                                var n = new Error();
                                if (!l && "string" == typeof n.stack && "function" == typeof "".startsWith && n.stack.startsWith("stackDetection@") && "stackDetection" === h.name) {
                                    o(Error, "stackTraceLimit", {
                                        writable: !0,
                                        enumerable: !1,
                                        configurable: !1,
                                        value: 25
                                    }), s = /@/;
                                    var r = /[@\n]/;
                                    return c = function(e, n) {
                                        return "string" == typeof e ? n.name + ". " + n.message + "\n" + e : void 0 !== n.name && void 0 !== n.message ? n.name + ". " + n.message : t(n);
                                    }, function(e, t) {
                                        var n, i = t.name, o = new Error().stack, a = o.split(r), s = a.length;
                                        for (n = 0; s > n && a[n] !== i; n += 2) ;
                                        a = a.slice(n + 2), s = a.length - 2;
                                        var c = "";
                                        for (n = 0; s > n; n += 2) c += a[n], c += "@", c += a[n + 1], c += "\n";
                                        e.stack = c;
                                    };
                                }
                                return c = function(e, n) {
                                    return "string" == typeof e ? e : "object" != typeof n && "function" != typeof n || void 0 === n.name || void 0 === n.message ? t(n) : n.name + ". " + n.message;
                                }, null;
                            }();
                            return r;
                        };
                    }, {
                        "./assert.js": 3,
                        "./es5.js": 13,
                        "./util.js": 40
                    } ],
                    9: [ function(e, t) {
                        "use strict";
                        t.exports = function(t) {
                            function n(e, t, n) {
                                this._instances = e, this._callback = t, this._promise = n;
                            }
                            function r(e, t) {
                                var n = {}, r = o(e, n, t);
                                if (r === a) return r;
                                var i = s(n);
                                return i.length ? (a.e = new TypeError("Catch filter must inherit from Error or be a simple predicate function"), 
                                a) : r;
                            }
                            var i = e("./util.js"), o = i.tryCatch1, a = i.errorObj, s = e("./es5.js").keys;
                            return n.prototype.doFilter = function(e) {
                                for (var n = this._callback, i = this._promise, s = i._isBound() ? i._boundTo : void 0, c = 0, l = this._instances.length; l > c; ++c) {
                                    var u = this._instances[c], h = u === Error || null != u && u.prototype instanceof Error;
                                    if (h && e instanceof u) {
                                        var f = o(n, s, e);
                                        return f === a ? (t.e = f.e, t) : f;
                                    }
                                    if ("function" == typeof u && !h) {
                                        var p = r(u, e);
                                        if (p === a) {
                                            this._promise._attachExtraTrace(a.e), e = a.e;
                                            break;
                                        }
                                        if (p) {
                                            var f = o(n, s, e);
                                            return f === a ? (t.e = f.e, t) : f;
                                        }
                                    }
                                }
                                return t.e = e, t;
                            }, n;
                        };
                    }, {
                        "./es5.js": 13,
                        "./util.js": 40
                    } ],
                    10: [ function(e, t) {
                        "use strict";
                        var n = e("./util.js"), r = (e("./assert.js"), n.isPrimitive), i = n.wrapsPrimitiveReceiver;
                        t.exports = function(e) {
                            var t = function() {
                                return this;
                            }, n = function() {
                                throw this;
                            }, o = function(e, t) {
                                return 1 === t ? function() {
                                    throw e;
                                } : 2 === t ? function() {
                                    return e;
                                } : void 0;
                            };
                            e.prototype["return"] = e.prototype.thenReturn = function(e) {
                                return i && r(e) ? this._then(o(e, 2), void 0, void 0, void 0, void 0, this.thenReturn) : this._then(t, void 0, void 0, e, void 0, this.thenReturn);
                            }, e.prototype["throw"] = e.prototype.thenThrow = function(e) {
                                return i && r(e) ? this._then(o(e, 1), void 0, void 0, void 0, void 0, this.thenThrow) : this._then(n, void 0, void 0, e, void 0, this.thenThrow);
                            };
                        };
                    }, {
                        "./assert.js": 3,
                        "./util.js": 40
                    } ],
                    11: [ function(e, t) {
                        "use strict";
                        function n(e) {
                            return (1 & e) > 0;
                        }
                        function r(e) {
                            return (2 & e) > 0;
                        }
                        function i(e) {
                            return 1 | e;
                        }
                        function o(e) {
                            return 2 | e;
                        }
                        function a(e) {
                            return -3 & e;
                        }
                        function s(e) {
                            var t;
                            return y(e) && void 0 !== (t = e.__promiseHandled__) && (e.__promiseHandled__ = a(t)), 
                            e;
                        }
                        function c(e) {
                            try {
                                T(e, "__rejectionError__", d);
                            } catch (t) {}
                        }
                        function l(e) {
                            return null == e ? !1 : e instanceof d || e.__rejectionError__ === d;
                        }
                        function u(e) {
                            try {
                                return T(e, "__promiseHandled__", 0), !0;
                            } catch (t) {
                                return !1;
                            }
                        }
                        function h(e) {
                            return e instanceof x;
                        }
                        function f(e) {
                            if (h(e)) {
                                var t = e.__promiseHandled__;
                                return void 0 === t ? u(e) : !n(t);
                            }
                            return !1;
                        }
                        function p(e, t) {
                            function n(n) {
                                this.message = "string" == typeof n ? n : t, this.name = e, x.captureStackTrace && x.captureStackTrace(this, this.constructor);
                            }
                            return g(n, x), n;
                        }
                        function d(e) {
                            this.name = "RejectionError", this.message = e, this.cause = e, e instanceof x ? (this.message = e.message, 
                            this.stack = e.stack) : x.captureStackTrace && x.captureStackTrace(this, this.constructor);
                        }
                        var m = e("./global.js"), E = e("./es5.js").freeze, v = e("./util.js"), g = v.inherits, y = v.isObject, T = v.notEnumerableProp, x = m.Error, R = m.TypeError;
                        "function" != typeof R && (R = p("TypeError", "type error"));
                        var _ = m.RangeError;
                        "function" != typeof _ && (_ = p("RangeError", "range error"));
                        var b = p("CancellationError", "cancellation error"), w = p("TimeoutError", "timeout error");
                        g(d, x);
                        var H = "__BluebirdErrorTypes__", S = m[H];
                        S || (S = E({
                            CancellationError: b,
                            TimeoutError: w,
                            RejectionError: d
                        }), T(m, H, S)), t.exports = {
                            Error: x,
                            TypeError: R,
                            RangeError: _,
                            CancellationError: S.CancellationError,
                            RejectionError: S.RejectionError,
                            TimeoutError: S.TimeoutError,
                            originatesFromRejection: l,
                            markAsOriginatingFromRejection: c,
                            attachDefaultState: u,
                            ensureNotHandled: s,
                            withHandledUnmarked: a,
                            withHandledMarked: o,
                            withStackAttached: i,
                            isStackAttached: n,
                            isHandled: r,
                            canAttach: f
                        };
                    }, {
                        "./es5.js": 13,
                        "./global.js": 17,
                        "./util.js": 40
                    } ],
                    12: [ function(e, t) {
                        "use strict";
                        t.exports = function(t) {
                            function n(e) {
                                var n = new r(e), i = t.rejected(n), o = i._peekContext();
                                return null != o && o._attachExtraTrace(n), i;
                            }
                            var r = e("./errors.js").TypeError;
                            return n;
                        };
                    }, {
                        "./errors.js": 11
                    } ],
                    13: [ function(e, t) {
                        function n(e) {
                            var t = [];
                            for (var n in e) c.call(e, n) && t.push(n);
                            return t;
                        }
                        function r(e, t, n) {
                            return e[t] = n.value, e;
                        }
                        function i(e) {
                            return e;
                        }
                        function o(e) {
                            try {
                                return Object(e).constructor.prototype;
                            } catch (t) {
                                return u;
                            }
                        }
                        function a(e) {
                            try {
                                return "[object Array]" === l.call(e);
                            } catch (t) {
                                return !1;
                            }
                        }
                        var s = function() {
                            "use strict";
                            return void 0 === this;
                        }();
                        if (s) t.exports = {
                            freeze: Object.freeze,
                            defineProperty: Object.defineProperty,
                            keys: Object.keys,
                            getPrototypeOf: Object.getPrototypeOf,
                            isArray: Array.isArray,
                            isES5: s
                        }; else {
                            var c = {}.hasOwnProperty, l = {}.toString, u = {}.constructor.prototype;
                            t.exports = {
                                isArray: a,
                                keys: n,
                                defineProperty: r,
                                freeze: i,
                                getPrototypeOf: o,
                                isES5: s
                            };
                        }
                    }, {} ],
                    14: [ function(e, t) {
                        "use strict";
                        t.exports = function(t) {
                            function n(e) {
                                for (var t = this._settledValue, n = t.length, r = new Array(n), i = 0, o = 0; n > o; ++o) {
                                    var a = e[o];
                                    (void 0 !== a || o in e) && a && (r[i++] = t[o]);
                                }
                                return r.length = i, r;
                            }
                            var r = (e("./assert.js"), e("./util.js").isArray, {
                                ref: null
                            });
                            t.filter = function(e, i) {
                                return t.map(e, i, r)._then(n, void 0, void 0, r.ref, void 0, t.filter);
                            }, t.prototype.filter = function(e) {
                                return this.map(e, r)._then(n, void 0, void 0, r.ref, void 0, this.filter);
                            };
                        };
                    }, {
                        "./assert.js": 3,
                        "./util.js": 40
                    } ],
                    15: [ function(e, t) {
                        t.exports = function(t, n) {
                            function r() {
                                return this;
                            }
                            function i() {
                                throw u(this), this;
                            }
                            function o(e) {
                                return function() {
                                    return e;
                                };
                            }
                            function a(e) {
                                return function() {
                                    throw u(e), e;
                                };
                            }
                            function s(e, t, n) {
                                var c = h && f(t);
                                return n ? e._then(c ? r : o(t), p, void 0, t, void 0, s) : e._then(c ? i : a(t), p, void 0, t, void 0, s);
                            }
                            function c(e) {
                                var r = this.promise, i = this.handler, o = r._isBound() ? i.call(r._boundTo) : i();
                                if (void 0 !== o) {
                                    var a = t._cast(o, c, void 0);
                                    if (t.is(a)) return s(a, e, r.isFulfilled());
                                }
                                return r.isRejected() ? (u(e), n.e = e, n) : e;
                            }
                            var l = e("./util.js"), u = e("./errors.js").ensureNotHandled, h = l.wrapsPrimitiveReceiver, f = l.isPrimitive, p = l.thrower;
                            t.prototype.lastly = t.prototype["finally"] = function(e) {
                                if ("function" != typeof e) return this.then();
                                var t = {
                                    promise: this,
                                    handler: e
                                };
                                return this._then(c, c, void 0, t, void 0, this.lastly);
                            };
                        };
                    }, {
                        "./errors.js": 11,
                        "./util.js": 40
                    } ],
                    16: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n, r) {
                            var i = e("./promise_spawn.js")(t, r), o = e("./errors.js"), a = o.TypeError;
                            t.coroutine = function(e) {
                                if ("function" != typeof e) throw new a("generatorFunction must be a function");
                                var t = i;
                                return function n() {
                                    var r = e.apply(this, arguments), i = new t(void 0, void 0, n);
                                    return i._generator = r, i._next(void 0), i.promise();
                                };
                            }, t.spawn = function(e) {
                                if ("function" != typeof e) return n("generatorFunction must be a function");
                                var r = new i(e, this, t.spawn), o = r.promise();
                                return r._run(t.spawn), o;
                            };
                        };
                    }, {
                        "./errors.js": 11,
                        "./promise_spawn.js": 25
                    } ],
                    17: [ function(e, t) {
                        var n = e("__browserify_process"), r = "undefined" != typeof self ? self : "undefined" != typeof window ? window : {};
                        t.exports = function() {
                            return "undefined" != typeof this ? this : "undefined" != typeof n && "undefined" != typeof r && "string" == typeof n.execPath ? r : "undefined" != typeof window && "undefined" != typeof document && "undefined" != typeof navigator && null !== navigator && "string" == typeof navigator.appName ? void 0 !== window.wrappedJSObject ? window.wrappedJSObject : window : void 0;
                        }();
                    }, {
                        __browserify_process: 76
                    } ],
                    18: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n, r, i) {
                            function o(e) {
                                var i = this, a = void 0;
                                "function" != typeof i && (a = i.receiver, i = i.fn);
                                var s = !1, c = new Array(e.length);
                                if (void 0 === a) {
                                    for (var l = 0, u = e.length; u > l; ++l) if (void 0 !== e[l] || l in e) {
                                        var h = i(e[l], l, u);
                                        if (!s) {
                                            var f = t._cast(h, o, void 0);
                                            if (f instanceof t) {
                                                if (f.isFulfilled()) {
                                                    c[l] = f._settledValue;
                                                    continue;
                                                }
                                                s = !0, h = f;
                                            }
                                        }
                                        c[l] = h;
                                    }
                                } else for (var l = 0, u = e.length; u > l; ++l) if (void 0 !== e[l] || l in e) {
                                    var h = i.call(a, e[l], l, u);
                                    if (!s) {
                                        var f = t._cast(h, o, void 0);
                                        if (f instanceof t) {
                                            if (f.isFulfilled()) {
                                                c[l] = f._settledValue;
                                                continue;
                                            }
                                            s = !0, h = f;
                                        }
                                    }
                                    c[l] = h;
                                }
                                return s ? n(c, r, o, void 0).promise() : c;
                            }
                            function a(e, t, a, s, c) {
                                if ("function" != typeof t) return i("fn must be a function");
                                a === !0 && e._isBound() && (t = {
                                    fn: t,
                                    receiver: e._boundTo
                                });
                                var l = n(e, r, s, a === !0 && e._isBound() ? e._boundTo : void 0).promise();
                                return void 0 !== c && (c.ref = l), l._then(o, void 0, void 0, t, void 0, s);
                            }
                            e("./assert.js"), t.prototype.map = function(e, t) {
                                return a(this, e, !0, this.map, t);
                            }, t.map = function(e, n, r) {
                                return a(e, n, !1, t.map, r);
                            };
                        };
                    }, {
                        "./assert.js": 3
                    } ],
                    19: [ function(e, t) {
                        "use strict";
                        t.exports = function(t) {
                            function n(e) {
                                throw e;
                            }
                            function r(e, t) {
                                var r = this, i = s(r, t, null, e);
                                i === l && a.invokeLater(n, void 0, i.e);
                            }
                            function i(e, t) {
                                var r = this, i = c(r, t, e);
                                i === l && a.invokeLater(n, void 0, i.e);
                            }
                            var o = e("./util.js"), a = e("./async.js"), s = (e("./assert.js"), o.tryCatch2), c = o.tryCatch1, l = o.errorObj;
                            t.prototype.nodeify = function(e) {
                                return "function" == typeof e && this._then(r, i, void 0, e, this._isBound() ? this._boundTo : null, this.nodeify), 
                                this;
                            };
                        };
                    }, {
                        "./assert.js": 3,
                        "./async.js": 4,
                        "./util.js": 40
                    } ],
                    20: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n) {
                            var r = (e("./assert.js"), e("./util.js")), i = e("./async.js"), o = r.tryCatch1, a = r.errorObj;
                            t.prototype.progressed = function(e) {
                                return this._then(void 0, void 0, e, void 0, void 0, this.progressed);
                            }, t.prototype._progress = function(e) {
                                this._isFollowingOrFulfilledOrRejected() || this._progressUnchecked(e);
                            }, t.prototype._progressHandlerAt = function(e) {
                                return 0 === e ? this._progressHandler0 : this[e + 2 - 5];
                            }, t.prototype._doProgressWith = function(e) {
                                var n = e.value, r = e.handler, i = e.promise, s = e.receiver;
                                this._pushContext();
                                var c = o(r, s, n);
                                this._popContext(), c === a ? null != c.e && "StopProgressPropagation" === c.e.name ? c.e.__promiseHandled__ = 2 : (i._attachExtraTrace(c.e), 
                                i._progress(c.e)) : t.is(c) ? c._then(i._progress, null, null, i, void 0, this._progress) : i._progress(c);
                            }, t.prototype._progressUnchecked = function(e) {
                                if (this.isPending()) for (var r = this._length(), o = 0; r > o; o += 5) {
                                    var a = this._progressHandlerAt(o), s = this._promiseAt(o);
                                    if (t.is(s)) "function" == typeof a ? i.invoke(this._doProgressWith, this, {
                                        handler: a,
                                        promise: s,
                                        receiver: this._receiverAt(o),
                                        value: e
                                    }) : i.invoke(s._progress, s, e); else {
                                        var c = this._receiverAt(o);
                                        "function" == typeof a ? a.call(c, e, s) : t.is(c) && c._isProxied() ? c._progressUnchecked(e) : n(c, s) && c._promiseProgressed(e, s);
                                    }
                                }
                            };
                        };
                    }, {
                        "./assert.js": 3,
                        "./async.js": 4,
                        "./util.js": 40
                    } ],
                    21: [ function(e, t) {
                        var n = e("__browserify_process");
                        t.exports = function() {
                            function t(e) {
                                return void 0 === e ? !1 : e instanceof i;
                            }
                            function r(e, t) {
                                return e instanceof d ? t >= 0 : !1;
                            }
                            function i(e) {
                                if ("function" != typeof e) throw new S("the promise constructor requires a resolver function");
                                if (this.constructor !== i) throw new S("the promise constructor cannot be invoked directly");
                                this._bitField = 0, this._fulfillmentHandler0 = void 0, this._rejectionHandler0 = void 0, 
                                this._promise0 = void 0, this._receiver0 = void 0, this._settledValue = void 0, 
                                this._boundTo = void 0, e !== h && this._resolveFromResolver(e);
                            }
                            function o(e, t, n) {
                                return a(e, d, n, t === !0 && e._isBound() ? e._boundTo : void 0).promise();
                            }
                            function a(e, n, r, o) {
                                var s = null;
                                return g(e) ? s = e : (s = i._cast(e, r, void 0), s !== e ? s._setBoundTo(o) : t(s) || (s = null)), 
                                null !== s ? new n(s, "function" == typeof r ? r : a, o) : {
                                    promise: function() {
                                        return B("expecting an array, a promise or a thenable");
                                    }
                                };
                            }
                            var s = e("./global.js"), c = (e("./assert.js"), e("./util.js")), l = e("./async.js"), u = e("./errors.js"), h = function() {}, f = {}, p = {
                                e: null
                            }, d = e("./promise_array.js")(i, h), m = e("./captured_trace.js")(), E = e("./catch_filter.js")(p), v = e("./promise_resolver.js"), g = c.isArray, y = c.notEnumerableProp, T = c.isObject, x = c.ensurePropertyExpansion, R = c.errorObj, _ = c.tryCatch1, b = c.tryCatch2, w = c.tryCatchApply, H = u.RangeError, S = u.TypeError, M = u.CancellationError, C = u.TimeoutError, A = u.RejectionError, P = u.originatesFromRejection, k = u.markAsOriginatingFromRejection, L = u.ensureNotHandled, F = u.withHandledMarked, D = u.withStackAttached, U = u.isStackAttached, V = u.isHandled, O = u.canAttach, z = c.thrower, B = e("./errors_api_rejection")(i), j = function() {
                                return new S("circular promise resolution chain");
                            };
                            i.prototype.bind = function(e) {
                                var t = new i(h);
                                return N && t._setTrace(this.bind, this), t._follow(this), t._setBoundTo(e), this._cancellable() && (t._setCancellable(), 
                                t._cancellationParent = this), t;
                            }, i.prototype.toString = function() {
                                return "[object Promise]";
                            }, i.prototype.caught = i.prototype["catch"] = function(e) {
                                var t = arguments.length;
                                if (t > 1) {
                                    var n, r = new Array(t - 1), i = 0;
                                    for (n = 0; t - 1 > n; ++n) {
                                        var o = arguments[n];
                                        if ("function" != typeof o) {
                                            var a = new S("A catch filter must be an error constructor or a filter function");
                                            return this._attachExtraTrace(a), void l.invoke(this._reject, this, a);
                                        }
                                        r[i++] = o;
                                    }
                                    r.length = i, e = arguments[n], this._resetTrace(this.caught);
                                    var s = new E(r, e, this);
                                    return this._then(void 0, s.doFilter, void 0, s, void 0, this.caught);
                                }
                                return this._then(void 0, e, void 0, void 0, void 0, this.caught);
                            }, i.prototype.then = function(e, t, n) {
                                return this._then(e, t, n, void 0, void 0, this.then);
                            }, i.prototype.done = function(e, t, n) {
                                var r = this._then(e, t, n, void 0, void 0, this.done);
                                r._setIsFinal();
                            }, i.prototype.spread = function(e, t) {
                                return this._then(e, t, void 0, f, void 0, this.spread);
                            }, i.prototype.isFulfilled = function() {
                                return (268435456 & this._bitField) > 0;
                            }, i.prototype.isRejected = function() {
                                return (134217728 & this._bitField) > 0;
                            }, i.prototype.isPending = function() {
                                return !this.isResolved();
                            }, i.prototype.isResolved = function() {
                                return (402653184 & this._bitField) > 0;
                            }, i.prototype.isCancellable = function() {
                                return !this.isResolved() && this._cancellable();
                            }, i.prototype.toJSON = function() {
                                var e = {
                                    isFulfilled: !1,
                                    isRejected: !1,
                                    fulfillmentValue: void 0,
                                    rejectionReason: void 0
                                };
                                return this.isFulfilled() ? (e.fulfillmentValue = this._settledValue, e.isFulfilled = !0) : this.isRejected() && (e.rejectionReason = this._settledValue, 
                                e.isRejected = !0), e;
                            }, i.prototype.all = function() {
                                return o(this, !0, this.all);
                            }, i.is = t, i.all = function(e) {
                                return o(e, !1, i.all);
                            }, i.join = function() {
                                for (var e = arguments.length, t = new Array(e), n = 0; e > n; ++n) t[n] = arguments[n];
                                return a(t, d, i.join, void 0).promise();
                            }, i.resolve = i.fulfilled = function(e, t) {
                                var n = new i(h);
                                return N && n._setTrace("function" == typeof t ? t : i.resolve, void 0), n._tryFollow(e) ? n : (n._cleanValues(), 
                                n._setFulfilled(), n._settledValue = e, n);
                            }, i.reject = i.rejected = function(e) {
                                var t = new i(h);
                                return N && t._setTrace(i.reject, void 0), k(e), t._cleanValues(), t._setRejected(), 
                                t._settledValue = e, t;
                            }, i.prototype.error = function(e) {
                                return this.caught(P, e);
                            }, i.prototype._resolveFromSyncValue = function(e, t) {
                                if (e === R) this._cleanValues(), this._setRejected(), this._settledValue = e.e; else {
                                    var n = i._cast(e, t, void 0);
                                    n instanceof i ? this._follow(n) : (this._cleanValues(), this._setFulfilled(), this._settledValue = e);
                                }
                            }, i.method = function(e) {
                                if ("function" != typeof e) throw new S("fn must be a function");
                                return function t() {
                                    var n;
                                    switch (arguments.length) {
                                      case 0:
                                        n = _(e, this, void 0);
                                        break;

                                      case 1:
                                        n = _(e, this, arguments[0]);
                                        break;

                                      case 2:
                                        n = b(e, this, arguments[0], arguments[1]);
                                        break;

                                      default:
                                        for (var r = arguments.length, o = new Array(r), a = 0; r > a; ++a) o[a] = arguments[a];
                                        n = w(e, o, this);
                                    }
                                    var s = new i(h);
                                    return N && s._setTrace(t, void 0), s._resolveFromSyncValue(n, t), s;
                                };
                            }, i["try"] = i.attempt = function(e, t, n) {
                                if ("function" != typeof e) return B("fn must be a function");
                                var r = g(t) ? w(e, t, n) : _(e, n, t), o = new i(h);
                                return N && o._setTrace(i.attempt, void 0), o._resolveFromSyncValue(r, i.attempt), 
                                o;
                            }, i.defer = i.pending = function(e) {
                                var t = new i(h);
                                return N && t._setTrace("function" == typeof e ? e : i.defer, void 0), new v(t);
                            }, i.bind = function(e) {
                                var t = new i(h);
                                return N && t._setTrace(i.bind, void 0), t._setFulfilled(), t._setBoundTo(e), t;
                            }, i.cast = function(e, t) {
                                "function" != typeof t && (t = i.cast);
                                var n = i._cast(e, t, void 0);
                                return n instanceof i ? n : i.resolve(n, t);
                            }, i.onPossiblyUnhandledRejection = function(e) {
                                m.possiblyUnhandledRejection = "function" == typeof e ? e : void 0;
                            };
                            var N = !1 || !("undefined" == typeof n || "string" != typeof n.execPath || "object" != typeof n.env || !n.env.BLUEBIRD_DEBUG && "development" !== n.env.NODE_ENV);
                            i.longStackTraces = function() {
                                if (l.haveItemsQueued() && N === !1) throw new Error("cannot enable long stack traces after promises have been created");
                                N = m.isSupported();
                            }, i.hasLongStackTraces = function() {
                                return N && m.isSupported();
                            }, i.prototype._setProxyHandlers = function(e, t) {
                                var n = this._length();
                                if (n >= 4194298 && (n = 0, this._setLength(0)), 0 === n) this._promise0 = t, this._receiver0 = e; else {
                                    var r = n - 5;
                                    this[r + 3] = t, this[r + 4] = e, this[r + 0] = this[r + 1] = this[r + 2] = void 0;
                                }
                                this._setLength(n + 5);
                            }, i.prototype._proxyPromiseArray = function(e, t) {
                                this._setProxyHandlers(e, t);
                            }, i.prototype._proxyPromise = function(e) {
                                e._setProxied(), this._setProxyHandlers(e, -1);
                            }, i.prototype._then = function(e, t, n, r, o, a) {
                                var s = void 0 !== o, c = s ? o : new i(h);
                                if (N && !s) {
                                    var u = this._peekContext() === this._traceParent;
                                    c._traceParent = u ? this._traceParent : this, c._setTrace("function" == typeof a ? a : this._then, this);
                                }
                                !s && this._isBound() && c._setBoundTo(this._boundTo);
                                var f = this._addCallbacks(e, t, n, c, r);
                                return !s && this._cancellable() && (c._setCancellable(), c._cancellationParent = this), 
                                this.isResolved() && l.invoke(this._queueSettleAt, this, f), c;
                            }, i.prototype._length = function() {
                                return 4194303 & this._bitField;
                            }, i.prototype._isFollowingOrFulfilledOrRejected = function() {
                                return (939524096 & this._bitField) > 0;
                            }, i.prototype._isFollowing = function() {
                                return 536870912 === (536870912 & this._bitField);
                            }, i.prototype._setLength = function(e) {
                                this._bitField = -4194304 & this._bitField | 4194303 & e;
                            }, i.prototype._cancellable = function() {
                                return (67108864 & this._bitField) > 0;
                            }, i.prototype._setFulfilled = function() {
                                this._bitField = 268435456 | this._bitField;
                            }, i.prototype._setRejected = function() {
                                this._bitField = 134217728 | this._bitField;
                            }, i.prototype._setFollowing = function() {
                                this._bitField = 536870912 | this._bitField;
                            }, i.prototype._setIsFinal = function() {
                                this._bitField = 33554432 | this._bitField;
                            }, i.prototype._isFinal = function() {
                                return (33554432 & this._bitField) > 0;
                            }, i.prototype._setCancellable = function() {
                                this._bitField = 67108864 | this._bitField;
                            }, i.prototype._unsetCancellable = function() {
                                this._bitField = -67108865 & this._bitField;
                            }, i.prototype._receiverAt = function(e) {
                                var t;
                                return t = 0 === e ? this._receiver0 : this[e + 4 - 5], this._isBound() && void 0 === t ? this._boundTo : t;
                            }, i.prototype._promiseAt = function(e) {
                                return 0 === e ? this._promise0 : this[e + 3 - 5];
                            }, i.prototype._fulfillmentHandlerAt = function(e) {
                                return 0 === e ? this._fulfillmentHandler0 : this[e + 0 - 5];
                            }, i.prototype._rejectionHandlerAt = function(e) {
                                return 0 === e ? this._rejectionHandler0 : this[e + 1 - 5];
                            }, i.prototype._unsetAt = function(e) {
                                0 === e ? this._fulfillmentHandler0 = this._rejectionHandler0 = this._progressHandler0 = this._promise0 = this._receiver0 = void 0 : this[e - 5 + 0] = this[e - 5 + 1] = this[e - 5 + 2] = this[e - 5 + 3] = this[e - 5 + 4] = void 0;
                            }, i.prototype._resolveFromResolver = function(e) {
                                function t(e) {
                                    r._tryFollow(e) || r._fulfill(e);
                                }
                                function n(e) {
                                    r._attachExtraTrace(e), k(e), r._reject(e);
                                }
                                var r = this, i = N;
                                i && (this._setTrace(this._resolveFromResolver, void 0), this._pushContext());
                                var o = b(e, void 0, t, n);
                                i && this._popContext(), void 0 !== o && o === R && r._reject(o.e);
                            }, i.prototype._addCallbacks = function(e, t, n, r, i) {
                                var o = this._length();
                                if (o >= 4194298 && (o = 0, this._setLength(0)), 0 === o) this._promise0 = r, void 0 !== i && (this._receiver0 = i), 
                                "function" == typeof e && (this._fulfillmentHandler0 = e), "function" == typeof t && (this._rejectionHandler0 = t), 
                                "function" == typeof n && (this._progressHandler0 = n); else {
                                    var a = o - 5;
                                    this[a + 3] = r, this[a + 4] = i, this[a + 0] = "function" == typeof e ? e : void 0, 
                                    this[a + 1] = "function" == typeof t ? t : void 0, this[a + 2] = "function" == typeof n ? n : void 0;
                                }
                                return this._setLength(o + 5), o;
                            }, i.prototype._setBoundTo = function(e) {
                                void 0 !== e ? (this._bitField = 8388608 | this._bitField, this._boundTo = e) : this._bitField = -8388609 & this._bitField;
                            }, i.prototype._isBound = function() {
                                return 8388608 === (8388608 & this._bitField);
                            }, i.prototype._spreadSlowCase = function(e, t, n, r) {
                                var i = a(n, d, this._spreadSlowCase, r).promise()._then(function() {
                                    return e.apply(r, arguments);
                                }, void 0, void 0, f, void 0, this._spreadSlowCase);
                                t._follow(i);
                            }, i.prototype._markHandled = function(e) {
                                if ("object" == typeof e && null !== e) {
                                    var t = e.__promiseHandled__;
                                    void 0 === t ? y(e, "__promiseHandled__", 2) : e.__promiseHandled__ = F(t);
                                }
                            }, i.prototype._callSpread = function(e, n, r, o) {
                                var a = this._isBound() ? this._boundTo : void 0;
                                if (g(r)) for (var s = this._settlePromiseFromHandler, c = 0, l = r.length; l > c; ++c) if (t(i._cast(r[c], s, void 0))) return void this._spreadSlowCase(e, n, r, a);
                                return o && n._pushContext(), w(e, r, a);
                            }, i.prototype._callHandler = function(e, t, n, r, i) {
                                var o;
                                return t !== f || this.isRejected() ? (i && n._pushContext(), o = _(e, t, r)) : o = this._callSpread(e, n, r, i), 
                                i && n._popContext(), o;
                            }, i.prototype._settlePromiseFromHandler = function(e, n, r, o) {
                                if (!t(o)) return void e.call(n, r, o);
                                this.isRejected() && this._markHandled(r);
                                var a = N, s = this._callHandler(e, n, o, r, a);
                                if (!o._isFollowing()) if (s === R || s === o || s === p) {
                                    var c = s === o ? j() : L(s.e);
                                    s !== p && o._attachExtraTrace(c), o._rejectUnchecked(c);
                                } else {
                                    var l = i._cast(s, a ? this._settlePromiseFromHandler : void 0, o);
                                    t(l) ? (o._follow(l), l._cancellable() && (o._cancellationParent = l, o._setCancellable())) : o._fulfillUnchecked(s);
                                }
                            }, i.prototype._follow = function(e) {
                                this._setFollowing(), e.isPending() ? (e._cancellable() && (this._cancellationParent = e, 
                                this._setCancellable()), e._proxyPromise(this)) : e.isFulfilled() ? this._fulfillUnchecked(e._settledValue) : this._rejectUnchecked(e._settledValue), 
                                N && null == e._traceParent && (e._traceParent = this);
                            }, i.prototype._tryFollow = function(e) {
                                if (this._isFollowingOrFulfilledOrRejected() || e === this) return !1;
                                var n = i._cast(e, this._tryFollow, void 0);
                                return t(n) ? (this._follow(n), !0) : !1;
                            }, i.prototype._resetTrace = function(e) {
                                if (N) {
                                    var t = this._peekContext(), n = void 0 === t;
                                    this._trace = new m("function" == typeof e ? e : this._resetTrace, n);
                                }
                            }, i.prototype._setTrace = function(e, t) {
                                if (N) {
                                    var n = this._peekContext();
                                    this._traceParent = n;
                                    var r = void 0 === n;
                                    this._trace = void 0 !== t && t._traceParent === n ? t._trace : new m("function" == typeof e ? e : this._setTrace, r);
                                }
                                return this;
                            }, i.prototype._attachExtraTrace = function(e) {
                                if (N && O(e)) {
                                    var t = this, n = e.stack;
                                    n = "string" == typeof n ? n.split("\n") : [];
                                    for (var r = 1; null != t && null != t._trace; ) n = m.combine(n, t._trace.stack.split("\n")), 
                                    t = t._traceParent;
                                    var i = Error.stackTraceLimit + r, o = n.length;
                                    o > i && (n.length = i), e.stack = n.length <= r ? "(No stack trace)" : n.join("\n"), 
                                    e.__promiseHandled__ = D(e.__promiseHandled__);
                                }
                            }, i.prototype._notifyUnhandledRejection = function(e) {
                                V(e.__promiseHandled__) || (e.__promiseHandled__ = F(e.__promiseHandled__), m.possiblyUnhandledRejection(e, this));
                            }, i.prototype._unhandledRejection = function(e) {
                                V(e.__promiseHandled__) || l.invokeLater(this._notifyUnhandledRejection, this, e);
                            }, i.prototype._cleanValues = function() {
                                this._cancellable() && (this._cancellationParent = void 0);
                            }, i.prototype._fulfill = function(e) {
                                this._isFollowingOrFulfilledOrRejected() || this._fulfillUnchecked(e);
                            }, i.prototype._reject = function(e) {
                                this._isFollowingOrFulfilledOrRejected() || this._rejectUnchecked(e);
                            }, i.prototype._settlePromiseAt = function(e) {
                                var t = this.isFulfilled() ? this._fulfillmentHandlerAt(e) : this._rejectionHandlerAt(e), n = this._settledValue, o = this._receiverAt(e), a = this._promiseAt(e);
                                if ("function" == typeof t) this._settlePromiseFromHandler(t, o, n, a); else {
                                    var s = !1, c = this.isFulfilled();
                                    void 0 !== o && (o instanceof i && o._isProxied() ? (o._unsetProxied(), c ? o._fulfillUnchecked(n) : o._rejectUnchecked(n), 
                                    s = !0) : r(o, a) && (c ? o._promiseFulfilled(n, a) : o._promiseRejected(n, a), 
                                    s = !0)), s || (c ? a._fulfill(n) : a._reject(n));
                                }
                                e >= 256 && this._queueGC();
                            }, i.prototype._isProxied = function() {
                                return 4194304 === (4194304 & this._bitField);
                            }, i.prototype._setProxied = function() {
                                this._bitField = 4194304 | this._bitField;
                            }, i.prototype._unsetProxied = function() {
                                this._bitField = -4194305 & this._bitField;
                            }, i.prototype._isGcQueued = function() {
                                return -1073741824 === (-1073741824 & this._bitField);
                            }, i.prototype._setGcQueued = function() {
                                this._bitField = -1073741824 | this._bitField;
                            }, i.prototype._unsetGcQueued = function() {
                                this._bitField = 1073741823 & this._bitField;
                            }, i.prototype._queueGC = function() {
                                this._isGcQueued() || (this._setGcQueued(), l.invokeLater(this._gc, this, void 0));
                            }, i.prototype._gc = function() {
                                var e = this._length();
                                this._unsetAt(0);
                                for (var t = 0; e > t; t++) delete this[t];
                                this._setLength(0), this._unsetGcQueued();
                            }, i.prototype._queueSettleAt = function(e) {
                                l.invoke(this._settlePromiseAt, this, e);
                            }, i.prototype._fulfillUnchecked = function(e) {
                                if (this.isPending()) {
                                    if (e === this) {
                                        var t = j();
                                        return this._attachExtraTrace(t), this._rejectUnchecked(t);
                                    }
                                    this._cleanValues(), this._setFulfilled(), this._settledValue = e;
                                    var n = this._length();
                                    n > 0 && l.invoke(this._fulfillPromises, this, n);
                                }
                            }, i.prototype._fulfillPromises = function(e) {
                                e = this._length();
                                for (var t = 0; e > t; t += 5) this._settlePromiseAt(t);
                            }, i.prototype._rejectUnchecked = function(e) {
                                if (this.isPending()) {
                                    if (e === this) {
                                        var t = j();
                                        return this._attachExtraTrace(t), this._rejectUnchecked(t);
                                    }
                                    if (this._cleanValues(), this._setRejected(), this._settledValue = e, this._isFinal()) return void l.invokeLater(z, void 0, e);
                                    var n = this._length();
                                    n > 0 ? l.invoke(this._rejectPromises, this, n) : this._ensurePossibleRejectionHandled(e);
                                }
                            }, i.prototype._rejectPromises = function(e) {
                                e = this._length();
                                for (var n = !1, i = 0; e > i; i += 5) {
                                    var o = this._rejectionHandlerAt(i);
                                    if (!n) if ("function" == typeof o) n = !0; else {
                                        var a = this._promiseAt(i);
                                        if (t(a) && a._length() > 0) n = !0; else {
                                            var s = this._receiverAt(i);
                                            (t(s) && s._length() > 0 || r(s, a)) && (n = !0);
                                        }
                                    }
                                    this._settlePromiseAt(i);
                                }
                                n || this._ensurePossibleRejectionHandled(this._settledValue);
                            }, i.prototype._ensurePossibleRejectionHandled = function(e) {
                                if (void 0 !== m.possiblyUnhandledRejection && T(e)) {
                                    var t = e.__promiseHandled__, n = e;
                                    if (void 0 === t) n = x(e, "__promiseHandled__", 0), t = 0; else if (V(t)) return;
                                    U(t) || this._attachExtraTrace(n), l.invoke(this._unhandledRejection, this, n);
                                }
                            };
                            var I = [];
                            i.prototype._peekContext = function() {
                                var e = I.length - 1;
                                return e >= 0 ? I[e] : void 0;
                            }, i.prototype._pushContext = function() {
                                N && I.push(this);
                            }, i.prototype._popContext = function() {
                                N && I.pop();
                            };
                            var G = s.Promise;
                            return i.noConflict = function() {
                                return s.Promise === i && (s.Promise = G), i;
                            }, m.isSupported() || (i.longStackTraces = function() {}, N = !1), i._makeSelfResolutionError = j, 
                            e("./finally.js")(i, p), e("./direct_resolve.js")(i), e("./thenables.js")(i), i.RangeError = H, 
                            i.CancellationError = M, i.TimeoutError = C, i.TypeError = S, i.RejectionError = A, 
                            e("./timers.js")(i, h), e("./synchronous_inspection.js")(i), e("./any.js")(i, a, d), 
                            e("./race.js")(i, h), e("./call_get.js")(i), e("./filter.js")(i, a, d, B), e("./generators.js")(i, B, h), 
                            e("./map.js")(i, a, d, B), e("./nodeify.js")(i), e("./promisify.js")(i, h), e("./props.js")(i, d), 
                            e("./reduce.js")(i, a, d, B), e("./settle.js")(i, a, d), e("./some.js")(i, a, d, B), 
                            e("./progress.js")(i, r), e("./cancel.js")(i, h), i.prototype = i.prototype, i;
                        };
                    }, {
                        "./any.js": 2,
                        "./assert.js": 3,
                        "./async.js": 4,
                        "./call_get.js": 6,
                        "./cancel.js": 7,
                        "./captured_trace.js": 8,
                        "./catch_filter.js": 9,
                        "./direct_resolve.js": 10,
                        "./errors.js": 11,
                        "./errors_api_rejection": 12,
                        "./filter.js": 14,
                        "./finally.js": 15,
                        "./generators.js": 16,
                        "./global.js": 17,
                        "./map.js": 18,
                        "./nodeify.js": 19,
                        "./progress.js": 20,
                        "./promise_array.js": 22,
                        "./promise_resolver.js": 24,
                        "./promisify.js": 26,
                        "./props.js": 28,
                        "./race.js": 30,
                        "./reduce.js": 31,
                        "./settle.js": 33,
                        "./some.js": 35,
                        "./synchronous_inspection.js": 37,
                        "./thenables.js": 38,
                        "./timers.js": 39,
                        "./util.js": 40,
                        __browserify_process: 76
                    } ],
                    22: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n) {
                            function r(e) {
                                switch (e) {
                                  case -1:
                                    return void 0;

                                  case -2:
                                    return [];

                                  case -3:
                                    return {};
                                }
                            }
                            function i(e, r, i) {
                                var o = this._promise = new t(n), a = void 0;
                                t.is(e) && (a = e, e._cancellable() && (o._setCancellable(), o._cancellationParent = e), 
                                e._isBound() && o._setBoundTo(i)), o._setTrace(r, a), this._values = e, this._length = 0, 
                                this._totalResolved = 0, this._init(void 0, -2);
                            }
                            var o = (e("./assert.js"), e("./errors.js").ensureNotHandled), a = e("./util.js"), s = e("./async.js"), c = {}.hasOwnProperty, l = a.isArray;
                            return i.PropertiesPromiseArray = function() {}, i.prototype.length = function() {
                                return this._length;
                            }, i.prototype.promise = function() {
                                return this._promise;
                            }, i.prototype._init = function(e, n) {
                                var o = this._values;
                                if (t.is(o)) {
                                    if (!o.isFulfilled()) return o.isPending() ? void o._then(this._init, this._reject, void 0, this, n, this.constructor) : void this._reject(o._settledValue);
                                    if (o = o._settledValue, !l(o)) {
                                        var a = new t.TypeError("expecting an array, a promise or a thenable");
                                        return void this.__hardReject__(a);
                                    }
                                    this._values = o;
                                }
                                if (0 === o.length) return void this._resolve(r(n));
                                var u, h = o.length, f = h;
                                u = this instanceof i.PropertiesPromiseArray ? this._values : new Array(h);
                                for (var p = !1, d = 0; h > d; ++d) {
                                    var m = o[d];
                                    if (void 0 !== m || c.call(o, d)) {
                                        var E = t._cast(m, void 0, void 0);
                                        E instanceof t && E.isPending() ? E._proxyPromiseArray(this, d) : p = !0, u[d] = E;
                                    } else f--;
                                }
                                if (0 === f) return void this._resolve(-2 === n ? u : r(n));
                                if (this._values = u, this._length = f, p) {
                                    var v = f === h ? this._scanDirectValues : this._scanDirectValuesHoled;
                                    s.invoke(v, this, h);
                                }
                            }, i.prototype._settlePromiseAt = function(e) {
                                var n = this._values[e];
                                t.is(n) ? n.isFulfilled() ? this._promiseFulfilled(n._settledValue, e) : n.isRejected() && this._promiseRejected(n._settledValue, e) : this._promiseFulfilled(n, e);
                            }, i.prototype._scanDirectValuesHoled = function(e) {
                                for (var t = 0; e > t && !this._isResolved(); ++t) c.call(this._values, t) && this._settlePromiseAt(t);
                            }, i.prototype._scanDirectValues = function(e) {
                                for (var t = 0; e > t && !this._isResolved(); ++t) this._settlePromiseAt(t);
                            }, i.prototype._isResolved = function() {
                                return null === this._values;
                            }, i.prototype._resolve = function(e) {
                                this._values = null, this._promise._fulfill(e);
                            }, i.prototype.__hardReject__ = i.prototype._reject = function(e) {
                                o(e), this._values = null, this._promise._attachExtraTrace(e), this._promise._reject(e);
                            }, i.prototype._promiseProgressed = function(e, t) {
                                this._isResolved() || this._promise._progress({
                                    index: t,
                                    value: e
                                });
                            }, i.prototype._promiseFulfilled = function(e, t) {
                                if (!this._isResolved()) {
                                    this._values[t] = e;
                                    var n = ++this._totalResolved;
                                    n >= this._length && this._resolve(this._values);
                                }
                            }, i.prototype._promiseRejected = function(e) {
                                this._isResolved() || (this._totalResolved++, this._reject(e));
                            }, i;
                        };
                    }, {
                        "./assert.js": 3,
                        "./async.js": 4,
                        "./errors.js": 11,
                        "./util.js": 40
                    } ],
                    23: [ function(e, t) {
                        "use strict";
                        function n(e) {
                            void 0 !== e ? (this._bitField = e._bitField, this._settledValue = e.isResolved() ? e._settledValue : void 0) : (this._bitField = 0, 
                            this._settledValue = void 0);
                        }
                        var r = e("./errors.js").TypeError;
                        n.prototype.isFulfilled = function() {
                            return (268435456 & this._bitField) > 0;
                        }, n.prototype.isRejected = function() {
                            return (134217728 & this._bitField) > 0;
                        }, n.prototype.isPending = function() {
                            return 0 === (402653184 & this._bitField);
                        }, n.prototype.value = function() {
                            if (!this.isFulfilled()) throw new r("cannot get fulfillment value of a non-fulfilled promise");
                            return this._settledValue;
                        }, n.prototype.error = function() {
                            if (!this.isRejected()) throw new r("cannot get rejection reason of a non-rejected promise");
                            return this._settledValue;
                        }, t.exports = n;
                    }, {
                        "./errors.js": 11
                    } ],
                    24: [ function(e, t) {
                        "use strict";
                        function n(e) {
                            return e instanceof Error && p.getPrototypeOf(e) === Error.prototype;
                        }
                        function r(e) {
                            var t;
                            return t = n(e) ? new u(e) : e, c.markAsOriginatingFromRejection(t), t;
                        }
                        function i(e) {
                            function t(t, n) {
                                if (t) {
                                    var i = r(s(t));
                                    e._attachExtraTrace(i), e._reject(i);
                                } else if (arguments.length > 2) {
                                    for (var o = arguments.length, a = new Array(o - 1), c = 1; o > c; ++c) a[c - 1] = arguments[c];
                                    e._fulfill(a);
                                } else e._fulfill(n);
                            }
                            return t;
                        }
                        var o, a = e("./util.js"), s = a.maybeWrapAsError, c = e("./errors.js"), l = c.TimeoutError, u = c.RejectionError, h = e("./async.js"), f = a.haveGetters, p = e("./es5.js");
                        if (o = f ? function(e) {
                            this.promise = e;
                        } : function(e) {
                            this.promise = e, this.asCallback = i(e), this.callback = this.asCallback;
                        }, f) {
                            var d = {
                                get: function() {
                                    return i(this.promise);
                                }
                            };
                            p.defineProperty(o.prototype, "asCallback", d), p.defineProperty(o.prototype, "callback", d);
                        }
                        o._nodebackForPromise = i, o.prototype.toString = function() {
                            return "[object PromiseResolver]";
                        }, o.prototype.resolve = o.prototype.fulfill = function(e) {
                            var t = this.promise;
                            t._tryFollow(e) || h.invoke(t._fulfill, t, e);
                        }, o.prototype.reject = function(e) {
                            var t = this.promise;
                            c.markAsOriginatingFromRejection(e), t._attachExtraTrace(e), h.invoke(t._reject, t, e);
                        }, o.prototype.progress = function(e) {
                            h.invoke(this.promise._progress, this.promise, e);
                        }, o.prototype.cancel = function() {
                            h.invoke(this.promise.cancel, this.promise, void 0);
                        }, o.prototype.timeout = function() {
                            this.reject(new l("timeout"));
                        }, o.prototype.isResolved = function() {
                            return this.promise.isResolved();
                        }, o.prototype.toJSON = function() {
                            return this.promise.toJSON();
                        }, t.exports = o;
                    }, {
                        "./async.js": 4,
                        "./errors.js": 11,
                        "./es5.js": 13,
                        "./util.js": 40
                    } ],
                    25: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n) {
                            function r(e, r, i) {
                                var o = this._promise = new t(n);
                                o._setTrace(i, void 0), this._generatorFunction = e, this._receiver = r, this._generator = void 0;
                            }
                            var i = e("./errors.js"), o = i.TypeError, a = i.ensureNotHandled, s = e("./util.js"), c = s.isArray, l = s.errorObj, u = s.tryCatch1;
                            return r.prototype.promise = function() {
                                return this._promise;
                            }, r.prototype._run = function() {
                                this._generator = this._generatorFunction.call(this._receiver), this._receiver = this._generatorFunction = void 0, 
                                this._next(void 0);
                            }, r.prototype._continue = function h(e) {
                                if (e === l) return this._generator = void 0, this._promise._attachExtraTrace(e.e), 
                                void this._promise._reject(e.e);
                                var n = e.value;
                                if (e.done === !0) this._generator = void 0, this._promise._fulfill(n); else {
                                    var r = t._cast(n, h, void 0);
                                    if (!(r instanceof t)) {
                                        if (!c(r)) return void this._throw(new o("A value was yielded that could not be treated as a promise"));
                                        r = t.all(r);
                                    }
                                    r._then(this._next, this._throw, void 0, this, null, void 0);
                                }
                            }, r.prototype._throw = function(e) {
                                a(e), this._promise._attachExtraTrace(e), this._continue(u(this._generator["throw"], this._generator, e));
                            }, r.prototype._next = function(e) {
                                this._continue(u(this._generator.next, this._generator, e));
                            }, r;
                        };
                    }, {
                        "./errors.js": 11,
                        "./util.js": 40
                    } ],
                    26: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n) {
                            function r(e) {
                                return e.__isPromisified__ === !0;
                            }
                            function i(e, r, i) {
                                function o(t) {
                                    for (var n = new Array(t), i = 0, o = n.length; o > i; ++i) n[i] = "a" + (i + 1);
                                    var a = t > 0 ? "," : "";
                                    return "string" == typeof e && r === c ? "this['" + e + "'](" + n.join(",") + a + " fn);break;" : (void 0 === r ? "callback(" + n.join(",") + a + " fn);" : "callback.call(" + (r === c ? "this" : "receiver") + ", " + n.join(",") + a + " fn);") + "break;";
                                }
                                function a() {
                                    return "var args = new Array(len + 1);var i = 0;for (var i = 0; i < len; ++i) {    args[i] = arguments[i];}args[i] = fn;";
                                }
                                var s = "string" == typeof i ? i + "Async" : "promisified";
                                return new Function("Promise", "callback", "receiver", "withAppended", "maybeWrapAsError", "nodebackForPromise", "INTERNAL", "var ret = function " + s + '(a1, a2, a3, a4, a5) {"use strict";var len = arguments.length;var promise = new Promise(INTERNAL);promise._setTrace(' + s + ", void 0);var fn = nodebackForPromise(promise);try{switch(len) {case 1:" + o(1) + "case 2:" + o(2) + "case 3:" + o(3) + "case 0:" + o(0) + "case 4:" + o(4) + "case 5:" + o(5) + "default: " + a() + ("string" == typeof e ? "this['" + e + "'].apply(" : "callback.apply(") + (r === c ? "this" : "receiver") + ", args); break;}}catch(e){ var wrapped = maybeWrapAsError(e);promise._attachExtraTrace(wrapped);promise._reject(wrapped);}return promise;}; ret.__isPromisified__ = true; return ret;")(t, e, r, f, p, h, n);
                            }
                            function o(e, r) {
                                function i() {
                                    var o = r;
                                    r === c && (o = this), "string" == typeof e && (e = o[e]);
                                    var a = new t(n);
                                    a._setTrace(i, void 0);
                                    var s = h(a);
                                    try {
                                        e.apply(o, f(arguments, s));
                                    } catch (l) {
                                        var u = p(l);
                                        a._attachExtraTrace(u), a._reject(u);
                                    }
                                    return a;
                                }
                                return i.__isPromisified__ = !0, i;
                            }
                            function a() {}
                            function s(e, t, n) {
                                if (n) {
                                    for (var r = y(e), i = 0, o = r.length; o > i; i += 2) {
                                        var s = r[i], l = r[i + 1], u = s + "__beforePromisified__", h = s + "Async";
                                        m(e, u, l), e[h] = T(u, c, s);
                                    }
                                    return r.length > 16 && (a.prototype = e), e;
                                }
                                return T(e, t, void 0);
                            }
                            var c = {}, l = e("./util.js"), u = e("./es5.js"), h = e("./promise_resolver.js")._nodebackForPromise, f = l.withAppended, p = l.maybeWrapAsError, d = l.canEvaluate, m = l.notEnumerableProp, E = l.deprecated, v = (e("./assert.js"), 
                            new RegExp("__beforePromisified__$")), g = {}.hasOwnProperty, y = function() {
                                if (u.isES5) {
                                    var e = Object.create, t = Object.getOwnPropertyDescriptor;
                                    return function(n) {
                                        for (var i = n, o = [], a = e(null); null !== n; ) {
                                            for (var s = u.keys(n), c = 0, l = s.length; l > c; ++c) {
                                                var h = s[c];
                                                if (!(a[h] || v.test(h) || g.call(i, h + "__beforePromisified__"))) {
                                                    a[h] = !0;
                                                    var f = t(n, h);
                                                    null == f || "function" != typeof f.value || r(f.value) || o.push(h, f.value);
                                                }
                                            }
                                            n = u.getPrototypeOf(n);
                                        }
                                        return o;
                                    };
                                }
                                return function(e) {
                                    var t = [];
                                    for (var n in e) if (!v.test(n) && !g.call(e, n + "__beforePromisified__")) {
                                        var i = e[n];
                                        "function" != typeof i || r(i) || t.push(n, i);
                                    }
                                    return t;
                                };
                            }(), T = d ? i : o;
                            t.promisify = function(e, t) {
                                if ("object" == typeof e && null !== e) return E("Promise.promisify for promisifying entire objects is deprecated. Use Promise.promisifyAll instead."), 
                                s(e, t, !0);
                                if ("function" != typeof e) throw new TypeError("fn must be a function");
                                return r(e) ? e : s(e, arguments.length < 2 ? c : t, !1);
                            }, t.promisifyAll = function(e) {
                                if ("function" != typeof e && "object" != typeof e) throw new TypeError("the target of promisifyAll must be an object or a function");
                                return s(e, void 0, !0);
                            };
                        };
                    }, {
                        "./assert.js": 3,
                        "./es5.js": 13,
                        "./promise_resolver.js": 24,
                        "./util.js": 40
                    } ],
                    27: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n) {
                            function r(e, t, n) {
                                for (var r = a.keys(e), i = new Array(r.length), o = 0, s = i.length; s > o; ++o) i[o] = e[r[o]];
                                if (this.constructor$(i, t, n), !this._isResolved()) for (var o = 0, s = r.length; s > o; ++o) i.push(r[o]);
                            }
                            var i = (e("./assert.js"), e("./util.js")), o = i.inherits, a = e("./es5.js");
                            return o(r, n), r.prototype._init = function() {
                                this._init$(void 0, -3);
                            }, r.prototype._promiseFulfilled = function(e, t) {
                                if (!this._isResolved()) {
                                    this._values[t] = e;
                                    var n = ++this._totalResolved;
                                    if (n >= this._length) {
                                        for (var r = {}, i = this.length(), o = 0, a = this.length(); a > o; ++o) r[this._values[o + i]] = this._values[o];
                                        this._resolve(r);
                                    }
                                }
                            }, r.prototype._promiseProgressed = function(e, t) {
                                this._isResolved() || this._promise._progress({
                                    key: this._values[t + this.length()],
                                    value: e
                                });
                            }, n.PropertiesPromiseArray = r, r;
                        };
                    }, {
                        "./assert.js": 3,
                        "./es5.js": 13,
                        "./util.js": 40
                    } ],
                    28: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n) {
                            function r(e, n, r) {
                                var o, c = t._cast(e, r, void 0);
                                return s(c) ? (t.is(c) ? o = c._then(t.props, void 0, void 0, void 0, void 0, r) : (o = new i(c, r, n === !0 && c._isBound() ? c._boundTo : void 0).promise(), 
                                n = !1), n === !0 && c._isBound() && o._setBoundTo(c._boundTo), o) : a("cannot await properties of a non-object");
                            }
                            var i = e("./properties_promise_array.js")(t, n), o = e("./util.js"), a = e("./errors_api_rejection")(t), s = o.isObject;
                            t.prototype.props = function() {
                                return r(this, !0, this.props);
                            }, t.props = function(e) {
                                return r(e, !1, t.props);
                            };
                        };
                    }, {
                        "./errors_api_rejection": 12,
                        "./properties_promise_array.js": 27,
                        "./util.js": 40
                    } ],
                    29: [ function(e, t) {
                        "use strict";
                        function n(e, t, n, r, i) {
                            for (var o = 0; i > o; ++o) n[o + r] = e[o + t];
                        }
                        function r(e) {
                            return e >>>= 0, e -= 1, e |= e >> 1, e |= e >> 2, e |= e >> 4, e |= e >> 8, e |= e >> 16, 
                            e + 1;
                        }
                        function i(e) {
                            return "number" != typeof e ? 16 : r(Math.min(Math.max(16, e), 1073741824));
                        }
                        function o(e) {
                            this._capacity = i(e), this._length = 0, this._front = 0, this._makeCapacity();
                        }
                        e("./assert.js"), o.prototype._willBeOverCapacity = function(e) {
                            return this._capacity < e;
                        }, o.prototype._pushOne = function(e) {
                            var t = this.length();
                            this._checkCapacity(t + 1);
                            var n = this._front + t & this._capacity - 1;
                            this[n] = e, this._length = t + 1;
                        }, o.prototype.push = function(e, t, n) {
                            var r = this.length() + 3;
                            if (this._willBeOverCapacity(r)) return this._pushOne(e), this._pushOne(t), void this._pushOne(n);
                            var i = this._front + r - 3;
                            this._checkCapacity(r);
                            var o = this._capacity - 1;
                            this[i + 0 & o] = e, this[i + 1 & o] = t, this[i + 2 & o] = n, this._length = r;
                        }, o.prototype.shift = function() {
                            var e = this._front, t = this[e];
                            return this[e] = void 0, this._front = e + 1 & this._capacity - 1, this._length--, 
                            t;
                        }, o.prototype.length = function() {
                            return this._length;
                        }, o.prototype._makeCapacity = function() {
                            for (var e = this._capacity, t = 0; e > t; ++t) this[t] = void 0;
                        }, o.prototype._checkCapacity = function(e) {
                            this._capacity < e && this._resizeTo(this._capacity << 3);
                        }, o.prototype._resizeTo = function(e) {
                            var t = this._front, r = this._capacity, i = new Array(r), o = this.length();
                            if (n(this, 0, i, 0, r), this._capacity = e, this._makeCapacity(), this._front = 0, 
                            r >= t + o) n(i, t, this, 0, o); else {
                                var a = o - (t + o & r - 1);
                                n(i, t, this, 0, a), n(i, 0, this, a, o - a);
                            }
                        }, t.exports = o;
                    }, {
                        "./assert.js": 3
                    } ],
                    30: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n) {
                            function r(e, r, c) {
                                var l = t._cast(e, r, void 0);
                                if (t.is(l)) return a(l);
                                if (!o(e)) return i("expecting an array, a promise or a thenable");
                                var u = new t(n);
                                u._setTrace(r, c), void 0 !== c && (c._isBound() && u._setBoundTo(c._boundTo), c._cancellable() && (u._setCancellable(), 
                                u._cancellationParent = c));
                                for (var h = u._fulfill, f = u._reject, p = 0, d = e.length; d > p; ++p) {
                                    var m = e[p];
                                    (void 0 !== m || s.call(e, p)) && t.cast(m)._then(h, f, void 0, u, null, r);
                                }
                                return u;
                            }
                            var i = e("./errors_api_rejection.js")(t), o = e("./util.js").isArray, a = function(e) {
                                return e.then(function t(n) {
                                    return r(n, t, e);
                                });
                            }, s = {}.hasOwnProperty;
                            t.race = function(e) {
                                return r(e, t.race, void 0);
                            }, t.prototype.race = function() {
                                return r(this, this.race, void 0);
                            };
                        };
                    }, {
                        "./errors_api_rejection.js": 12,
                        "./util.js": 40
                    } ],
                    31: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n, r, i) {
                            function o(e, t) {
                                var n = this, r = void 0;
                                "function" != typeof n && (r = n.receiver, n = n.fn);
                                var i = e.length, o = void 0, a = 0;
                                if (void 0 !== t) o = t, a = 0; else if (a = 1, i > 0) for (var s = 0; i > s; ++s) if (void 0 !== e[s] || s in e) {
                                    o = e[s], a = s + 1;
                                    break;
                                }
                                if (void 0 === r) for (var s = a; i > s; ++s) (void 0 !== e[s] || s in e) && (o = n(o, e[s], s, i)); else for (var s = a; i > s; ++s) (void 0 !== e[s] || s in e) && (o = n.call(r, o, e[s], s, i));
                                return o;
                            }
                            function a(e) {
                                var t = this.fn, n = this.initialValue;
                                return o.call(t, e, n);
                            }
                            function s(e, t, n, r, i) {
                                return n._then(function o(n) {
                                    return c(e, t, n, r, o);
                                }, void 0, void 0, void 0, void 0, i);
                            }
                            function c(e, c, l, u, h) {
                                if ("function" != typeof c) return i("fn must be a function");
                                if (u === !0 && e._isBound() && (c = {
                                    fn: c,
                                    receiver: e._boundTo
                                }), void 0 !== l) {
                                    if (t.is(l)) {
                                        if (!l.isFulfilled()) return s(e, c, l, u, h);
                                        l = l._settledValue;
                                    }
                                    return n(e, r, h, u === !0 && e._isBound() ? e._boundTo : void 0).promise()._then(a, void 0, void 0, {
                                        fn: c,
                                        initialValue: l
                                    }, void 0, t.reduce);
                                }
                                return n(e, r, h, u === !0 && e._isBound() ? e._boundTo : void 0).promise()._then(o, void 0, void 0, c, void 0, h);
                            }
                            e("./assert.js"), t.reduce = function(e, n, r) {
                                return c(e, n, r, !1, t.reduce);
                            }, t.prototype.reduce = function(e, t) {
                                return c(this, e, t, !0, this.reduce);
                            };
                        };
                    }, {
                        "./assert.js": 3
                    } ],
                    32: [ function(e, t) {
                        var n, r = e("__browserify_process"), i = e("./global.js");
                        if (e("./assert.js"), "undefined" != typeof r && null !== r && "function" == typeof r.cwd && "function" == typeof r.nextTick) n = r.nextTick; else if ("function" != typeof MutationObserver && "function" != typeof WebkitMutationObserver && "function" != typeof WebKitMutationObserver || "undefined" == typeof document || "function" != typeof document.createElement) if ("function" == typeof i.postMessage && "function" != typeof i.importScripts && "function" == typeof i.addEventListener && "function" == typeof i.removeEventListener) {
                            var o = "bluebird_message_key_" + Math.random();
                            n = function() {
                                function e(e) {
                                    if (e.source === i && e.data === o) {
                                        var n = t;
                                        t = void 0, n();
                                    }
                                }
                                var t = void 0;
                                return i.addEventListener("message", e, !1), function(e) {
                                    t = e, i.postMessage(o, "*");
                                };
                            }();
                        } else n = "function" == typeof MessageChannel ? function() {
                            var e = void 0, t = new MessageChannel();
                            return t.port1.onmessage = function() {
                                var t = e;
                                e = void 0, t();
                            }, function(n) {
                                e = n, t.port2.postMessage(null);
                            };
                        }() : i.setTimeout ? function(e) {
                            setTimeout(e, 4);
                        } : function(e) {
                            e();
                        }; else n = function() {
                            var e = i.MutationObserver || i.WebkitMutationObserver || i.WebKitMutationObserver, t = document.createElement("div"), n = void 0, r = new e(function() {
                                var e = n;
                                n = void 0, e();
                            });
                            return r.observe(t, {
                                attributes: !0
                            }), function(e) {
                                n = e, t.setAttribute("class", "foo");
                            };
                        }();
                        t.exports = n;
                    }, {
                        "./assert.js": 3,
                        "./global.js": 17,
                        __browserify_process: 76
                    } ],
                    33: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n, r) {
                            function i(e, t, r) {
                                return n(e, o, r, t === !0 && e._isBound() ? e._boundTo : void 0).promise();
                            }
                            var o = e("./settled_promise_array.js")(t, r);
                            t.settle = function(e) {
                                return i(e, !1, t.settle);
                            }, t.prototype.settle = function() {
                                return i(this, !0, this.settle);
                            };
                        };
                    }, {
                        "./settled_promise_array.js": 34
                    } ],
                    34: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n) {
                            function r(e, t, n) {
                                this.constructor$(e, t, n);
                            }
                            var i = (e("./assert.js"), e("./promise_inspection.js")), o = e("./util.js"), a = o.inherits;
                            return a(r, n), r.prototype._promiseResolved = function(e, t) {
                                this._values[e] = t;
                                var n = ++this._totalResolved;
                                n >= this._length && this._resolve(this._values);
                            }, r.prototype._promiseFulfilled = function(e, t) {
                                if (!this._isResolved()) {
                                    var n = new i();
                                    n._bitField = 268435456, n._settledValue = e, this._promiseResolved(t, n);
                                }
                            }, r.prototype._promiseRejected = function(e, t) {
                                if (!this._isResolved()) {
                                    var n = new i();
                                    n._bitField = 134217728, n._settledValue = e, this._promiseResolved(t, n);
                                }
                            }, r;
                        };
                    }, {
                        "./assert.js": 3,
                        "./promise_inspection.js": 23,
                        "./util.js": 40
                    } ],
                    35: [ function(e, t) {
                        "use strict";
                        t.exports = function(t, n, r, i) {
                            function o(e, t, r, o) {
                                if ((0 | t) !== t || 0 > t) return i("expecting a positive integer");
                                var s = n(e, a, o, r === !0 && e._isBound() ? e._boundTo : void 0), c = s.promise();
                                return c.isRejected() ? c : (s.setHowMany(t), s.init(), c);
                            }
                            var a = e("./some_promise_array.js")(r);
                            e("./assert.js"), t.some = function(e, n) {
                                return o(e, n, !1, t.some);
                            }, t.prototype.some = function(e) {
                                return o(this, e, !0, this.some);
                            };
                        };
                    }, {
                        "./assert.js": 3,
                        "./some_promise_array.js": 36
                    } ],
                    36: [ function(e, t) {
                        "use strict";
                        t.exports = function(t) {
                            function n(e, t, n) {
                                this.constructor$(e, t, n), this._howMany = 0, this._unwrap = !1, this._initialized = !1;
                            }
                            var r = e("./util.js"), i = e("./errors.js").RangeError, o = r.inherits, a = r.isArray;
                            return o(n, t), n.prototype._init = function() {
                                if (this._initialized) {
                                    if (0 === this._howMany) return void this._resolve([]);
                                    this._init$(void 0, -2);
                                    var e = a(this._values);
                                    if (this._holes = e ? this._values.length - this.length() : 0, !this._isResolved() && e && this._howMany > this._canPossiblyFulfill()) {
                                        var t = "(Promise.some) input array contains less than " + this._howMany + " promises";
                                        this._reject(new i(t));
                                    }
                                }
                            }, n.prototype.init = function() {
                                this._initialized = !0, this._init();
                            }, n.prototype.setUnwrap = function() {
                                this._unwrap = !0;
                            }, n.prototype.howMany = function() {
                                return this._howMany;
                            }, n.prototype.setHowMany = function(e) {
                                this._isResolved() || (this._howMany = e);
                            }, n.prototype._promiseFulfilled = function(e) {
                                this._isResolved() || (this._addFulfilled(e), this._fulfilled() === this.howMany() && (this._values.length = this.howMany(), 
                                this._resolve(1 === this.howMany() && this._unwrap ? this._values[0] : this._values)));
                            }, n.prototype._promiseRejected = function(e) {
                                this._isResolved() || (this._addRejected(e), this.howMany() > this._canPossiblyFulfill() && this._reject(this._values.length === this.length() ? [] : this._values.slice(this.length() + this._holes)));
                            }, n.prototype._fulfilled = function() {
                                return this._totalResolved;
                            }, n.prototype._rejected = function() {
                                return this._values.length - this.length() - this._holes;
                            }, n.prototype._addRejected = function(e) {
                                this._values.push(e);
                            }, n.prototype._addFulfilled = function(e) {
                                this._values[this._totalResolved++] = e;
                            }, n.prototype._canPossiblyFulfill = function() {
                                return this.length() - this._rejected();
                            }, n;
                        };
                    }, {
                        "./errors.js": 11,
                        "./util.js": 40
                    } ],
                    37: [ function(e, t) {
                        "use strict";
                        t.exports = function(t) {
                            var n = e("./promise_inspection.js");
                            t.prototype.inspect = function() {
                                return new n(this);
                            };
                        };
                    }, {
                        "./promise_inspection.js": 23
                    } ],
                    38: [ function(e, t) {
                        "use strict";
                        t.exports = function(t) {
                            function n(e) {
                                try {
                                    return e.then;
                                } catch (t) {
                                    return s.e = t, s;
                                }
                            }
                            function r(e, o, a) {
                                if (c(e)) {
                                    if (e instanceof t) return e;
                                    var l = n(e);
                                    if (l === s) return o = "function" == typeof o ? o : r, void 0 !== a && a._attachExtraTrace(l.e), 
                                    t.reject(l.e, o);
                                    if ("function" == typeof l) return o = "function" == typeof o ? o : r, i(e, l, o, a);
                                }
                                return e;
                            }
                            function i(e, n, r, i) {
                                function a(n) {
                                    if (!h) {
                                        if (h = !0, e === n) {
                                            var r = t._makeSelfResolutionError();
                                            return void 0 !== i && i._attachExtraTrace(r), void u.reject(r);
                                        }
                                        u.resolve(n);
                                    }
                                }
                                function c(e) {
                                    h || (h = !0, o.markAsOriginatingFromRejection(e), void 0 !== i && i._attachExtraTrace(e), 
                                    u.reject(e));
                                }
                                var u = t.defer(r), h = !1, f = l(n, e, a, c);
                                return f !== s || h || (h = !0, void 0 !== i && i._attachExtraTrace(f.e), u.promise._reject(f.e)), 
                                u.promise;
                            }
                            var o = (e("./assert.js"), e("./errors.js")), a = e("./util.js"), s = a.errorObj, c = a.isObject, l = a.tryCatch2;
                            t._cast = r;
                        };
                    }, {
                        "./assert.js": 3,
                        "./errors.js": 11,
                        "./util.js": 40
                    } ],
                    39: [ function(e, t) {
                        "use strict";
                        var n = e("./global.js"), r = function(e, t) {
                            for (var r = arguments.length, i = new Array(r - 2), o = 2; r > o; ++o) i[o - 2] = arguments[o];
                            n.setTimeout(function() {
                                e.apply(void 0, i);
                            }, t);
                        }, i = {};
                        n.setTimeout(function(e) {
                            e === i && (r = n.setTimeout);
                        }, 1, i), t.exports = function(t, n) {
                            var i = (e("./util.js"), e("./assert.js"), e("./errors.js")), o = e("./errors_api_rejection")(t), a = t.TimeoutError, s = function(e, t, n) {
                                if (e.isPending()) {
                                    "string" != typeof t && (t = "operation timed out after " + n + " ms");
                                    var r = new a(t);
                                    i.markAsOriginatingFromRejection(r), e._attachExtraTrace(r), e._rejectUnchecked(r);
                                }
                            }, c = function(e, t) {
                                t._fulfill(e);
                            };
                            t.delay = function(e, i, a) {
                                if (void 0 === i && (i = e, e = void 0), (0 | i) !== i || 0 > i) return o("expecting a positive integer");
                                "function" != typeof a && (a = t.delay);
                                var s = t._cast(e, a, void 0), l = new t(n);
                                return t.is(s) ? (s._isBound() && l._setBoundTo(s._boundTo), s._cancellable() && (l._setCancellable(), 
                                l._cancellationParent = s), l._setTrace(a, s), l._follow(s), l.then(function(e) {
                                    return t.delay(e, i);
                                })) : (l._setTrace(a, void 0), r(c, i, e, l), l);
                            }, t.prototype.delay = function(e) {
                                return t.delay(this, e, this.delay);
                            }, t.prototype.timeout = function(e, i) {
                                if ((0 | e) !== e || 0 > e) return o("expecting a positive integer");
                                var a = new t(n);
                                return a._setTrace(this.timeout, this), this._isBound() && a._setBoundTo(this._boundTo), 
                                this._cancellable() && (a._setCancellable(), a._cancellationParent = this), a._follow(this), 
                                r(s, e, a, i, e), a;
                            };
                        };
                    }, {
                        "./assert.js": 3,
                        "./errors.js": 11,
                        "./errors_api_rejection": 12,
                        "./global.js": 17,
                        "./util.js": 40
                    } ],
                    40: [ function(e, t) {
                        "use strict";
                        function n(e) {
                            "undefined" != typeof console && null !== console && "function" == typeof console.warn && console.warn("Bluebird: " + e);
                        }
                        function r(e, t, n) {
                            try {
                                return e.call(t, n);
                            } catch (r) {
                                return g.e = r, g;
                            }
                        }
                        function i(e, t, n, r) {
                            try {
                                return e.call(t, n, r);
                            } catch (i) {
                                return g.e = i, g;
                            }
                        }
                        function o(e, t, n) {
                            try {
                                return e.apply(n, t);
                            } catch (r) {
                                return g.e = r, g;
                            }
                        }
                        function a(e) {
                            return "string" == typeof e ? e : "" + e;
                        }
                        function s(e) {
                            return null == e || e === !0 || e === !1 || "string" == typeof e || "number" == typeof e;
                        }
                        function c(e) {
                            return !s(e);
                        }
                        function l(e) {
                            return s(e) ? new Error(a(e)) : e;
                        }
                        function u(e, t) {
                            var n, r = e.length, i = new Array(r + 1);
                            for (n = 0; r > n; ++n) i[n] = e[n];
                            return i[n] = t, i;
                        }
                        function h(e, t, n) {
                            var r = {
                                value: n,
                                configurable: !0,
                                enumerable: !1,
                                writable: !0
                            };
                            return d.defineProperty(e, t, r), e;
                        }
                        function f(e) {
                            throw e;
                        }
                        var p = e("./global.js"), d = (e("./assert.js"), e("./es5.js")), m = function() {
                            try {
                                var e = {};
                                return d.defineProperty(e, "f", {
                                    get: function() {
                                        return 3;
                                    }
                                }), 3 === e.f;
                            } catch (t) {
                                return !1;
                            }
                        }(), E = function(e, t, n) {
                            try {
                                return h(e, t, n), e;
                            } catch (r) {
                                for (var i = {}, o = d.keys(e), a = 0, s = o.length; s > a; ++a) try {
                                    var c = o[a];
                                    i[c] = e[c];
                                } catch (l) {
                                    i[c] = l;
                                }
                                return h(i, t, n), i;
                            }
                        }, v = function() {
                            return "undefined" != typeof window && null !== window && "undefined" != typeof window.document && "undefined" != typeof navigator && null !== navigator && "string" == typeof navigator.appName && window === p ? !1 : !0;
                        }(), g = {
                            e: {}
                        }, y = function(e, t) {
                            function n() {
                                this.constructor = e, this.constructor$ = t;
                                for (var n in t.prototype) r.call(t.prototype, n) && "$" !== n.charAt(n.length - 1) && (this[n + "$"] = t.prototype[n]);
                            }
                            var r = {}.hasOwnProperty;
                            return n.prototype = t.prototype, e.prototype = new n(), e.prototype;
                        }, T = function() {
                            return "string" !== this;
                        }.call("string"), x = {
                            thrower: f,
                            isArray: d.isArray,
                            haveGetters: m,
                            notEnumerableProp: h,
                            isPrimitive: s,
                            isObject: c,
                            ensurePropertyExpansion: E,
                            canEvaluate: v,
                            deprecated: n,
                            errorObj: g,
                            tryCatch1: r,
                            tryCatch2: i,
                            tryCatchApply: o,
                            inherits: y,
                            withAppended: u,
                            asString: a,
                            maybeWrapAsError: l,
                            wrapsPrimitiveReceiver: T
                        };
                        t.exports = x;
                    }, {
                        "./assert.js": 3,
                        "./es5.js": 13,
                        "./global.js": 17
                    } ],
                    41: [ function(e, t) {
                        function n(e, t) {
                            function n() {
                                4 === f.readyState && i();
                            }
                            function i() {
                                var e = null, n = f.statusCode = f.status, r = f.body = f.response || f.responseText || f.responseXML;
                                if (0 === n) {
                                    var i = f.responseText || c[String(f.status).charAt(0)];
                                    e = new Error(i), e.statusCode = f.status;
                                }
                                t(e, f, r);
                            }
                            function h(e) {
                                t(e, f);
                            }
                            "string" == typeof e && (e = {
                                uri: e
                            }), e = e || {}, t = o(t);
                            var f;
                            f = e.cors ? new u() : new l();
                            var p = f.url = e.uri, d = f.method = e.method || "GET", m = e.body || e.data, E = f.headers = e.headers || {}, v = !!e.sync;
                            return f.onreadystatechange = n, f.onload = i, f.onerror = h, f.onprogress = function() {}, 
                            f.ontimeout = r, f.open(d, p, !v), e.cors && (f.withCredentials = !0), v || (f.timeout = "timeout" in e ? e.timeout : 5e3), 
                            f.setRequestHeader && s(a(E), function(e) {
                                f.setRequestHeader(e, E[e]);
                            }), f.send(m), f;
                        }
                        function r() {}
                        var i = e("global/window"), o = e("once"), a = e("lodash.keys"), s = e("lodash.foreach"), c = {
                            0: "Internal XMLHttpRequest Error"
                        }, l = i.XMLHttpRequest || r, u = "withCredentials" in new l() ? i.XMLHttpRequest : i.XDomainRequest;
                        t.exports = n;
                    }, {
                        "global/window": 42,
                        "lodash.foreach": 43,
                        "lodash.keys": 69,
                        once: 75
                    } ],
                    42: [ function(e, t) {
                        var n = "undefined" != typeof self ? self : "undefined" != typeof window ? window : {};
                        t.exports = "undefined" != typeof window ? window : "undefined" != typeof n ? n : {};
                    }, {} ],
                    43: [ function(e, t) {
                        function n(e, t, n) {
                            var o = -1, a = e ? e.length : 0;
                            if (t = t && "undefined" == typeof n ? t : r(t, n, 3), "number" == typeof a) for (;++o < a && t(e[o], o, e) !== !1; ) ; else i(e, t);
                            return e;
                        }
                        var r = e("lodash._basecreatecallback"), i = e("lodash.forown");
                        t.exports = n;
                    }, {
                        "lodash._basecreatecallback": 44,
                        "lodash.forown": 67
                    } ],
                    44: [ function(e, t) {
                        function n(e, t, n) {
                            if ("function" != typeof e) return i;
                            if ("undefined" == typeof t || !("prototype" in e)) return e;
                            var u = e.__bindData__;
                            if ("undefined" == typeof u && (a.funcNames && (u = !e.name), u = u || !a.funcDecomp, 
                            !u)) {
                                var h = l.call(e);
                                a.funcNames || (u = !s.test(h)), u || (u = c.test(h), o(e, u));
                            }
                            if (u === !1 || u !== !0 && 1 & u[1]) return e;
                            switch (n) {
                              case 1:
                                return function(n) {
                                    return e.call(t, n);
                                };

                              case 2:
                                return function(n, r) {
                                    return e.call(t, n, r);
                                };

                              case 3:
                                return function(n, r, i) {
                                    return e.call(t, n, r, i);
                                };

                              case 4:
                                return function(n, r, i, o) {
                                    return e.call(t, n, r, i, o);
                                };
                            }
                            return r(e, t);
                        }
                        var r = e("lodash.bind"), i = e("lodash.identity"), o = e("lodash._setbinddata"), a = e("lodash.support"), s = /^\s*function[ \n\r\t]+\w/, c = /\bthis\b/, l = Function.prototype.toString;
                        t.exports = n;
                    }, {
                        "lodash._setbinddata": 45,
                        "lodash.bind": 48,
                        "lodash.identity": 64,
                        "lodash.support": 65
                    } ],
                    45: [ function(e, t) {
                        var n = e("lodash._isnative"), r = e("lodash.noop"), i = {
                            configurable: !1,
                            enumerable: !1,
                            value: null,
                            writable: !1
                        }, o = function() {
                            try {
                                var e = {}, t = n(t = Object.defineProperty) && t, r = t(e, e, e) && t;
                            } catch (i) {}
                            return r;
                        }(), a = o ? function(e, t) {
                            i.value = t, o(e, "__bindData__", i);
                        } : r;
                        t.exports = a;
                    }, {
                        "lodash._isnative": 46,
                        "lodash.noop": 47
                    } ],
                    46: [ function(e, t) {
                        function n(e) {
                            return "function" == typeof e && o.test(e);
                        }
                        var r = Object.prototype, i = r.toString, o = RegExp("^" + String(i).replace(/[.*+?^${}()|[\]\\]/g, "\\$&").replace(/toString| for [^\]]+/g, ".*?") + "$");
                        t.exports = n;
                    }, {} ],
                    47: [ function(e, t) {
                        function n() {}
                        t.exports = n;
                    }, {} ],
                    48: [ function(e, t) {
                        function n(e, t) {
                            return arguments.length > 2 ? r(e, 17, i(arguments, 2), null, t) : r(e, 1, null, null, t);
                        }
                        var r = e("lodash._createwrapper"), i = e("lodash._slice");
                        t.exports = n;
                    }, {
                        "lodash._createwrapper": 49,
                        "lodash._slice": 63
                    } ],
                    49: [ function(e, t) {
                        function n(e, t, s, u, h, f) {
                            var p = 1 & t, d = 2 & t, m = 4 & t, E = 16 & t, v = 32 & t;
                            if (!d && !o(e)) throw new TypeError();
                            E && !s.length && (t &= -17, E = s = !1), v && !u.length && (t &= -33, v = u = !1);
                            var g = e && e.__bindData__;
                            if (g && g !== !0) return g = a(g), g[2] && (g[2] = a(g[2])), g[3] && (g[3] = a(g[3])), 
                            !p || 1 & g[1] || (g[4] = h), !p && 1 & g[1] && (t |= 8), !m || 4 & g[1] || (g[5] = f), 
                            E && c.apply(g[2] || (g[2] = []), s), v && l.apply(g[3] || (g[3] = []), u), g[1] |= t, 
                            n.apply(null, g);
                            var y = 1 == t || 17 === t ? r : i;
                            return y([ e, t, s, u, h, f ]);
                        }
                        var r = e("lodash._basebind"), i = e("lodash._basecreatewrapper"), o = e("lodash.isfunction"), a = e("lodash._slice"), s = [], c = s.push, l = s.unshift;
                        t.exports = n;
                    }, {
                        "lodash._basebind": 50,
                        "lodash._basecreatewrapper": 56,
                        "lodash._slice": 63,
                        "lodash.isfunction": 62
                    } ],
                    50: [ function(e, t) {
                        function n(e) {
                            function t() {
                                if (s) {
                                    var e = a(s);
                                    c.apply(e, arguments);
                                }
                                if (this instanceof t) {
                                    var o = r(n.prototype), u = n.apply(o, e || arguments);
                                    return i(u) ? u : o;
                                }
                                return n.apply(l, e || arguments);
                            }
                            var n = e[0], s = e[2], l = e[4];
                            return o(t, e), t;
                        }
                        var r = e("lodash._basecreate"), i = e("lodash.isobject"), o = e("lodash._setbinddata"), a = e("lodash._slice"), s = [], c = s.push;
                        t.exports = n;
                    }, {
                        "lodash._basecreate": 51,
                        "lodash._setbinddata": 45,
                        "lodash._slice": 63,
                        "lodash.isobject": 54
                    } ],
                    51: [ function(e, t) {
                        function n(e) {
                            return o(e) ? a(e) : {};
                        }
                        var r = "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, i = e("lodash._isnative"), o = e("lodash.isobject"), a = (e("lodash.noop"), 
                        i(a = Object.create) && a);
                        a || (n = function() {
                            function e() {}
                            return function(t) {
                                if (o(t)) {
                                    e.prototype = t;
                                    var n = new e();
                                    e.prototype = null;
                                }
                                return n || r.Object();
                            };
                        }()), t.exports = n;
                    }, {
                        "lodash._isnative": 52,
                        "lodash.isobject": 54,
                        "lodash.noop": 53
                    } ],
                    52: [ function(e, t) {
                        t.exports = e(46);
                    }, {} ],
                    53: [ function(e, t) {
                        t.exports = e(47);
                    }, {} ],
                    54: [ function(e, t) {
                        function n(e) {
                            return !(!e || !r[typeof e]);
                        }
                        var r = e("lodash._objecttypes");
                        t.exports = n;
                    }, {
                        "lodash._objecttypes": 55
                    } ],
                    55: [ function(e, t) {
                        var n = {
                            "boolean": !1,
                            "function": !0,
                            object: !0,
                            number: !1,
                            string: !1,
                            undefined: !1
                        };
                        t.exports = n;
                    }, {} ],
                    56: [ function(e, t) {
                        function n(e) {
                            function t() {
                                var e = d ? f : this;
                                if (u) {
                                    var o = a(u);
                                    c.apply(o, arguments);
                                }
                                if ((h || E) && (o || (o = a(arguments)), h && c.apply(o, h), E && o.length < p)) return l |= 16, 
                                n([ s, v ? l : -4 & l, o, null, f, p ]);
                                if (o || (o = arguments), m && (s = e[g]), this instanceof t) {
                                    e = r(s.prototype);
                                    var y = s.apply(e, o);
                                    return i(y) ? y : e;
                                }
                                return s.apply(e, o);
                            }
                            var s = e[0], l = e[1], u = e[2], h = e[3], f = e[4], p = e[5], d = 1 & l, m = 2 & l, E = 4 & l, v = 8 & l, g = s;
                            return o(t, e), t;
                        }
                        var r = e("lodash._basecreate"), i = e("lodash.isobject"), o = e("lodash._setbinddata"), a = e("lodash._slice"), s = [], c = s.push;
                        t.exports = n;
                    }, {
                        "lodash._basecreate": 57,
                        "lodash._setbinddata": 45,
                        "lodash._slice": 63,
                        "lodash.isobject": 60
                    } ],
                    57: [ function(e, t, n) {
                        arguments[4][51][0].apply(n, arguments);
                    }, {
                        "lodash._isnative": 58,
                        "lodash.isobject": 60,
                        "lodash.noop": 59
                    } ],
                    58: [ function(e, t) {
                        t.exports = e(46);
                    }, {} ],
                    59: [ function(e, t) {
                        t.exports = e(47);
                    }, {} ],
                    60: [ function(e, t) {
                        t.exports = e(54);
                    }, {
                        "lodash._objecttypes": 61
                    } ],
                    61: [ function(e, t) {
                        t.exports = e(55);
                    }, {} ],
                    62: [ function(e, t) {
                        function n(e) {
                            return "function" == typeof e;
                        }
                        t.exports = n;
                    }, {} ],
                    63: [ function(e, t) {
                        function n(e, t, n) {
                            t || (t = 0), "undefined" == typeof n && (n = e ? e.length : 0);
                            for (var r = -1, i = n - t || 0, o = Array(0 > i ? 0 : i); ++r < i; ) o[r] = e[t + r];
                            return o;
                        }
                        t.exports = n;
                    }, {} ],
                    64: [ function(e, t) {
                        function n(e) {
                            return e;
                        }
                        t.exports = n;
                    }, {} ],
                    65: [ function(e, t) {
                        var n = "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, r = e("lodash._isnative"), i = /\bthis\b/, o = {};
                        o.funcDecomp = !r(n.WinRTError) && i.test(function() {
                            return this;
                        }), o.funcNames = "string" == typeof Function.name, t.exports = o;
                    }, {
                        "lodash._isnative": 66
                    } ],
                    66: [ function(e, t) {
                        t.exports = e(46);
                    }, {} ],
                    67: [ function(e, t) {
                        var n = e("lodash._basecreatecallback"), r = e("lodash.keys"), i = e("lodash._objecttypes"), o = function(e, t, o) {
                            var a, s = e, c = s;
                            if (!s) return c;
                            if (!i[typeof s]) return c;
                            t = t && "undefined" == typeof o ? t : n(t, o, 3);
                            for (var l = -1, u = i[typeof s] && r(s), h = u ? u.length : 0; ++l < h; ) if (a = u[l], 
                            t(s[a], a, e) === !1) return c;
                            return c;
                        };
                        t.exports = o;
                    }, {
                        "lodash._basecreatecallback": 44,
                        "lodash._objecttypes": 68,
                        "lodash.keys": 69
                    } ],
                    68: [ function(e, t) {
                        t.exports = e(55);
                    }, {} ],
                    69: [ function(e, t) {
                        var n = e("lodash._isnative"), r = e("lodash.isobject"), i = e("lodash._shimkeys"), o = n(o = Object.keys) && o, a = o ? function(e) {
                            return r(e) ? o(e) : [];
                        } : i;
                        t.exports = a;
                    }, {
                        "lodash._isnative": 70,
                        "lodash._shimkeys": 71,
                        "lodash.isobject": 73
                    } ],
                    70: [ function(e, t) {
                        t.exports = e(46);
                    }, {} ],
                    71: [ function(e, t) {
                        var n = e("lodash._objecttypes"), r = Object.prototype, i = r.hasOwnProperty, o = function(e) {
                            var t, r = e, o = [];
                            if (!r) return o;
                            if (!n[typeof e]) return o;
                            for (t in r) i.call(r, t) && o.push(t);
                            return o;
                        };
                        t.exports = o;
                    }, {
                        "lodash._objecttypes": 72
                    } ],
                    72: [ function(e, t) {
                        t.exports = e(55);
                    }, {} ],
                    73: [ function(e, t) {
                        t.exports = e(54);
                    }, {
                        "lodash._objecttypes": 74
                    } ],
                    74: [ function(e, t) {
                        t.exports = e(55);
                    }, {} ],
                    75: [ function(e, t) {
                        function n(e) {
                            var t = !1;
                            return function() {
                                return t ? void 0 : (t = !0, e.apply(this, arguments));
                            };
                        }
                        t.exports = n, n.proto = n(function() {
                            Object.defineProperty(Function.prototype, "once", {
                                value: function() {
                                    return n(this);
                                },
                                configurable: !0
                            });
                        });
                    }, {} ],
                    76: [ function(e, t) {
                        var n = t.exports = {};
                        n.nextTick = function() {
                            var e = "undefined" != typeof window && window.setImmediate, t = "undefined" != typeof window && window.postMessage && window.addEventListener;
                            if (e) return function(e) {
                                return window.setImmediate(e);
                            };
                            if (t) {
                                var n = [];
                                return window.addEventListener("message", function(e) {
                                    var t = e.source;
                                    if ((t === window || null === t) && "process-tick" === e.data && (e.stopPropagation(), 
                                    n.length > 0)) {
                                        var r = n.shift();
                                        r();
                                    }
                                }, !0), function(e) {
                                    n.push(e), window.postMessage("process-tick", "*");
                                };
                            }
                            return function(e) {
                                setTimeout(e, 0);
                            };
                        }(), n.title = "browser", n.browser = !0, n.env = {}, n.argv = [], n.binding = function() {
                            throw new Error("process.binding is not supported");
                        }, n.cwd = function() {
                            return "/";
                        }, n.chdir = function() {
                            throw new Error("process.chdir is not supported");
                        };
                    }, {} ]
                }, {}, [ 1 ])(1);
            });
        }, {} ],
        20: [ function(e, t) {
            "use strict";
            function n(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t);
            }
            t.exports = function(e, t, i, o) {
                t = t || "&", i = i || "=";
                var a = {};
                if ("string" != typeof e || 0 === e.length) return a;
                var s = /\+/g;
                e = e.split(t);
                var c = 1e3;
                o && "number" == typeof o.maxKeys && (c = o.maxKeys);
                var l = e.length;
                c > 0 && l > c && (l = c);
                for (var u = 0; l > u; ++u) {
                    var h, f, p, d, m = e[u].replace(s, "%20"), E = m.indexOf(i);
                    E >= 0 ? (h = m.substr(0, E), f = m.substr(E + 1)) : (h = m, f = ""), p = decodeURIComponent(h), 
                    d = decodeURIComponent(f), n(a, p) ? r(a[p]) ? a[p].push(d) : a[p] = [ a[p], d ] : a[p] = d;
                }
                return a;
            };
            var r = Array.isArray || function(e) {
                return "[object Array]" === Object.prototype.toString.call(e);
            };
        }, {} ],
        21: [ function(e, t) {
            "use strict";
            function n(e, t) {
                if (e.map) return e.map(t);
                for (var n = [], r = 0; r < e.length; r++) n.push(t(e[r], r));
                return n;
            }
            var r = function(e) {
                switch (typeof e) {
                  case "string":
                    return e;

                  case "boolean":
                    return e ? "true" : "false";

                  case "number":
                    return isFinite(e) ? e : "";

                  default:
                    return "";
                }
            };
            t.exports = function(e, t, a, s) {
                return t = t || "&", a = a || "=", null === e && (e = void 0), "object" == typeof e ? n(o(e), function(n) {
                    var o = encodeURIComponent(r(n)) + a;
                    return i(e[n]) ? e[n].map(function(e) {
                        return o + encodeURIComponent(r(e));
                    }).join(t) : o + encodeURIComponent(r(e[n]));
                }).join(t) : s ? encodeURIComponent(r(s)) + a + encodeURIComponent(r(e)) : "";
            };
            var i = Array.isArray || function(e) {
                return "[object Array]" === Object.prototype.toString.call(e);
            }, o = Object.keys || function(e) {
                var t = [];
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && t.push(n);
                return t;
            };
        }, {} ],
        22: [ function(e, t, n) {
            "use strict";
            n.decode = n.parse = e("./decode"), n.encode = n.stringify = e("./encode");
        }, {
            "./decode": 20,
            "./encode": 21
        } ]
    }, {}, [ 1 ])(1);
});

"use strict";

(function() {
    var e = angular.module("ng-contentful", []);
    e.provider("contentfulClient", function t() {
        var e, t, n = true, r = {};
        this.setSpaceId = function(t) {
            e = t;
        };
        this.setAccessToken = function(e) {
            t = e;
        };
        this.setSSL = function(e) {
            n = !!e;
        };
        this.setOptions = function(e) {
            r = e;
        };
        this.$get = [ "$q", function(i) {
            var o = Object.create(r);
            o.space = e;
            o.accessToken = t;
            o.secure = n;
            var a = contentful.createClient(o);
            s(a, "asset assets contentType contentTypes entry entries space".split(" "));
            return a;
            function s(e, t) {
                t.forEach(function(t) {
                    var n = e[t];
                    e[t] = function() {
                        var t = arguments;
                        return i.when(n.apply(e, t));
                    };
                });
            }
        } ];
    });
    e.factory("ContentTypeList", [ "$q", "contentfulClient", function(e, t) {
        var n = {};
        var r = {};
        return {
            lookupContentType: function(i) {
                if (n[i]) {
                    return e.when(n[i]);
                } else if (r[i]) {
                    return r[i];
                } else {
                    var o = t.contentType(i).then(function(e) {
                        n[i] = e;
                        return e;
                    });
                    r[i] = o;
                    return o;
                }
            },
            loadAllContentTypes: function() {
                t.contentTypes().then(function(e) {
                    e.forEach(function(e) {
                        n[e.sys.id] = e;
                    });
                });
            },
            getContentType: function(e) {
                return n[e];
            }
        };
    } ]);
    e.controller("EntryController", [ "$scope", "ContentTypeList", function(e, t) {
        e.entryTitle = function() {
            var t = r();
            if (t) {
                return e.entry.fields[t.displayField];
            }
        };
        e.contentType = function() {
            return r();
        };
        function n() {
            return t.lookupContentType(i());
        }
        function r() {
            var e = t.getContentType(i());
            if (e) {
                return e;
            } else {
                n();
            }
        }
        function i() {
            return e.entry.sys.contentType.sys.id;
        }
    } ]);
})();

var Showdown = {
    extensions: {}
}, forEach = Showdown.forEach = function(e, t) {
    if (typeof e.forEach == "function") e.forEach(t); else {
        var n, r = e.length;
        for (n = 0; n < r; n++) t(e[n], n, e);
    }
}, stdExtName = function(e) {
    return e.replace(/[_-]||\s/g, "").toLowerCase();
};

Showdown.converter = function(e) {
    var t, n, r, i = 0, o = [], a = [];
    if (typeof module != "undefind" && typeof exports != "undefined" && typeof require != "undefind") {
        var s = require("fs");
        if (s) {
            var c = s.readdirSync((__dirname || ".") + "/extensions").filter(function(e) {
                return ~e.indexOf(".js");
            }).map(function(e) {
                return e.replace(/\.js$/, "");
            });
            Showdown.forEach(c, function(e) {
                var t = stdExtName(e);
                Showdown.extensions[t] = require("./extensions/" + e);
            });
        }
    }
    e && e.extensions && Showdown.forEach(e.extensions, function(e) {
        typeof e == "string" && (e = Showdown.extensions[stdExtName(e)]);
        if (typeof e != "function") throw "Extension '" + e + "' could not be loaded.  It was either not found or is not a valid extension.";
        Showdown.forEach(e(this), function(e) {
            e.type ? e.type === "language" || e.type === "lang" ? o.push(e) : (e.type === "output" || e.type === "html") && a.push(e) : a.push(e);
        });
    }), this.makeHtml = function(e) {
        return t = {}, n = {}, r = [], e = e.replace(/~/g, "~T"), e = e.replace(/\$/g, "~D"), 
        e = e.replace(/\r\n/g, "\n"), e = e.replace(/\r/g, "\n"), e = "\n\n" + e + "\n\n", 
        e = V(e), e = e.replace(/^[ \t]+$/gm, ""), Showdown.forEach(o, function(t) {
            e = l(t, e);
        }), e = b(e), e = h(e), e = u(e), e = p(e), e = D(e), e = e.replace(/~D/g, "$$"), 
        e = e.replace(/~T/g, "~"), Showdown.forEach(a, function(t) {
            e = l(t, e);
        }), e;
    };
    var l = function(e, t) {
        if (e.regex) {
            var n = new RegExp(e.regex, "g");
            return t.replace(n, e.replace);
        }
        if (e.filter) return e.filter(t);
    }, u = function(e) {
        return e += "~0", e = e.replace(/^[ ]{0,3}\[(.+)\]:[ \t]*\n?[ \t]*<?(\S+?)>?[ \t]*\n?[ \t]*(?:(\n*)["(](.+?)[")][ \t]*)?(?:\n+|(?=~0))/gm, function(e, r, i, o, a) {
            return r = r.toLowerCase(), t[r] = P(i), o ? o + a : (a && (n[r] = a.replace(/"/g, "&quot;")), 
            "");
        }), e = e.replace(/~0/, ""), e;
    }, h = function(e) {
        e = e.replace(/\n/g, "\n\n");
        var t = "p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del|style|section|header|footer|nav|article|aside", n = "p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|style|section|header|footer|nav|article|aside";
        return e = e.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del)\b[^\r]*?\n<\/\2>[ \t]*(?=\n+))/gm, f), 
        e = e.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|style|section|header|footer|nav|article|aside)\b[^\r]*?<\/\2>[ \t]*(?=\n+)\n)/gm, f), 
        e = e.replace(/(\n[ ]{0,3}(<(hr)\b([^<>])*?\/?>)[ \t]*(?=\n{2,}))/g, f), e = e.replace(/(\n\n[ ]{0,3}<!(--[^\r]*?--\s*)+>[ \t]*(?=\n{2,}))/g, f), 
        e = e.replace(/(?:\n\n)([ ]{0,3}(?:<([?%])[^\r]*?\2>)[ \t]*(?=\n{2,}))/g, f), e = e.replace(/\n\n/g, "\n"), 
        e;
    }, f = function(e, t) {
        var n = t;
        return n = n.replace(/\n\n/g, "\n"), n = n.replace(/^\n/, ""), n = n.replace(/\n+$/g, ""), 
        n = "\n\n~K" + (r.push(n) - 1) + "K\n\n", n;
    }, p = function(e) {
        e = T(e);
        var t = w("<hr />");
        return e = e.replace(/^[ ]{0,2}([ ]?\*[ ]?){3,}[ \t]*$/gm, t), e = e.replace(/^[ ]{0,2}([ ]?\-[ ]?){3,}[ \t]*$/gm, t), 
        e = e.replace(/^[ ]{0,2}([ ]?\_[ ]?){3,}[ \t]*$/gm, t), e = R(e), e = _(e), e = C(e), 
        e = h(e), e = A(e), e;
    }, d = function(e) {
        return e = H(e), e = m(e), e = k(e), e = g(e), e = E(e), e = L(e), e = P(e), e = M(e), 
        e = e.replace(/  +\n/g, " <br />\n"), e;
    }, m = function(e) {
        var t = /(<[a-z\/!$]("[^"]*"|'[^']*'|[^'">])*>|<!(--.*?--\s*)+>)/gi;
        return e = e.replace(t, function(e) {
            var t = e.replace(/(.)<\/?code>(?=.)/g, "$1`");
            return t = O(t, "\\`*_"), t;
        }), e;
    }, E = function(e) {
        return e = e.replace(/(\[((?:\[[^\]]*\]|[^\[\]])*)\][ ]?(?:\n[ ]*)?\[(.*?)\])()()()()/g, v), 
        e = e.replace(/(\[((?:\[[^\]]*\]|[^\[\]])*)\]\([ \t]*()<?(.*?(?:\(.*?\).*?)?)>?[ \t]*((['"])(.*?)\6[ \t]*)?\))/g, v), 
        e = e.replace(/(\[([^\[\]]+)\])()()()()()/g, v), e;
    }, v = function(e, r, i, o, a, s, c, l) {
        l == undefined && (l = "");
        var u = r, h = i, f = o.toLowerCase(), p = a, d = l;
        if (p == "") {
            f == "" && (f = h.toLowerCase().replace(/ ?\n/g, " ")), p = "#" + f;
            if (t[f] != undefined) p = t[f], n[f] != undefined && (d = n[f]); else {
                if (!(u.search(/\(\s*\)$/m) > -1)) return u;
                p = "";
            }
        }
        p = O(p, "*_");
        var m = '<a href="' + p + '"';
        return d != "" && (d = d.replace(/"/g, "&quot;"), d = O(d, "*_"), m += ' title="' + d + '"'), 
        m += ">" + h + "</a>", m;
    }, g = function(e) {
        return e = e.replace(/(!\[(.*?)\][ ]?(?:\n[ ]*)?\[(.*?)\])()()()()/g, y), e = e.replace(/(!\[(.*?)\]\s?\([ \t]*()<?(\S+?)>?[ \t]*((['"])(.*?)\6[ \t]*)?\))/g, y), 
        e;
    }, y = function(e, r, i, o, a, s, c, l) {
        var u = r, h = i, f = o.toLowerCase(), p = a, d = l;
        d || (d = "");
        if (p == "") {
            f == "" && (f = h.toLowerCase().replace(/ ?\n/g, " ")), p = "#" + f;
            if (t[f] == undefined) return u;
            p = t[f], n[f] != undefined && (d = n[f]);
        }
        h = h.replace(/"/g, "&quot;"), p = O(p, "*_");
        var m = '<img src="' + p + '" alt="' + h + '"';
        return d = d.replace(/"/g, "&quot;"), d = O(d, "*_"), m += ' title="' + d + '"', 
        m += " />", m;
    }, T = function(e) {
        function t(e) {
            return e.replace(/[^\w]/g, "").toLowerCase();
        }
        return e = e.replace(/^(.+)[ \t]*\n=+[ \t]*\n+/gm, function(e, n) {
            return w('<h1 id="' + t(n) + '">' + d(n) + "</h1>");
        }), e = e.replace(/^(.+)[ \t]*\n-+[ \t]*\n+/gm, function(e, n) {
            return w('<h2 id="' + t(n) + '">' + d(n) + "</h2>");
        }), e = e.replace(/^(\#{1,6})[ \t]*(.+?)[ \t]*\#*\n+/gm, function(e, n, r) {
            var i = n.length;
            return w("<h" + i + ' id="' + t(r) + '">' + d(r) + "</h" + i + ">");
        }), e;
    }, x, R = function(e) {
        e += "~0";
        var t = /^(([ ]{0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(~0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/gm;
        return i ? e = e.replace(t, function(e, t, n) {
            var r = t, i = n.search(/[*+-]/g) > -1 ? "ul" : "ol";
            r = r.replace(/\n{2,}/g, "\n\n\n");
            var o = x(r);
            return o = o.replace(/\s+$/, ""), o = "<" + i + ">" + o + "</" + i + ">\n", o;
        }) : (t = /(\n\n|^\n?)(([ ]{0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(~0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/g, 
        e = e.replace(t, function(e, t, n, r) {
            var i = t, o = n, a = r.search(/[*+-]/g) > -1 ? "ul" : "ol", o = o.replace(/\n{2,}/g, "\n\n\n"), s = x(o);
            return s = i + "<" + a + ">\n" + s + "</" + a + ">\n", s;
        })), e = e.replace(/~0/, ""), e;
    };
    x = function(e) {
        return i++, e = e.replace(/\n{2,}$/, "\n"), e += "~0", e = e.replace(/(\n)?(^[ \t]*)([*+-]|\d+[.])[ \t]+([^\r]+?(\n{1,2}))(?=\n*(~0|\2([*+-]|\d+[.])[ \t]+))/gm, function(e, t, n, r, i) {
            var o = i, a = t, s = n;
            return a || o.search(/\n{2,}/) > -1 ? o = p(U(o)) : (o = R(U(o)), o = o.replace(/\n$/, ""), 
            o = d(o)), "<li>" + o + "</li>\n";
        }), e = e.replace(/~0/g, ""), i--, e;
    };
    var _ = function(e) {
        return e += "~0", e = e.replace(/(?:\n\n|^)((?:(?:[ ]{4}|\t).*\n+)+)(\n*[ ]{0,3}[^ \t\n]|(?=~0))/g, function(e, t, n) {
            var r = t, i = n;
            return r = S(U(r)), r = V(r), r = r.replace(/^\n+/g, ""), r = r.replace(/\n+$/g, ""), 
            r = "<pre><code>" + r + "\n</code></pre>", w(r) + i;
        }), e = e.replace(/~0/, ""), e;
    }, b = function(e) {
        return e += "~0", e = e.replace(/(?:^|\n)```(.*)\n([\s\S]*?)\n```/g, function(e, t, n) {
            var r = t, i = n;
            return i = S(i), i = V(i), i = i.replace(/^\n+/g, ""), i = i.replace(/\n+$/g, ""), 
            i = "<pre><code" + (r ? ' class="' + r + '"' : "") + ">" + i + "\n</code></pre>", 
            w(i);
        }), e = e.replace(/~0/, ""), e;
    }, w = function(e) {
        return e = e.replace(/(^\n+|\n+$)/g, ""), "\n\n~K" + (r.push(e) - 1) + "K\n\n";
    }, H = function(e) {
        return e = e.replace(/(^|[^\\])(`+)([^\r]*?[^`])\2(?!`)/gm, function(e, t, n, r, i) {
            var o = r;
            return o = o.replace(/^([ \t]*)/g, ""), o = o.replace(/[ \t]*$/g, ""), o = S(o), 
            t + "<code>" + o + "</code>";
        }), e;
    }, S = function(e) {
        return e = e.replace(/&/g, "&amp;"), e = e.replace(/</g, "&lt;"), e = e.replace(/>/g, "&gt;"), 
        e = O(e, "*_{}[]\\", !1), e;
    }, M = function(e) {
        return e = e.replace(/(\*\*|__)(?=\S)([^\r]*?\S[*_]*)\1/g, "<strong>$2</strong>"), 
        e = e.replace(/(\*|_)(?=\S)([^\r]*?\S)\1/g, "<em>$2</em>"), e;
    }, C = function(e) {
        return e = e.replace(/((^[ \t]*>[ \t]?.+\n(.+\n)*\n*)+)/gm, function(e, t) {
            var n = t;
            return n = n.replace(/^[ \t]*>[ \t]?/gm, "~0"), n = n.replace(/~0/g, ""), n = n.replace(/^[ \t]+$/gm, ""), 
            n = p(n), n = n.replace(/(^|\n)/g, "$1  "), n = n.replace(/(\s*<pre>[^\r]+?<\/pre>)/gm, function(e, t) {
                var n = t;
                return n = n.replace(/^  /gm, "~0"), n = n.replace(/~0/g, ""), n;
            }), w("<blockquote>\n" + n + "\n</blockquote>");
        }), e;
    }, A = function(e) {
        e = e.replace(/^\n+/g, ""), e = e.replace(/\n+$/g, "");
        var t = e.split(/\n{2,}/g), n = [], i = t.length;
        for (var o = 0; o < i; o++) {
            var a = t[o];
            a.search(/~K(\d+)K/g) >= 0 ? n.push(a) : a.search(/\S/) >= 0 && (a = d(a), a = a.replace(/^([ \t]*)/g, "<p>"), 
            a += "</p>", n.push(a));
        }
        i = n.length;
        for (var o = 0; o < i; o++) while (n[o].search(/~K(\d+)K/) >= 0) {
            var s = r[RegExp.$1];
            s = s.replace(/\$/g, "$$$$"), n[o] = n[o].replace(/~K\d+K/, s);
        }
        return n.join("\n\n");
    }, P = function(e) {
        return e = e.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\w+);)/g, "&amp;"), e = e.replace(/<(?![a-z\/?\$!])/gi, "&lt;"), 
        e;
    }, k = function(e) {
        return e = e.replace(/\\(\\)/g, z), e = e.replace(/\\([`*_{}\[\]()>#+-.!])/g, z), 
        e;
    }, L = function(e) {
        return e = e.replace(/<((https?|ftp|dict):[^'">\s]+)>/gi, '<a href="$1">$1</a>'), 
        e = e.replace(/<(?:mailto:)?([-.\w]+\@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)>/gi, function(e, t) {
            return F(D(t));
        }), e;
    }, F = function(e) {
        var t = [ function(e) {
            return "&#" + e.charCodeAt(0) + ";";
        }, function(e) {
            return "&#x" + e.charCodeAt(0).toString(16) + ";";
        }, function(e) {
            return e;
        } ];
        return e = "mailto:" + e, e = e.replace(/./g, function(e) {
            if (e == "@") e = t[Math.floor(Math.random() * 2)](e); else if (e != ":") {
                var n = Math.random();
                e = n > .9 ? t[2](e) : n > .45 ? t[1](e) : t[0](e);
            }
            return e;
        }), e = '<a href="' + e + '">' + e + "</a>", e = e.replace(/">.+:/g, '">'), e;
    }, D = function(e) {
        return e = e.replace(/~E(\d+)E/g, function(e, t) {
            var n = parseInt(t);
            return String.fromCharCode(n);
        }), e;
    }, U = function(e) {
        return e = e.replace(/^(\t|[ ]{1,4})/gm, "~0"), e = e.replace(/~0/g, ""), e;
    }, V = function(e) {
        return e = e.replace(/\t(?=\t)/g, "    "), e = e.replace(/\t/g, "~A~B"), e = e.replace(/~B(.+?)~A/g, function(e, t, n) {
            var r = t, i = 4 - r.length % 4;
            for (var o = 0; o < i; o++) r += " ";
            return r;
        }), e = e.replace(/~A/g, "    "), e = e.replace(/~B/g, ""), e;
    }, O = function(e, t, n) {
        var r = "([" + t.replace(/([\[\]\\])/g, "\\$1") + "])";
        n && (r = "\\\\" + r);
        var i = new RegExp(r, "g");
        return e = e.replace(i, z), e;
    }, z = function(e, t) {
        var n = t.charCodeAt(0);
        return "~E" + n + "E";
    };
}, typeof module != "undefined" && (module.exports = Showdown), typeof define == "function" && define.amd && define("showdown", function() {
    return Showdown;
});

"use strict";

var THREE = {
    REVISION: "68"
};

"object" === typeof module && (module.exports = THREE);

THREE.CullFaceNone = 0;

THREE.CullFaceBack = 1;

THREE.CullFaceFront = 2;

THREE.CullFaceFrontBack = 3;

THREE.FrontFaceDirectionCW = 0;

THREE.FrontFaceDirectionCCW = 1;

THREE.BasicShadowMap = 0;

THREE.PCFShadowMap = 1;

THREE.PCFSoftShadowMap = 2;

THREE.FrontSide = 0;

THREE.BackSide = 1;

THREE.DoubleSide = 2;

THREE.NoShading = 0;

THREE.FlatShading = 1;

THREE.SmoothShading = 2;

THREE.NoColors = 0;

THREE.FaceColors = 1;

THREE.VertexColors = 2;

THREE.NoBlending = 0;

THREE.NormalBlending = 1;

THREE.AdditiveBlending = 2;

THREE.SubtractiveBlending = 3;

THREE.MultiplyBlending = 4;

THREE.CustomBlending = 5;

THREE.AddEquation = 100;

THREE.SubtractEquation = 101;

THREE.ReverseSubtractEquation = 102;

THREE.ZeroFactor = 200;

THREE.OneFactor = 201;

THREE.SrcColorFactor = 202;

THREE.OneMinusSrcColorFactor = 203;

THREE.SrcAlphaFactor = 204;

THREE.OneMinusSrcAlphaFactor = 205;

THREE.DstAlphaFactor = 206;

THREE.OneMinusDstAlphaFactor = 207;

THREE.DstColorFactor = 208;

THREE.OneMinusDstColorFactor = 209;

THREE.SrcAlphaSaturateFactor = 210;

THREE.MultiplyOperation = 0;

THREE.MixOperation = 1;

THREE.AddOperation = 2;

THREE.UVMapping = function() {};

THREE.CubeReflectionMapping = function() {};

THREE.CubeRefractionMapping = function() {};

THREE.SphericalReflectionMapping = function() {};

THREE.SphericalRefractionMapping = function() {};

THREE.RepeatWrapping = 1e3;

THREE.ClampToEdgeWrapping = 1001;

THREE.MirroredRepeatWrapping = 1002;

THREE.NearestFilter = 1003;

THREE.NearestMipMapNearestFilter = 1004;

THREE.NearestMipMapLinearFilter = 1005;

THREE.LinearFilter = 1006;

THREE.LinearMipMapNearestFilter = 1007;

THREE.LinearMipMapLinearFilter = 1008;

THREE.UnsignedByteType = 1009;

THREE.ByteType = 1010;

THREE.ShortType = 1011;

THREE.UnsignedShortType = 1012;

THREE.IntType = 1013;

THREE.UnsignedIntType = 1014;

THREE.FloatType = 1015;

THREE.UnsignedShort4444Type = 1016;

THREE.UnsignedShort5551Type = 1017;

THREE.UnsignedShort565Type = 1018;

THREE.AlphaFormat = 1019;

THREE.RGBFormat = 1020;

THREE.RGBAFormat = 1021;

THREE.LuminanceFormat = 1022;

THREE.LuminanceAlphaFormat = 1023;

THREE.RGB_S3TC_DXT1_Format = 2001;

THREE.RGBA_S3TC_DXT1_Format = 2002;

THREE.RGBA_S3TC_DXT3_Format = 2003;

THREE.RGBA_S3TC_DXT5_Format = 2004;

THREE.Color = function(e) {
    return 3 === arguments.length ? this.setRGB(arguments[0], arguments[1], arguments[2]) : this.set(e);
};

THREE.Color.prototype = {
    constructor: THREE.Color,
    r: 1,
    g: 1,
    b: 1,
    set: function(e) {
        e instanceof THREE.Color ? this.copy(e) : "number" === typeof e ? this.setHex(e) : "string" === typeof e && this.setStyle(e);
        return this;
    },
    setHex: function(e) {
        e = Math.floor(e);
        this.r = (e >> 16 & 255) / 255;
        this.g = (e >> 8 & 255) / 255;
        this.b = (e & 255) / 255;
        return this;
    },
    setRGB: function(e, t, n) {
        this.r = e;
        this.g = t;
        this.b = n;
        return this;
    },
    setHSL: function(e, t, n) {
        if (0 === t) this.r = this.g = this.b = n; else {
            var r = function(e, t, n) {
                0 > n && (n += 1);
                1 < n && (n -= 1);
                return n < 1 / 6 ? e + 6 * (t - e) * n : .5 > n ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e;
            };
            t = .5 >= n ? n * (1 + t) : n + t - n * t;
            n = 2 * n - t;
            this.r = r(n, t, e + 1 / 3);
            this.g = r(n, t, e);
            this.b = r(n, t, e - 1 / 3);
        }
        return this;
    },
    setStyle: function(e) {
        if (/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)) return e = /^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e), 
        this.r = Math.min(255, parseInt(e[1], 10)) / 255, this.g = Math.min(255, parseInt(e[2], 10)) / 255, 
        this.b = Math.min(255, parseInt(e[3], 10)) / 255, this;
        if (/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)) return e = /^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e), 
        this.r = Math.min(100, parseInt(e[1], 10)) / 100, this.g = Math.min(100, parseInt(e[2], 10)) / 100, 
        this.b = Math.min(100, parseInt(e[3], 10)) / 100, this;
        if (/^\#([0-9a-f]{6})$/i.test(e)) return e = /^\#([0-9a-f]{6})$/i.exec(e), this.setHex(parseInt(e[1], 16)), 
        this;
        if (/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)) return e = /^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e), 
        this.setHex(parseInt(e[1] + e[1] + e[2] + e[2] + e[3] + e[3], 16)), this;
        if (/^(\w+)$/i.test(e)) return this.setHex(THREE.ColorKeywords[e]), this;
    },
    copy: function(e) {
        this.r = e.r;
        this.g = e.g;
        this.b = e.b;
        return this;
    },
    copyGammaToLinear: function(e) {
        this.r = e.r * e.r;
        this.g = e.g * e.g;
        this.b = e.b * e.b;
        return this;
    },
    copyLinearToGamma: function(e) {
        this.r = Math.sqrt(e.r);
        this.g = Math.sqrt(e.g);
        this.b = Math.sqrt(e.b);
        return this;
    },
    convertGammaToLinear: function() {
        var e = this.r, t = this.g, n = this.b;
        this.r = e * e;
        this.g = t * t;
        this.b = n * n;
        return this;
    },
    convertLinearToGamma: function() {
        this.r = Math.sqrt(this.r);
        this.g = Math.sqrt(this.g);
        this.b = Math.sqrt(this.b);
        return this;
    },
    getHex: function() {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;
    },
    getHexString: function() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
    },
    getHSL: function(e) {
        e = e || {
            h: 0,
            s: 0,
            l: 0
        };
        var t = this.r, n = this.g, r = this.b, i = Math.max(t, n, r), o = Math.min(t, n, r), a, s = (o + i) / 2;
        if (o === i) o = a = 0; else {
            var c = i - o, o = .5 >= s ? c / (i + o) : c / (2 - i - o);
            switch (i) {
              case t:
                a = (n - r) / c + (n < r ? 6 : 0);
                break;

              case n:
                a = (r - t) / c + 2;
                break;

              case r:
                a = (t - n) / c + 4;
            }
            a /= 6;
        }
        e.h = a;
        e.s = o;
        e.l = s;
        return e;
    },
    getStyle: function() {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")";
    },
    offsetHSL: function(e, t, n) {
        var r = this.getHSL();
        r.h += e;
        r.s += t;
        r.l += n;
        this.setHSL(r.h, r.s, r.l);
        return this;
    },
    add: function(e) {
        this.r += e.r;
        this.g += e.g;
        this.b += e.b;
        return this;
    },
    addColors: function(e, t) {
        this.r = e.r + t.r;
        this.g = e.g + t.g;
        this.b = e.b + t.b;
        return this;
    },
    addScalar: function(e) {
        this.r += e;
        this.g += e;
        this.b += e;
        return this;
    },
    multiply: function(e) {
        this.r *= e.r;
        this.g *= e.g;
        this.b *= e.b;
        return this;
    },
    multiplyScalar: function(e) {
        this.r *= e;
        this.g *= e;
        this.b *= e;
        return this;
    },
    lerp: function(e, t) {
        this.r += (e.r - this.r) * t;
        this.g += (e.g - this.g) * t;
        this.b += (e.b - this.b) * t;
        return this;
    },
    equals: function(e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
    },
    fromArray: function(e) {
        this.r = e[0];
        this.g = e[1];
        this.b = e[2];
        return this;
    },
    toArray: function() {
        return [ this.r, this.g, this.b ];
    },
    clone: function() {
        return new THREE.Color().setRGB(this.r, this.g, this.b);
    }
};

THREE.ColorKeywords = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
};

THREE.Quaternion = function(e, t, n, r) {
    this._x = e || 0;
    this._y = t || 0;
    this._z = n || 0;
    this._w = void 0 !== r ? r : 1;
};

THREE.Quaternion.prototype = {
    constructor: THREE.Quaternion,
    _x: 0,
    _y: 0,
    _z: 0,
    _w: 0,
    get x() {
        return this._x;
    },
    set x(e) {
        this._x = e;
        this.onChangeCallback();
    },
    get y() {
        return this._y;
    },
    set y(e) {
        this._y = e;
        this.onChangeCallback();
    },
    get z() {
        return this._z;
    },
    set z(e) {
        this._z = e;
        this.onChangeCallback();
    },
    get w() {
        return this._w;
    },
    set w(e) {
        this._w = e;
        this.onChangeCallback();
    },
    set: function(e, t, n, r) {
        this._x = e;
        this._y = t;
        this._z = n;
        this._w = r;
        this.onChangeCallback();
        return this;
    },
    copy: function(e) {
        this._x = e.x;
        this._y = e.y;
        this._z = e.z;
        this._w = e.w;
        this.onChangeCallback();
        return this;
    },
    setFromEuler: function(e, t) {
        if (!1 === e instanceof THREE.Euler) throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var n = Math.cos(e._x / 2), r = Math.cos(e._y / 2), i = Math.cos(e._z / 2), o = Math.sin(e._x / 2), a = Math.sin(e._y / 2), s = Math.sin(e._z / 2);
        "XYZ" === e.order ? (this._x = o * r * i + n * a * s, this._y = n * a * i - o * r * s, 
        this._z = n * r * s + o * a * i, this._w = n * r * i - o * a * s) : "YXZ" === e.order ? (this._x = o * r * i + n * a * s, 
        this._y = n * a * i - o * r * s, this._z = n * r * s - o * a * i, this._w = n * r * i + o * a * s) : "ZXY" === e.order ? (this._x = o * r * i - n * a * s, 
        this._y = n * a * i + o * r * s, this._z = n * r * s + o * a * i, this._w = n * r * i - o * a * s) : "ZYX" === e.order ? (this._x = o * r * i - n * a * s, 
        this._y = n * a * i + o * r * s, this._z = n * r * s - o * a * i, this._w = n * r * i + o * a * s) : "YZX" === e.order ? (this._x = o * r * i + n * a * s, 
        this._y = n * a * i + o * r * s, this._z = n * r * s - o * a * i, this._w = n * r * i - o * a * s) : "XZY" === e.order && (this._x = o * r * i - n * a * s, 
        this._y = n * a * i - o * r * s, this._z = n * r * s + o * a * i, this._w = n * r * i + o * a * s);
        if (!1 !== t) this.onChangeCallback();
        return this;
    },
    setFromAxisAngle: function(e, t) {
        var n = t / 2, r = Math.sin(n);
        this._x = e.x * r;
        this._y = e.y * r;
        this._z = e.z * r;
        this._w = Math.cos(n);
        this.onChangeCallback();
        return this;
    },
    setFromRotationMatrix: function(e) {
        var t = e.elements, n = t[0];
        e = t[4];
        var r = t[8], i = t[1], o = t[5], a = t[9], s = t[2], c = t[6], t = t[10], l = n + o + t;
        0 < l ? (n = .5 / Math.sqrt(l + 1), this._w = .25 / n, this._x = (c - a) * n, this._y = (r - s) * n, 
        this._z = (i - e) * n) : n > o && n > t ? (n = 2 * Math.sqrt(1 + n - o - t), this._w = (c - a) / n, 
        this._x = .25 * n, this._y = (e + i) / n, this._z = (r + s) / n) : o > t ? (n = 2 * Math.sqrt(1 + o - n - t), 
        this._w = (r - s) / n, this._x = (e + i) / n, this._y = .25 * n, this._z = (a + c) / n) : (n = 2 * Math.sqrt(1 + t - n - o), 
        this._w = (i - e) / n, this._x = (r + s) / n, this._y = (a + c) / n, this._z = .25 * n);
        this.onChangeCallback();
        return this;
    },
    setFromUnitVectors: function() {
        var e, t;
        return function(n, r) {
            void 0 === e && (e = new THREE.Vector3());
            t = n.dot(r) + 1;
            1e-6 > t ? (t = 0, Math.abs(n.x) > Math.abs(n.z) ? e.set(-n.y, n.x, 0) : e.set(0, -n.z, n.y)) : e.crossVectors(n, r);
            this._x = e.x;
            this._y = e.y;
            this._z = e.z;
            this._w = t;
            this.normalize();
            return this;
        };
    }(),
    inverse: function() {
        this.conjugate().normalize();
        return this;
    },
    conjugate: function() {
        this._x *= -1;
        this._y *= -1;
        this._z *= -1;
        this.onChangeCallback();
        return this;
    },
    dot: function(e) {
        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
    },
    lengthSq: function() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
    },
    length: function() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
    },
    normalize: function() {
        var e = this.length();
        0 === e ? (this._z = this._y = this._x = 0, this._w = 1) : (e = 1 / e, this._x *= e, 
        this._y *= e, this._z *= e, this._w *= e);
        this.onChangeCallback();
        return this;
    },
    multiply: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), 
        this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e);
    },
    multiplyQuaternions: function(e, t) {
        var n = e._x, r = e._y, i = e._z, o = e._w, a = t._x, s = t._y, c = t._z, l = t._w;
        this._x = n * l + o * a + r * c - i * s;
        this._y = r * l + o * s + i * a - n * c;
        this._z = i * l + o * c + n * s - r * a;
        this._w = o * l - n * a - r * s - i * c;
        this.onChangeCallback();
        return this;
    },
    multiplyVector3: function(e) {
        console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
        return e.applyQuaternion(this);
    },
    slerp: function(e, t) {
        var n = this._x, r = this._y, i = this._z, o = this._w, a = o * e._w + n * e._x + r * e._y + i * e._z;
        0 > a ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e);
        if (1 <= a) return this._w = o, this._x = n, this._y = r, this._z = i, this;
        var s = Math.acos(a), c = Math.sqrt(1 - a * a);
        if (.001 > Math.abs(c)) return this._w = .5 * (o + this._w), this._x = .5 * (n + this._x), 
        this._y = .5 * (r + this._y), this._z = .5 * (i + this._z), this;
        a = Math.sin((1 - t) * s) / c;
        s = Math.sin(t * s) / c;
        this._w = o * a + this._w * s;
        this._x = n * a + this._x * s;
        this._y = r * a + this._y * s;
        this._z = i * a + this._z * s;
        this.onChangeCallback();
        return this;
    },
    equals: function(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
    },
    fromArray: function(e) {
        this._x = e[0];
        this._y = e[1];
        this._z = e[2];
        this._w = e[3];
        this.onChangeCallback();
        return this;
    },
    toArray: function() {
        return [ this._x, this._y, this._z, this._w ];
    },
    onChange: function(e) {
        this.onChangeCallback = e;
        return this;
    },
    onChangeCallback: function() {},
    clone: function() {
        return new THREE.Quaternion(this._x, this._y, this._z, this._w);
    }
};

THREE.Quaternion.slerp = function(e, t, n, r) {
    return n.copy(e).slerp(t, r);
};

THREE.Vector2 = function(e, t) {
    this.x = e || 0;
    this.y = t || 0;
};

THREE.Vector2.prototype = {
    constructor: THREE.Vector2,
    set: function(e, t) {
        this.x = e;
        this.y = t;
        return this;
    },
    setX: function(e) {
        this.x = e;
        return this;
    },
    setY: function(e) {
        this.y = e;
        return this;
    },
    setComponent: function(e, t) {
        switch (e) {
          case 0:
            this.x = t;
            break;

          case 1:
            this.y = t;
            break;

          default:
            throw Error("index is out of range: " + e);
        }
    },
    getComponent: function(e) {
        switch (e) {
          case 0:
            return this.x;

          case 1:
            return this.y;

          default:
            throw Error("index is out of range: " + e);
        }
    },
    copy: function(e) {
        this.x = e.x;
        this.y = e.y;
        return this;
    },
    add: function(e, t) {
        if (void 0 !== t) return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), 
        this.addVectors(e, t);
        this.x += e.x;
        this.y += e.y;
        return this;
    },
    addVectors: function(e, t) {
        this.x = e.x + t.x;
        this.y = e.y + t.y;
        return this;
    },
    addScalar: function(e) {
        this.x += e;
        this.y += e;
        return this;
    },
    sub: function(e, t) {
        if (void 0 !== t) return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), 
        this.subVectors(e, t);
        this.x -= e.x;
        this.y -= e.y;
        return this;
    },
    subVectors: function(e, t) {
        this.x = e.x - t.x;
        this.y = e.y - t.y;
        return this;
    },
    multiply: function(e) {
        this.x *= e.x;
        this.y *= e.y;
        return this;
    },
    multiplyScalar: function(e) {
        this.x *= e;
        this.y *= e;
        return this;
    },
    divide: function(e) {
        this.x /= e.x;
        this.y /= e.y;
        return this;
    },
    divideScalar: function(e) {
        0 !== e ? (e = 1 / e, this.x *= e, this.y *= e) : this.y = this.x = 0;
        return this;
    },
    min: function(e) {
        this.x > e.x && (this.x = e.x);
        this.y > e.y && (this.y = e.y);
        return this;
    },
    max: function(e) {
        this.x < e.x && (this.x = e.x);
        this.y < e.y && (this.y = e.y);
        return this;
    },
    clamp: function(e, t) {
        this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x);
        this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y);
        return this;
    },
    clampScalar: function() {
        var e, t;
        return function(n, r) {
            void 0 === e && (e = new THREE.Vector2(), t = new THREE.Vector2());
            e.set(n, n);
            t.set(r, r);
            return this.clamp(e, t);
        };
    }(),
    floor: function() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        return this;
    },
    ceil: function() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        return this;
    },
    round: function() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        return this;
    },
    roundToZero: function() {
        this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x);
        this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y);
        return this;
    },
    negate: function() {
        this.x = -this.x;
        this.y = -this.y;
        return this;
    },
    dot: function(e) {
        return this.x * e.x + this.y * e.y;
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y;
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    },
    normalize: function() {
        return this.divideScalar(this.length());
    },
    distanceTo: function(e) {
        return Math.sqrt(this.distanceToSquared(e));
    },
    distanceToSquared: function(e) {
        var t = this.x - e.x;
        e = this.y - e.y;
        return t * t + e * e;
    },
    setLength: function(e) {
        var t = this.length();
        0 !== t && e !== t && this.multiplyScalar(e / t);
        return this;
    },
    lerp: function(e, t) {
        this.x += (e.x - this.x) * t;
        this.y += (e.y - this.y) * t;
        return this;
    },
    equals: function(e) {
        return e.x === this.x && e.y === this.y;
    },
    fromArray: function(e) {
        this.x = e[0];
        this.y = e[1];
        return this;
    },
    toArray: function() {
        return [ this.x, this.y ];
    },
    clone: function() {
        return new THREE.Vector2(this.x, this.y);
    }
};

THREE.Vector3 = function(e, t, n) {
    this.x = e || 0;
    this.y = t || 0;
    this.z = n || 0;
};

THREE.Vector3.prototype = {
    constructor: THREE.Vector3,
    set: function(e, t, n) {
        this.x = e;
        this.y = t;
        this.z = n;
        return this;
    },
    setX: function(e) {
        this.x = e;
        return this;
    },
    setY: function(e) {
        this.y = e;
        return this;
    },
    setZ: function(e) {
        this.z = e;
        return this;
    },
    setComponent: function(e, t) {
        switch (e) {
          case 0:
            this.x = t;
            break;

          case 1:
            this.y = t;
            break;

          case 2:
            this.z = t;
            break;

          default:
            throw Error("index is out of range: " + e);
        }
    },
    getComponent: function(e) {
        switch (e) {
          case 0:
            return this.x;

          case 1:
            return this.y;

          case 2:
            return this.z;

          default:
            throw Error("index is out of range: " + e);
        }
    },
    copy: function(e) {
        this.x = e.x;
        this.y = e.y;
        this.z = e.z;
        return this;
    },
    add: function(e, t) {
        if (void 0 !== t) return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), 
        this.addVectors(e, t);
        this.x += e.x;
        this.y += e.y;
        this.z += e.z;
        return this;
    },
    addScalar: function(e) {
        this.x += e;
        this.y += e;
        this.z += e;
        return this;
    },
    addVectors: function(e, t) {
        this.x = e.x + t.x;
        this.y = e.y + t.y;
        this.z = e.z + t.z;
        return this;
    },
    sub: function(e, t) {
        if (void 0 !== t) return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), 
        this.subVectors(e, t);
        this.x -= e.x;
        this.y -= e.y;
        this.z -= e.z;
        return this;
    },
    subVectors: function(e, t) {
        this.x = e.x - t.x;
        this.y = e.y - t.y;
        this.z = e.z - t.z;
        return this;
    },
    multiply: function(e, t) {
        if (void 0 !== t) return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), 
        this.multiplyVectors(e, t);
        this.x *= e.x;
        this.y *= e.y;
        this.z *= e.z;
        return this;
    },
    multiplyScalar: function(e) {
        this.x *= e;
        this.y *= e;
        this.z *= e;
        return this;
    },
    multiplyVectors: function(e, t) {
        this.x = e.x * t.x;
        this.y = e.y * t.y;
        this.z = e.z * t.z;
        return this;
    },
    applyEuler: function() {
        var e;
        return function(t) {
            !1 === t instanceof THREE.Euler && console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.");
            void 0 === e && (e = new THREE.Quaternion());
            this.applyQuaternion(e.setFromEuler(t));
            return this;
        };
    }(),
    applyAxisAngle: function() {
        var e;
        return function(t, n) {
            void 0 === e && (e = new THREE.Quaternion());
            this.applyQuaternion(e.setFromAxisAngle(t, n));
            return this;
        };
    }(),
    applyMatrix3: function(e) {
        var t = this.x, n = this.y, r = this.z;
        e = e.elements;
        this.x = e[0] * t + e[3] * n + e[6] * r;
        this.y = e[1] * t + e[4] * n + e[7] * r;
        this.z = e[2] * t + e[5] * n + e[8] * r;
        return this;
    },
    applyMatrix4: function(e) {
        var t = this.x, n = this.y, r = this.z;
        e = e.elements;
        this.x = e[0] * t + e[4] * n + e[8] * r + e[12];
        this.y = e[1] * t + e[5] * n + e[9] * r + e[13];
        this.z = e[2] * t + e[6] * n + e[10] * r + e[14];
        return this;
    },
    applyProjection: function(e) {
        var t = this.x, n = this.y, r = this.z;
        e = e.elements;
        var i = 1 / (e[3] * t + e[7] * n + e[11] * r + e[15]);
        this.x = (e[0] * t + e[4] * n + e[8] * r + e[12]) * i;
        this.y = (e[1] * t + e[5] * n + e[9] * r + e[13]) * i;
        this.z = (e[2] * t + e[6] * n + e[10] * r + e[14]) * i;
        return this;
    },
    applyQuaternion: function(e) {
        var t = this.x, n = this.y, r = this.z, i = e.x, o = e.y, a = e.z;
        e = e.w;
        var s = e * t + o * r - a * n, c = e * n + a * t - i * r, l = e * r + i * n - o * t, t = -i * t - o * n - a * r;
        this.x = s * e + t * -i + c * -a - l * -o;
        this.y = c * e + t * -o + l * -i - s * -a;
        this.z = l * e + t * -a + s * -o - c * -i;
        return this;
    },
    transformDirection: function(e) {
        var t = this.x, n = this.y, r = this.z;
        e = e.elements;
        this.x = e[0] * t + e[4] * n + e[8] * r;
        this.y = e[1] * t + e[5] * n + e[9] * r;
        this.z = e[2] * t + e[6] * n + e[10] * r;
        this.normalize();
        return this;
    },
    divide: function(e) {
        this.x /= e.x;
        this.y /= e.y;
        this.z /= e.z;
        return this;
    },
    divideScalar: function(e) {
        0 !== e ? (e = 1 / e, this.x *= e, this.y *= e, this.z *= e) : this.z = this.y = this.x = 0;
        return this;
    },
    min: function(e) {
        this.x > e.x && (this.x = e.x);
        this.y > e.y && (this.y = e.y);
        this.z > e.z && (this.z = e.z);
        return this;
    },
    max: function(e) {
        this.x < e.x && (this.x = e.x);
        this.y < e.y && (this.y = e.y);
        this.z < e.z && (this.z = e.z);
        return this;
    },
    clamp: function(e, t) {
        this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x);
        this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y);
        this.z < e.z ? this.z = e.z : this.z > t.z && (this.z = t.z);
        return this;
    },
    clampScalar: function() {
        var e, t;
        return function(n, r) {
            void 0 === e && (e = new THREE.Vector3(), t = new THREE.Vector3());
            e.set(n, n, n);
            t.set(r, r, r);
            return this.clamp(e, t);
        };
    }(),
    floor: function() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        return this;
    },
    ceil: function() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        return this;
    },
    round: function() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        return this;
    },
    roundToZero: function() {
        this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x);
        this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y);
        this.z = 0 > this.z ? Math.ceil(this.z) : Math.floor(this.z);
        return this;
    },
    negate: function() {
        this.x = -this.x;
        this.y = -this.y;
        this.z = -this.z;
        return this;
    },
    dot: function(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z;
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    },
    normalize: function() {
        return this.divideScalar(this.length());
    },
    setLength: function(e) {
        var t = this.length();
        0 !== t && e !== t && this.multiplyScalar(e / t);
        return this;
    },
    lerp: function(e, t) {
        this.x += (e.x - this.x) * t;
        this.y += (e.y - this.y) * t;
        this.z += (e.z - this.z) * t;
        return this;
    },
    cross: function(e, t) {
        if (void 0 !== t) return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), 
        this.crossVectors(e, t);
        var n = this.x, r = this.y, i = this.z;
        this.x = r * e.z - i * e.y;
        this.y = i * e.x - n * e.z;
        this.z = n * e.y - r * e.x;
        return this;
    },
    crossVectors: function(e, t) {
        var n = e.x, r = e.y, i = e.z, o = t.x, a = t.y, s = t.z;
        this.x = r * s - i * a;
        this.y = i * o - n * s;
        this.z = n * a - r * o;
        return this;
    },
    projectOnVector: function() {
        var e, t;
        return function(n) {
            void 0 === e && (e = new THREE.Vector3());
            e.copy(n).normalize();
            t = this.dot(e);
            return this.copy(e).multiplyScalar(t);
        };
    }(),
    projectOnPlane: function() {
        var e;
        return function(t) {
            void 0 === e && (e = new THREE.Vector3());
            e.copy(this).projectOnVector(t);
            return this.sub(e);
        };
    }(),
    reflect: function() {
        var e;
        return function(t) {
            void 0 === e && (e = new THREE.Vector3());
            return this.sub(e.copy(t).multiplyScalar(2 * this.dot(t)));
        };
    }(),
    angleTo: function(e) {
        e = this.dot(e) / (this.length() * e.length());
        return Math.acos(THREE.Math.clamp(e, -1, 1));
    },
    distanceTo: function(e) {
        return Math.sqrt(this.distanceToSquared(e));
    },
    distanceToSquared: function(e) {
        var t = this.x - e.x, n = this.y - e.y;
        e = this.z - e.z;
        return t * t + n * n + e * e;
    },
    setEulerFromRotationMatrix: function(e, t) {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
    },
    setEulerFromQuaternion: function(e, t) {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
    },
    getPositionFromMatrix: function(e) {
        console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");
        return this.setFromMatrixPosition(e);
    },
    getScaleFromMatrix: function(e) {
        console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");
        return this.setFromMatrixScale(e);
    },
    getColumnFromMatrix: function(e, t) {
        console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");
        return this.setFromMatrixColumn(e, t);
    },
    setFromMatrixPosition: function(e) {
        this.x = e.elements[12];
        this.y = e.elements[13];
        this.z = e.elements[14];
        return this;
    },
    setFromMatrixScale: function(e) {
        var t = this.set(e.elements[0], e.elements[1], e.elements[2]).length(), n = this.set(e.elements[4], e.elements[5], e.elements[6]).length();
        e = this.set(e.elements[8], e.elements[9], e.elements[10]).length();
        this.x = t;
        this.y = n;
        this.z = e;
        return this;
    },
    setFromMatrixColumn: function(e, t) {
        var n = 4 * e, r = t.elements;
        this.x = r[n];
        this.y = r[n + 1];
        this.z = r[n + 2];
        return this;
    },
    equals: function(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z;
    },
    fromArray: function(e) {
        this.x = e[0];
        this.y = e[1];
        this.z = e[2];
        return this;
    },
    toArray: function() {
        return [ this.x, this.y, this.z ];
    },
    clone: function() {
        return new THREE.Vector3(this.x, this.y, this.z);
    }
};

THREE.Vector4 = function(e, t, n, r) {
    this.x = e || 0;
    this.y = t || 0;
    this.z = n || 0;
    this.w = void 0 !== r ? r : 1;
};

THREE.Vector4.prototype = {
    constructor: THREE.Vector4,
    set: function(e, t, n, r) {
        this.x = e;
        this.y = t;
        this.z = n;
        this.w = r;
        return this;
    },
    setX: function(e) {
        this.x = e;
        return this;
    },
    setY: function(e) {
        this.y = e;
        return this;
    },
    setZ: function(e) {
        this.z = e;
        return this;
    },
    setW: function(e) {
        this.w = e;
        return this;
    },
    setComponent: function(e, t) {
        switch (e) {
          case 0:
            this.x = t;
            break;

          case 1:
            this.y = t;
            break;

          case 2:
            this.z = t;
            break;

          case 3:
            this.w = t;
            break;

          default:
            throw Error("index is out of range: " + e);
        }
    },
    getComponent: function(e) {
        switch (e) {
          case 0:
            return this.x;

          case 1:
            return this.y;

          case 2:
            return this.z;

          case 3:
            return this.w;

          default:
            throw Error("index is out of range: " + e);
        }
    },
    copy: function(e) {
        this.x = e.x;
        this.y = e.y;
        this.z = e.z;
        this.w = void 0 !== e.w ? e.w : 1;
        return this;
    },
    add: function(e, t) {
        if (void 0 !== t) return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), 
        this.addVectors(e, t);
        this.x += e.x;
        this.y += e.y;
        this.z += e.z;
        this.w += e.w;
        return this;
    },
    addScalar: function(e) {
        this.x += e;
        this.y += e;
        this.z += e;
        this.w += e;
        return this;
    },
    addVectors: function(e, t) {
        this.x = e.x + t.x;
        this.y = e.y + t.y;
        this.z = e.z + t.z;
        this.w = e.w + t.w;
        return this;
    },
    sub: function(e, t) {
        if (void 0 !== t) return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), 
        this.subVectors(e, t);
        this.x -= e.x;
        this.y -= e.y;
        this.z -= e.z;
        this.w -= e.w;
        return this;
    },
    subVectors: function(e, t) {
        this.x = e.x - t.x;
        this.y = e.y - t.y;
        this.z = e.z - t.z;
        this.w = e.w - t.w;
        return this;
    },
    multiplyScalar: function(e) {
        this.x *= e;
        this.y *= e;
        this.z *= e;
        this.w *= e;
        return this;
    },
    applyMatrix4: function(e) {
        var t = this.x, n = this.y, r = this.z, i = this.w;
        e = e.elements;
        this.x = e[0] * t + e[4] * n + e[8] * r + e[12] * i;
        this.y = e[1] * t + e[5] * n + e[9] * r + e[13] * i;
        this.z = e[2] * t + e[6] * n + e[10] * r + e[14] * i;
        this.w = e[3] * t + e[7] * n + e[11] * r + e[15] * i;
        return this;
    },
    divideScalar: function(e) {
        0 !== e ? (e = 1 / e, this.x *= e, this.y *= e, this.z *= e, this.w *= e) : (this.z = this.y = this.x = 0, 
        this.w = 1);
        return this;
    },
    setAxisAngleFromQuaternion: function(e) {
        this.w = 2 * Math.acos(e.w);
        var t = Math.sqrt(1 - e.w * e.w);
        1e-4 > t ? (this.x = 1, this.z = this.y = 0) : (this.x = e.x / t, this.y = e.y / t, 
        this.z = e.z / t);
        return this;
    },
    setAxisAngleFromRotationMatrix: function(e) {
        var t, n, r;
        e = e.elements;
        var i = e[0];
        r = e[4];
        var o = e[8], a = e[1], s = e[5], c = e[9];
        n = e[2];
        t = e[6];
        var l = e[10];
        if (.01 > Math.abs(r - a) && .01 > Math.abs(o - n) && .01 > Math.abs(c - t)) {
            if (.1 > Math.abs(r + a) && .1 > Math.abs(o + n) && .1 > Math.abs(c + t) && .1 > Math.abs(i + s + l - 3)) return this.set(1, 0, 0, 0), 
            this;
            e = Math.PI;
            i = (i + 1) / 2;
            s = (s + 1) / 2;
            l = (l + 1) / 2;
            r = (r + a) / 4;
            o = (o + n) / 4;
            c = (c + t) / 4;
            i > s && i > l ? .01 > i ? (t = 0, r = n = .707106781) : (t = Math.sqrt(i), n = r / t, 
            r = o / t) : s > l ? .01 > s ? (t = .707106781, n = 0, r = .707106781) : (n = Math.sqrt(s), 
            t = r / n, r = c / n) : .01 > l ? (n = t = .707106781, r = 0) : (r = Math.sqrt(l), 
            t = o / r, n = c / r);
            this.set(t, n, r, e);
            return this;
        }
        e = Math.sqrt((t - c) * (t - c) + (o - n) * (o - n) + (a - r) * (a - r));
        .001 > Math.abs(e) && (e = 1);
        this.x = (t - c) / e;
        this.y = (o - n) / e;
        this.z = (a - r) / e;
        this.w = Math.acos((i + s + l - 1) / 2);
        return this;
    },
    min: function(e) {
        this.x > e.x && (this.x = e.x);
        this.y > e.y && (this.y = e.y);
        this.z > e.z && (this.z = e.z);
        this.w > e.w && (this.w = e.w);
        return this;
    },
    max: function(e) {
        this.x < e.x && (this.x = e.x);
        this.y < e.y && (this.y = e.y);
        this.z < e.z && (this.z = e.z);
        this.w < e.w && (this.w = e.w);
        return this;
    },
    clamp: function(e, t) {
        this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x);
        this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y);
        this.z < e.z ? this.z = e.z : this.z > t.z && (this.z = t.z);
        this.w < e.w ? this.w = e.w : this.w > t.w && (this.w = t.w);
        return this;
    },
    clampScalar: function() {
        var e, t;
        return function(n, r) {
            void 0 === e && (e = new THREE.Vector4(), t = new THREE.Vector4());
            e.set(n, n, n, n);
            t.set(r, r, r, r);
            return this.clamp(e, t);
        };
    }(),
    floor: function() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        this.w = Math.floor(this.w);
        return this;
    },
    ceil: function() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        this.w = Math.ceil(this.w);
        return this;
    },
    round: function() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        this.w = Math.round(this.w);
        return this;
    },
    roundToZero: function() {
        this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x);
        this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y);
        this.z = 0 > this.z ? Math.ceil(this.z) : Math.floor(this.z);
        this.w = 0 > this.w ? Math.ceil(this.w) : Math.floor(this.w);
        return this;
    },
    negate: function() {
        this.x = -this.x;
        this.y = -this.y;
        this.z = -this.z;
        this.w = -this.w;
        return this;
    },
    dot: function(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
    },
    normalize: function() {
        return this.divideScalar(this.length());
    },
    setLength: function(e) {
        var t = this.length();
        0 !== t && e !== t && this.multiplyScalar(e / t);
        return this;
    },
    lerp: function(e, t) {
        this.x += (e.x - this.x) * t;
        this.y += (e.y - this.y) * t;
        this.z += (e.z - this.z) * t;
        this.w += (e.w - this.w) * t;
        return this;
    },
    equals: function(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
    },
    fromArray: function(e) {
        this.x = e[0];
        this.y = e[1];
        this.z = e[2];
        this.w = e[3];
        return this;
    },
    toArray: function() {
        return [ this.x, this.y, this.z, this.w ];
    },
    clone: function() {
        return new THREE.Vector4(this.x, this.y, this.z, this.w);
    }
};

THREE.Euler = function(e, t, n, r) {
    this._x = e || 0;
    this._y = t || 0;
    this._z = n || 0;
    this._order = r || THREE.Euler.DefaultOrder;
};

THREE.Euler.RotationOrders = "XYZ YZX ZXY XZY YXZ ZYX".split(" ");

THREE.Euler.DefaultOrder = "XYZ";

THREE.Euler.prototype = {
    constructor: THREE.Euler,
    _x: 0,
    _y: 0,
    _z: 0,
    _order: THREE.Euler.DefaultOrder,
    get x() {
        return this._x;
    },
    set x(e) {
        this._x = e;
        this.onChangeCallback();
    },
    get y() {
        return this._y;
    },
    set y(e) {
        this._y = e;
        this.onChangeCallback();
    },
    get z() {
        return this._z;
    },
    set z(e) {
        this._z = e;
        this.onChangeCallback();
    },
    get order() {
        return this._order;
    },
    set order(e) {
        this._order = e;
        this.onChangeCallback();
    },
    set: function(e, t, n, r) {
        this._x = e;
        this._y = t;
        this._z = n;
        this._order = r || this._order;
        this.onChangeCallback();
        return this;
    },
    copy: function(e) {
        this._x = e._x;
        this._y = e._y;
        this._z = e._z;
        this._order = e._order;
        this.onChangeCallback();
        return this;
    },
    setFromRotationMatrix: function(e, t) {
        var n = THREE.Math.clamp, r = e.elements, i = r[0], o = r[4], a = r[8], s = r[1], c = r[5], l = r[9], u = r[2], h = r[6], r = r[10];
        t = t || this._order;
        "XYZ" === t ? (this._y = Math.asin(n(a, -1, 1)), .99999 > Math.abs(a) ? (this._x = Math.atan2(-l, r), 
        this._z = Math.atan2(-o, i)) : (this._x = Math.atan2(h, c), this._z = 0)) : "YXZ" === t ? (this._x = Math.asin(-n(l, -1, 1)), 
        .99999 > Math.abs(l) ? (this._y = Math.atan2(a, r), this._z = Math.atan2(s, c)) : (this._y = Math.atan2(-u, i), 
        this._z = 0)) : "ZXY" === t ? (this._x = Math.asin(n(h, -1, 1)), .99999 > Math.abs(h) ? (this._y = Math.atan2(-u, r), 
        this._z = Math.atan2(-o, c)) : (this._y = 0, this._z = Math.atan2(s, i))) : "ZYX" === t ? (this._y = Math.asin(-n(u, -1, 1)), 
        .99999 > Math.abs(u) ? (this._x = Math.atan2(h, r), this._z = Math.atan2(s, i)) : (this._x = 0, 
        this._z = Math.atan2(-o, c))) : "YZX" === t ? (this._z = Math.asin(n(s, -1, 1)), 
        .99999 > Math.abs(s) ? (this._x = Math.atan2(-l, c), this._y = Math.atan2(-u, i)) : (this._x = 0, 
        this._y = Math.atan2(a, r))) : "XZY" === t ? (this._z = Math.asin(-n(o, -1, 1)), 
        .99999 > Math.abs(o) ? (this._x = Math.atan2(h, c), this._y = Math.atan2(a, i)) : (this._x = Math.atan2(-l, r), 
        this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + t);
        this._order = t;
        this.onChangeCallback();
        return this;
    },
    setFromQuaternion: function(e, t, n) {
        var r = THREE.Math.clamp, i = e.x * e.x, o = e.y * e.y, a = e.z * e.z, s = e.w * e.w;
        t = t || this._order;
        "XYZ" === t ? (this._x = Math.atan2(2 * (e.x * e.w - e.y * e.z), s - i - o + a), 
        this._y = Math.asin(r(2 * (e.x * e.z + e.y * e.w), -1, 1)), this._z = Math.atan2(2 * (e.z * e.w - e.x * e.y), s + i - o - a)) : "YXZ" === t ? (this._x = Math.asin(r(2 * (e.x * e.w - e.y * e.z), -1, 1)), 
        this._y = Math.atan2(2 * (e.x * e.z + e.y * e.w), s - i - o + a), this._z = Math.atan2(2 * (e.x * e.y + e.z * e.w), s - i + o - a)) : "ZXY" === t ? (this._x = Math.asin(r(2 * (e.x * e.w + e.y * e.z), -1, 1)), 
        this._y = Math.atan2(2 * (e.y * e.w - e.z * e.x), s - i - o + a), this._z = Math.atan2(2 * (e.z * e.w - e.x * e.y), s - i + o - a)) : "ZYX" === t ? (this._x = Math.atan2(2 * (e.x * e.w + e.z * e.y), s - i - o + a), 
        this._y = Math.asin(r(2 * (e.y * e.w - e.x * e.z), -1, 1)), this._z = Math.atan2(2 * (e.x * e.y + e.z * e.w), s + i - o - a)) : "YZX" === t ? (this._x = Math.atan2(2 * (e.x * e.w - e.z * e.y), s - i + o - a), 
        this._y = Math.atan2(2 * (e.y * e.w - e.x * e.z), s + i - o - a), this._z = Math.asin(r(2 * (e.x * e.y + e.z * e.w), -1, 1))) : "XZY" === t ? (this._x = Math.atan2(2 * (e.x * e.w + e.y * e.z), s - i + o - a), 
        this._y = Math.atan2(2 * (e.x * e.z + e.y * e.w), s + i - o - a), this._z = Math.asin(r(2 * (e.z * e.w - e.x * e.y), -1, 1))) : console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: " + t);
        this._order = t;
        if (!1 !== n) this.onChangeCallback();
        return this;
    },
    reorder: function() {
        var e = new THREE.Quaternion();
        return function(t) {
            e.setFromEuler(this);
            this.setFromQuaternion(e, t);
        };
    }(),
    equals: function(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
    },
    fromArray: function(e) {
        this._x = e[0];
        this._y = e[1];
        this._z = e[2];
        void 0 !== e[3] && (this._order = e[3]);
        this.onChangeCallback();
        return this;
    },
    toArray: function() {
        return [ this._x, this._y, this._z, this._order ];
    },
    onChange: function(e) {
        this.onChangeCallback = e;
        return this;
    },
    onChangeCallback: function() {},
    clone: function() {
        return new THREE.Euler(this._x, this._y, this._z, this._order);
    }
};

THREE.Line3 = function(e, t) {
    this.start = void 0 !== e ? e : new THREE.Vector3();
    this.end = void 0 !== t ? t : new THREE.Vector3();
};

THREE.Line3.prototype = {
    constructor: THREE.Line3,
    set: function(e, t) {
        this.start.copy(e);
        this.end.copy(t);
        return this;
    },
    copy: function(e) {
        this.start.copy(e.start);
        this.end.copy(e.end);
        return this;
    },
    center: function(e) {
        return (e || new THREE.Vector3()).addVectors(this.start, this.end).multiplyScalar(.5);
    },
    delta: function(e) {
        return (e || new THREE.Vector3()).subVectors(this.end, this.start);
    },
    distanceSq: function() {
        return this.start.distanceToSquared(this.end);
    },
    distance: function() {
        return this.start.distanceTo(this.end);
    },
    at: function(e, t) {
        var n = t || new THREE.Vector3();
        return this.delta(n).multiplyScalar(e).add(this.start);
    },
    closestPointToPointParameter: function() {
        var e = new THREE.Vector3(), t = new THREE.Vector3();
        return function(n, r) {
            e.subVectors(n, this.start);
            t.subVectors(this.end, this.start);
            var i = t.dot(t), i = t.dot(e) / i;
            r && (i = THREE.Math.clamp(i, 0, 1));
            return i;
        };
    }(),
    closestPointToPoint: function(e, t, n) {
        e = this.closestPointToPointParameter(e, t);
        n = n || new THREE.Vector3();
        return this.delta(n).multiplyScalar(e).add(this.start);
    },
    applyMatrix4: function(e) {
        this.start.applyMatrix4(e);
        this.end.applyMatrix4(e);
        return this;
    },
    equals: function(e) {
        return e.start.equals(this.start) && e.end.equals(this.end);
    },
    clone: function() {
        return new THREE.Line3().copy(this);
    }
};

THREE.Box2 = function(e, t) {
    this.min = void 0 !== e ? e : new THREE.Vector2(Infinity, Infinity);
    this.max = void 0 !== t ? t : new THREE.Vector2(-Infinity, -Infinity);
};

THREE.Box2.prototype = {
    constructor: THREE.Box2,
    set: function(e, t) {
        this.min.copy(e);
        this.max.copy(t);
        return this;
    },
    setFromPoints: function(e) {
        this.makeEmpty();
        for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
        return this;
    },
    setFromCenterAndSize: function() {
        var e = new THREE.Vector2();
        return function(t, n) {
            var r = e.copy(n).multiplyScalar(.5);
            this.min.copy(t).sub(r);
            this.max.copy(t).add(r);
            return this;
        };
    }(),
    copy: function(e) {
        this.min.copy(e.min);
        this.max.copy(e.max);
        return this;
    },
    makeEmpty: function() {
        this.min.x = this.min.y = Infinity;
        this.max.x = this.max.y = -Infinity;
        return this;
    },
    empty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
    },
    center: function(e) {
        return (e || new THREE.Vector2()).addVectors(this.min, this.max).multiplyScalar(.5);
    },
    size: function(e) {
        return (e || new THREE.Vector2()).subVectors(this.max, this.min);
    },
    expandByPoint: function(e) {
        this.min.min(e);
        this.max.max(e);
        return this;
    },
    expandByVector: function(e) {
        this.min.sub(e);
        this.max.add(e);
        return this;
    },
    expandByScalar: function(e) {
        this.min.addScalar(-e);
        this.max.addScalar(e);
        return this;
    },
    containsPoint: function(e) {
        return e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y ? !1 : !0;
    },
    containsBox: function(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y ? !0 : !1;
    },
    getParameter: function(e, t) {
        return (t || new THREE.Vector2()).set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
    },
    isIntersectionBox: function(e) {
        return e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y ? !1 : !0;
    },
    clampPoint: function(e, t) {
        return (t || new THREE.Vector2()).copy(e).clamp(this.min, this.max);
    },
    distanceToPoint: function() {
        var e = new THREE.Vector2();
        return function(t) {
            return e.copy(t).clamp(this.min, this.max).sub(t).length();
        };
    }(),
    intersect: function(e) {
        this.min.max(e.min);
        this.max.min(e.max);
        return this;
    },
    union: function(e) {
        this.min.min(e.min);
        this.max.max(e.max);
        return this;
    },
    translate: function(e) {
        this.min.add(e);
        this.max.add(e);
        return this;
    },
    equals: function(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    },
    clone: function() {
        return new THREE.Box2().copy(this);
    }
};

THREE.Box3 = function(e, t) {
    this.min = void 0 !== e ? e : new THREE.Vector3(Infinity, Infinity, Infinity);
    this.max = void 0 !== t ? t : new THREE.Vector3(-Infinity, -Infinity, -Infinity);
};

THREE.Box3.prototype = {
    constructor: THREE.Box3,
    set: function(e, t) {
        this.min.copy(e);
        this.max.copy(t);
        return this;
    },
    setFromPoints: function(e) {
        this.makeEmpty();
        for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
        return this;
    },
    setFromCenterAndSize: function() {
        var e = new THREE.Vector3();
        return function(t, n) {
            var r = e.copy(n).multiplyScalar(.5);
            this.min.copy(t).sub(r);
            this.max.copy(t).add(r);
            return this;
        };
    }(),
    setFromObject: function() {
        var e = new THREE.Vector3();
        return function(t) {
            var n = this;
            t.updateMatrixWorld(!0);
            this.makeEmpty();
            t.traverse(function(t) {
                if (void 0 !== t.geometry && void 0 !== t.geometry.vertices) for (var r = t.geometry.vertices, i = 0, o = r.length; i < o; i++) e.copy(r[i]), 
                e.applyMatrix4(t.matrixWorld), n.expandByPoint(e);
            });
            return this;
        };
    }(),
    copy: function(e) {
        this.min.copy(e.min);
        this.max.copy(e.max);
        return this;
    },
    makeEmpty: function() {
        this.min.x = this.min.y = this.min.z = Infinity;
        this.max.x = this.max.y = this.max.z = -Infinity;
        return this;
    },
    empty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
    },
    center: function(e) {
        return (e || new THREE.Vector3()).addVectors(this.min, this.max).multiplyScalar(.5);
    },
    size: function(e) {
        return (e || new THREE.Vector3()).subVectors(this.max, this.min);
    },
    expandByPoint: function(e) {
        this.min.min(e);
        this.max.max(e);
        return this;
    },
    expandByVector: function(e) {
        this.min.sub(e);
        this.max.add(e);
        return this;
    },
    expandByScalar: function(e) {
        this.min.addScalar(-e);
        this.max.addScalar(e);
        return this;
    },
    containsPoint: function(e) {
        return e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z ? !1 : !0;
    },
    containsBox: function(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z ? !0 : !1;
    },
    getParameter: function(e, t) {
        return (t || new THREE.Vector3()).set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
    },
    isIntersectionBox: function(e) {
        return e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z ? !1 : !0;
    },
    clampPoint: function(e, t) {
        return (t || new THREE.Vector3()).copy(e).clamp(this.min, this.max);
    },
    distanceToPoint: function() {
        var e = new THREE.Vector3();
        return function(t) {
            return e.copy(t).clamp(this.min, this.max).sub(t).length();
        };
    }(),
    getBoundingSphere: function() {
        var e = new THREE.Vector3();
        return function(t) {
            t = t || new THREE.Sphere();
            t.center = this.center();
            t.radius = .5 * this.size(e).length();
            return t;
        };
    }(),
    intersect: function(e) {
        this.min.max(e.min);
        this.max.min(e.max);
        return this;
    },
    union: function(e) {
        this.min.min(e.min);
        this.max.max(e.max);
        return this;
    },
    applyMatrix4: function() {
        var e = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];
        return function(t) {
            e[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t);
            e[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t);
            e[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t);
            e[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t);
            e[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t);
            e[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t);
            e[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t);
            e[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t);
            this.makeEmpty();
            this.setFromPoints(e);
            return this;
        };
    }(),
    translate: function(e) {
        this.min.add(e);
        this.max.add(e);
        return this;
    },
    equals: function(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    },
    clone: function() {
        return new THREE.Box3().copy(this);
    }
};

THREE.Matrix3 = function(e, t, n, r, i, o, a, s, c) {
    var l = this.elements = new Float32Array(9);
    l[0] = void 0 !== e ? e : 1;
    l[3] = t || 0;
    l[6] = n || 0;
    l[1] = r || 0;
    l[4] = void 0 !== i ? i : 1;
    l[7] = o || 0;
    l[2] = a || 0;
    l[5] = s || 0;
    l[8] = void 0 !== c ? c : 1;
};

THREE.Matrix3.prototype = {
    constructor: THREE.Matrix3,
    set: function(e, t, n, r, i, o, a, s, c) {
        var l = this.elements;
        l[0] = e;
        l[3] = t;
        l[6] = n;
        l[1] = r;
        l[4] = i;
        l[7] = o;
        l[2] = a;
        l[5] = s;
        l[8] = c;
        return this;
    },
    identity: function() {
        this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);
        return this;
    },
    copy: function(e) {
        e = e.elements;
        this.set(e[0], e[3], e[6], e[1], e[4], e[7], e[2], e[5], e[8]);
        return this;
    },
    multiplyVector3: function(e) {
        console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");
        return e.applyMatrix3(this);
    },
    multiplyVector3Array: function(e) {
        console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");
        return this.applyToVector3Array(e);
    },
    applyToVector3Array: function() {
        var e = new THREE.Vector3();
        return function(t, n, r) {
            void 0 === n && (n = 0);
            void 0 === r && (r = t.length);
            for (var i = 0; i < r; i += 3, n += 3) e.x = t[n], e.y = t[n + 1], e.z = t[n + 2], 
            e.applyMatrix3(this), t[n] = e.x, t[n + 1] = e.y, t[n + 2] = e.z;
            return t;
        };
    }(),
    multiplyScalar: function(e) {
        var t = this.elements;
        t[0] *= e;
        t[3] *= e;
        t[6] *= e;
        t[1] *= e;
        t[4] *= e;
        t[7] *= e;
        t[2] *= e;
        t[5] *= e;
        t[8] *= e;
        return this;
    },
    determinant: function() {
        var e = this.elements, t = e[0], n = e[1], r = e[2], i = e[3], o = e[4], a = e[5], s = e[6], c = e[7], e = e[8];
        return t * o * e - t * a * c - n * i * e + n * a * s + r * i * c - r * o * s;
    },
    getInverse: function(e, t) {
        var n = e.elements, r = this.elements;
        r[0] = n[10] * n[5] - n[6] * n[9];
        r[1] = -n[10] * n[1] + n[2] * n[9];
        r[2] = n[6] * n[1] - n[2] * n[5];
        r[3] = -n[10] * n[4] + n[6] * n[8];
        r[4] = n[10] * n[0] - n[2] * n[8];
        r[5] = -n[6] * n[0] + n[2] * n[4];
        r[6] = n[9] * n[4] - n[5] * n[8];
        r[7] = -n[9] * n[0] + n[1] * n[8];
        r[8] = n[5] * n[0] - n[1] * n[4];
        n = n[0] * r[0] + n[1] * r[3] + n[2] * r[6];
        if (0 === n) {
            if (t) throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");
            console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");
            this.identity();
            return this;
        }
        this.multiplyScalar(1 / n);
        return this;
    },
    transpose: function() {
        var e, t = this.elements;
        e = t[1];
        t[1] = t[3];
        t[3] = e;
        e = t[2];
        t[2] = t[6];
        t[6] = e;
        e = t[5];
        t[5] = t[7];
        t[7] = e;
        return this;
    },
    flattenToArrayOffset: function(e, t) {
        var n = this.elements;
        e[t] = n[0];
        e[t + 1] = n[1];
        e[t + 2] = n[2];
        e[t + 3] = n[3];
        e[t + 4] = n[4];
        e[t + 5] = n[5];
        e[t + 6] = n[6];
        e[t + 7] = n[7];
        e[t + 8] = n[8];
        return e;
    },
    getNormalMatrix: function(e) {
        this.getInverse(e).transpose();
        return this;
    },
    transposeIntoArray: function(e) {
        var t = this.elements;
        e[0] = t[0];
        e[1] = t[3];
        e[2] = t[6];
        e[3] = t[1];
        e[4] = t[4];
        e[5] = t[7];
        e[6] = t[2];
        e[7] = t[5];
        e[8] = t[8];
        return this;
    },
    fromArray: function(e) {
        this.elements.set(e);
        return this;
    },
    toArray: function() {
        var e = this.elements;
        return [ e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8] ];
    },
    clone: function() {
        var e = this.elements;
        return new THREE.Matrix3(e[0], e[3], e[6], e[1], e[4], e[7], e[2], e[5], e[8]);
    }
};

THREE.Matrix4 = function(e, t, n, r, i, o, a, s, c, l, u, h, f, p, d, m) {
    var E = this.elements = new Float32Array(16);
    E[0] = void 0 !== e ? e : 1;
    E[4] = t || 0;
    E[8] = n || 0;
    E[12] = r || 0;
    E[1] = i || 0;
    E[5] = void 0 !== o ? o : 1;
    E[9] = a || 0;
    E[13] = s || 0;
    E[2] = c || 0;
    E[6] = l || 0;
    E[10] = void 0 !== u ? u : 1;
    E[14] = h || 0;
    E[3] = f || 0;
    E[7] = p || 0;
    E[11] = d || 0;
    E[15] = void 0 !== m ? m : 1;
};

THREE.Matrix4.prototype = {
    constructor: THREE.Matrix4,
    set: function(e, t, n, r, i, o, a, s, c, l, u, h, f, p, d, m) {
        var E = this.elements;
        E[0] = e;
        E[4] = t;
        E[8] = n;
        E[12] = r;
        E[1] = i;
        E[5] = o;
        E[9] = a;
        E[13] = s;
        E[2] = c;
        E[6] = l;
        E[10] = u;
        E[14] = h;
        E[3] = f;
        E[7] = p;
        E[11] = d;
        E[15] = m;
        return this;
    },
    identity: function() {
        this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        return this;
    },
    copy: function(e) {
        this.elements.set(e.elements);
        return this;
    },
    extractPosition: function(e) {
        console.warn("THREEMatrix4: .extractPosition() has been renamed to .copyPosition().");
        return this.copyPosition(e);
    },
    copyPosition: function(e) {
        var t = this.elements;
        e = e.elements;
        t[12] = e[12];
        t[13] = e[13];
        t[14] = e[14];
        return this;
    },
    extractRotation: function() {
        var e = new THREE.Vector3();
        return function(t) {
            var n = this.elements;
            t = t.elements;
            var r = 1 / e.set(t[0], t[1], t[2]).length(), i = 1 / e.set(t[4], t[5], t[6]).length(), o = 1 / e.set(t[8], t[9], t[10]).length();
            n[0] = t[0] * r;
            n[1] = t[1] * r;
            n[2] = t[2] * r;
            n[4] = t[4] * i;
            n[5] = t[5] * i;
            n[6] = t[6] * i;
            n[8] = t[8] * o;
            n[9] = t[9] * o;
            n[10] = t[10] * o;
            return this;
        };
    }(),
    makeRotationFromEuler: function(e) {
        !1 === e instanceof THREE.Euler && console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var t = this.elements, n = e.x, r = e.y, i = e.z, o = Math.cos(n), n = Math.sin(n), a = Math.cos(r), r = Math.sin(r), s = Math.cos(i), i = Math.sin(i);
        if ("XYZ" === e.order) {
            e = o * s;
            var c = o * i, l = n * s, u = n * i;
            t[0] = a * s;
            t[4] = -a * i;
            t[8] = r;
            t[1] = c + l * r;
            t[5] = e - u * r;
            t[9] = -n * a;
            t[2] = u - e * r;
            t[6] = l + c * r;
            t[10] = o * a;
        } else "YXZ" === e.order ? (e = a * s, c = a * i, l = r * s, u = r * i, t[0] = e + u * n, 
        t[4] = l * n - c, t[8] = o * r, t[1] = o * i, t[5] = o * s, t[9] = -n, t[2] = c * n - l, 
        t[6] = u + e * n, t[10] = o * a) : "ZXY" === e.order ? (e = a * s, c = a * i, l = r * s, 
        u = r * i, t[0] = e - u * n, t[4] = -o * i, t[8] = l + c * n, t[1] = c + l * n, 
        t[5] = o * s, t[9] = u - e * n, t[2] = -o * r, t[6] = n, t[10] = o * a) : "ZYX" === e.order ? (e = o * s, 
        c = o * i, l = n * s, u = n * i, t[0] = a * s, t[4] = l * r - c, t[8] = e * r + u, 
        t[1] = a * i, t[5] = u * r + e, t[9] = c * r - l, t[2] = -r, t[6] = n * a, t[10] = o * a) : "YZX" === e.order ? (e = o * a, 
        c = o * r, l = n * a, u = n * r, t[0] = a * s, t[4] = u - e * i, t[8] = l * i + c, 
        t[1] = i, t[5] = o * s, t[9] = -n * s, t[2] = -r * s, t[6] = c * i + l, t[10] = e - u * i) : "XZY" === e.order && (e = o * a, 
        c = o * r, l = n * a, u = n * r, t[0] = a * s, t[4] = -i, t[8] = r * s, t[1] = e * i + u, 
        t[5] = o * s, t[9] = c * i - l, t[2] = l * i - c, t[6] = n * s, t[10] = u * i + e);
        t[3] = 0;
        t[7] = 0;
        t[11] = 0;
        t[12] = 0;
        t[13] = 0;
        t[14] = 0;
        t[15] = 1;
        return this;
    },
    setRotationFromQuaternion: function(e) {
        console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");
        return this.makeRotationFromQuaternion(e);
    },
    makeRotationFromQuaternion: function(e) {
        var t = this.elements, n = e.x, r = e.y, i = e.z, o = e.w, a = n + n, s = r + r, c = i + i;
        e = n * a;
        var l = n * s, n = n * c, u = r * s, r = r * c, i = i * c, a = o * a, s = o * s, o = o * c;
        t[0] = 1 - (u + i);
        t[4] = l - o;
        t[8] = n + s;
        t[1] = l + o;
        t[5] = 1 - (e + i);
        t[9] = r - a;
        t[2] = n - s;
        t[6] = r + a;
        t[10] = 1 - (e + u);
        t[3] = 0;
        t[7] = 0;
        t[11] = 0;
        t[12] = 0;
        t[13] = 0;
        t[14] = 0;
        t[15] = 1;
        return this;
    },
    lookAt: function() {
        var e = new THREE.Vector3(), t = new THREE.Vector3(), n = new THREE.Vector3();
        return function(r, i, o) {
            var a = this.elements;
            n.subVectors(r, i).normalize();
            0 === n.length() && (n.z = 1);
            e.crossVectors(o, n).normalize();
            0 === e.length() && (n.x += 1e-4, e.crossVectors(o, n).normalize());
            t.crossVectors(n, e);
            a[0] = e.x;
            a[4] = t.x;
            a[8] = n.x;
            a[1] = e.y;
            a[5] = t.y;
            a[9] = n.y;
            a[2] = e.z;
            a[6] = t.z;
            a[10] = n.z;
            return this;
        };
    }(),
    multiply: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), 
        this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e);
    },
    multiplyMatrices: function(e, t) {
        var n = e.elements, r = t.elements, i = this.elements, o = n[0], a = n[4], s = n[8], c = n[12], l = n[1], u = n[5], h = n[9], f = n[13], p = n[2], d = n[6], m = n[10], E = n[14], v = n[3], g = n[7], y = n[11], n = n[15], T = r[0], x = r[4], R = r[8], _ = r[12], b = r[1], w = r[5], H = r[9], S = r[13], M = r[2], C = r[6], A = r[10], P = r[14], k = r[3], L = r[7], F = r[11], r = r[15];
        i[0] = o * T + a * b + s * M + c * k;
        i[4] = o * x + a * w + s * C + c * L;
        i[8] = o * R + a * H + s * A + c * F;
        i[12] = o * _ + a * S + s * P + c * r;
        i[1] = l * T + u * b + h * M + f * k;
        i[5] = l * x + u * w + h * C + f * L;
        i[9] = l * R + u * H + h * A + f * F;
        i[13] = l * _ + u * S + h * P + f * r;
        i[2] = p * T + d * b + m * M + E * k;
        i[6] = p * x + d * w + m * C + E * L;
        i[10] = p * R + d * H + m * A + E * F;
        i[14] = p * _ + d * S + m * P + E * r;
        i[3] = v * T + g * b + y * M + n * k;
        i[7] = v * x + g * w + y * C + n * L;
        i[11] = v * R + g * H + y * A + n * F;
        i[15] = v * _ + g * S + y * P + n * r;
        return this;
    },
    multiplyToArray: function(e, t, n) {
        var r = this.elements;
        this.multiplyMatrices(e, t);
        n[0] = r[0];
        n[1] = r[1];
        n[2] = r[2];
        n[3] = r[3];
        n[4] = r[4];
        n[5] = r[5];
        n[6] = r[6];
        n[7] = r[7];
        n[8] = r[8];
        n[9] = r[9];
        n[10] = r[10];
        n[11] = r[11];
        n[12] = r[12];
        n[13] = r[13];
        n[14] = r[14];
        n[15] = r[15];
        return this;
    },
    multiplyScalar: function(e) {
        var t = this.elements;
        t[0] *= e;
        t[4] *= e;
        t[8] *= e;
        t[12] *= e;
        t[1] *= e;
        t[5] *= e;
        t[9] *= e;
        t[13] *= e;
        t[2] *= e;
        t[6] *= e;
        t[10] *= e;
        t[14] *= e;
        t[3] *= e;
        t[7] *= e;
        t[11] *= e;
        t[15] *= e;
        return this;
    },
    multiplyVector3: function(e) {
        console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
        return e.applyProjection(this);
    },
    multiplyVector4: function(e) {
        console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");
        return e.applyMatrix4(this);
    },
    multiplyVector3Array: function(e) {
        console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");
        return this.applyToVector3Array(e);
    },
    applyToVector3Array: function() {
        var e = new THREE.Vector3();
        return function(t, n, r) {
            void 0 === n && (n = 0);
            void 0 === r && (r = t.length);
            for (var i = 0; i < r; i += 3, n += 3) e.x = t[n], e.y = t[n + 1], e.z = t[n + 2], 
            e.applyMatrix4(this), t[n] = e.x, t[n + 1] = e.y, t[n + 2] = e.z;
            return t;
        };
    }(),
    rotateAxis: function(e) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");
        e.transformDirection(this);
    },
    crossVector: function(e) {
        console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");
        return e.applyMatrix4(this);
    },
    determinant: function() {
        var e = this.elements, t = e[0], n = e[4], r = e[8], i = e[12], o = e[1], a = e[5], s = e[9], c = e[13], l = e[2], u = e[6], h = e[10], f = e[14];
        return e[3] * (+i * s * u - r * c * u - i * a * h + n * c * h + r * a * f - n * s * f) + e[7] * (+t * s * f - t * c * h + i * o * h - r * o * f + r * c * l - i * s * l) + e[11] * (+t * c * u - t * a * f - i * o * u + n * o * f + i * a * l - n * c * l) + e[15] * (-r * a * l - t * s * u + t * a * h + r * o * u - n * o * h + n * s * l);
    },
    transpose: function() {
        var e = this.elements, t;
        t = e[1];
        e[1] = e[4];
        e[4] = t;
        t = e[2];
        e[2] = e[8];
        e[8] = t;
        t = e[6];
        e[6] = e[9];
        e[9] = t;
        t = e[3];
        e[3] = e[12];
        e[12] = t;
        t = e[7];
        e[7] = e[13];
        e[13] = t;
        t = e[11];
        e[11] = e[14];
        e[14] = t;
        return this;
    },
    flattenToArrayOffset: function(e, t) {
        var n = this.elements;
        e[t] = n[0];
        e[t + 1] = n[1];
        e[t + 2] = n[2];
        e[t + 3] = n[3];
        e[t + 4] = n[4];
        e[t + 5] = n[5];
        e[t + 6] = n[6];
        e[t + 7] = n[7];
        e[t + 8] = n[8];
        e[t + 9] = n[9];
        e[t + 10] = n[10];
        e[t + 11] = n[11];
        e[t + 12] = n[12];
        e[t + 13] = n[13];
        e[t + 14] = n[14];
        e[t + 15] = n[15];
        return e;
    },
    getPosition: function() {
        var e = new THREE.Vector3();
        return function() {
            console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
            var t = this.elements;
            return e.set(t[12], t[13], t[14]);
        };
    }(),
    setPosition: function(e) {
        var t = this.elements;
        t[12] = e.x;
        t[13] = e.y;
        t[14] = e.z;
        return this;
    },
    getInverse: function(e, t) {
        var n = this.elements, r = e.elements, i = r[0], o = r[4], a = r[8], s = r[12], c = r[1], l = r[5], u = r[9], h = r[13], f = r[2], p = r[6], d = r[10], m = r[14], E = r[3], v = r[7], g = r[11], r = r[15];
        n[0] = u * m * v - h * d * v + h * p * g - l * m * g - u * p * r + l * d * r;
        n[4] = s * d * v - a * m * v - s * p * g + o * m * g + a * p * r - o * d * r;
        n[8] = a * h * v - s * u * v + s * l * g - o * h * g - a * l * r + o * u * r;
        n[12] = s * u * p - a * h * p - s * l * d + o * h * d + a * l * m - o * u * m;
        n[1] = h * d * E - u * m * E - h * f * g + c * m * g + u * f * r - c * d * r;
        n[5] = a * m * E - s * d * E + s * f * g - i * m * g - a * f * r + i * d * r;
        n[9] = s * u * E - a * h * E - s * c * g + i * h * g + a * c * r - i * u * r;
        n[13] = a * h * f - s * u * f + s * c * d - i * h * d - a * c * m + i * u * m;
        n[2] = l * m * E - h * p * E + h * f * v - c * m * v - l * f * r + c * p * r;
        n[6] = s * p * E - o * m * E - s * f * v + i * m * v + o * f * r - i * p * r;
        n[10] = o * h * E - s * l * E + s * c * v - i * h * v - o * c * r + i * l * r;
        n[14] = s * l * f - o * h * f - s * c * p + i * h * p + o * c * m - i * l * m;
        n[3] = u * p * E - l * d * E - u * f * v + c * d * v + l * f * g - c * p * g;
        n[7] = o * d * E - a * p * E + a * f * v - i * d * v - o * f * g + i * p * g;
        n[11] = a * l * E - o * u * E - a * c * v + i * u * v + o * c * g - i * l * g;
        n[15] = o * u * f - a * l * f + a * c * p - i * u * p - o * c * d + i * l * d;
        n = i * n[0] + c * n[4] + f * n[8] + E * n[12];
        if (0 == n) {
            if (t) throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");
            console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");
            this.identity();
            return this;
        }
        this.multiplyScalar(1 / n);
        return this;
    },
    translate: function(e) {
        console.warn("THREE.Matrix4: .translate() has been removed.");
    },
    rotateX: function(e) {
        console.warn("THREE.Matrix4: .rotateX() has been removed.");
    },
    rotateY: function(e) {
        console.warn("THREE.Matrix4: .rotateY() has been removed.");
    },
    rotateZ: function(e) {
        console.warn("THREE.Matrix4: .rotateZ() has been removed.");
    },
    rotateByAxis: function(e, t) {
        console.warn("THREE.Matrix4: .rotateByAxis() has been removed.");
    },
    scale: function(e) {
        var t = this.elements, n = e.x, r = e.y;
        e = e.z;
        t[0] *= n;
        t[4] *= r;
        t[8] *= e;
        t[1] *= n;
        t[5] *= r;
        t[9] *= e;
        t[2] *= n;
        t[6] *= r;
        t[10] *= e;
        t[3] *= n;
        t[7] *= r;
        t[11] *= e;
        return this;
    },
    getMaxScaleOnAxis: function() {
        var e = this.elements;
        return Math.sqrt(Math.max(e[0] * e[0] + e[1] * e[1] + e[2] * e[2], Math.max(e[4] * e[4] + e[5] * e[5] + e[6] * e[6], e[8] * e[8] + e[9] * e[9] + e[10] * e[10])));
    },
    makeTranslation: function(e, t, n) {
        this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1);
        return this;
    },
    makeRotationX: function(e) {
        var t = Math.cos(e);
        e = Math.sin(e);
        this.set(1, 0, 0, 0, 0, t, -e, 0, 0, e, t, 0, 0, 0, 0, 1);
        return this;
    },
    makeRotationY: function(e) {
        var t = Math.cos(e);
        e = Math.sin(e);
        this.set(t, 0, e, 0, 0, 1, 0, 0, -e, 0, t, 0, 0, 0, 0, 1);
        return this;
    },
    makeRotationZ: function(e) {
        var t = Math.cos(e);
        e = Math.sin(e);
        this.set(t, -e, 0, 0, e, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        return this;
    },
    makeRotationAxis: function(e, t) {
        var n = Math.cos(t), r = Math.sin(t), i = 1 - n, o = e.x, a = e.y, s = e.z, c = i * o, l = i * a;
        this.set(c * o + n, c * a - r * s, c * s + r * a, 0, c * a + r * s, l * a + n, l * s - r * o, 0, c * s - r * a, l * s + r * o, i * s * s + n, 0, 0, 0, 0, 1);
        return this;
    },
    makeScale: function(e, t, n) {
        this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1);
        return this;
    },
    compose: function(e, t, n) {
        this.makeRotationFromQuaternion(t);
        this.scale(n);
        this.setPosition(e);
        return this;
    },
    decompose: function() {
        var e = new THREE.Vector3(), t = new THREE.Matrix4();
        return function(n, r, i) {
            var o = this.elements, a = e.set(o[0], o[1], o[2]).length(), s = e.set(o[4], o[5], o[6]).length(), c = e.set(o[8], o[9], o[10]).length();
            0 > this.determinant() && (a = -a);
            n.x = o[12];
            n.y = o[13];
            n.z = o[14];
            t.elements.set(this.elements);
            n = 1 / a;
            var o = 1 / s, l = 1 / c;
            t.elements[0] *= n;
            t.elements[1] *= n;
            t.elements[2] *= n;
            t.elements[4] *= o;
            t.elements[5] *= o;
            t.elements[6] *= o;
            t.elements[8] *= l;
            t.elements[9] *= l;
            t.elements[10] *= l;
            r.setFromRotationMatrix(t);
            i.x = a;
            i.y = s;
            i.z = c;
            return this;
        };
    }(),
    makeFrustum: function(e, t, n, r, i, o) {
        var a = this.elements;
        a[0] = 2 * i / (t - e);
        a[4] = 0;
        a[8] = (t + e) / (t - e);
        a[12] = 0;
        a[1] = 0;
        a[5] = 2 * i / (r - n);
        a[9] = (r + n) / (r - n);
        a[13] = 0;
        a[2] = 0;
        a[6] = 0;
        a[10] = -(o + i) / (o - i);
        a[14] = -2 * o * i / (o - i);
        a[3] = 0;
        a[7] = 0;
        a[11] = -1;
        a[15] = 0;
        return this;
    },
    makePerspective: function(e, t, n, r) {
        e = n * Math.tan(THREE.Math.degToRad(.5 * e));
        var i = -e;
        return this.makeFrustum(i * t, e * t, i, e, n, r);
    },
    makeOrthographic: function(e, t, n, r, i, o) {
        var a = this.elements, s = t - e, c = n - r, l = o - i;
        a[0] = 2 / s;
        a[4] = 0;
        a[8] = 0;
        a[12] = -((t + e) / s);
        a[1] = 0;
        a[5] = 2 / c;
        a[9] = 0;
        a[13] = -((n + r) / c);
        a[2] = 0;
        a[6] = 0;
        a[10] = -2 / l;
        a[14] = -((o + i) / l);
        a[3] = 0;
        a[7] = 0;
        a[11] = 0;
        a[15] = 1;
        return this;
    },
    fromArray: function(e) {
        this.elements.set(e);
        return this;
    },
    toArray: function() {
        var e = this.elements;
        return [ e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15] ];
    },
    clone: function() {
        var e = this.elements;
        return new THREE.Matrix4(e[0], e[4], e[8], e[12], e[1], e[5], e[9], e[13], e[2], e[6], e[10], e[14], e[3], e[7], e[11], e[15]);
    }
};

THREE.Ray = function(e, t) {
    this.origin = void 0 !== e ? e : new THREE.Vector3();
    this.direction = void 0 !== t ? t : new THREE.Vector3();
};

THREE.Ray.prototype = {
    constructor: THREE.Ray,
    set: function(e, t) {
        this.origin.copy(e);
        this.direction.copy(t);
        return this;
    },
    copy: function(e) {
        this.origin.copy(e.origin);
        this.direction.copy(e.direction);
        return this;
    },
    at: function(e, t) {
        return (t || new THREE.Vector3()).copy(this.direction).multiplyScalar(e).add(this.origin);
    },
    recast: function() {
        var e = new THREE.Vector3();
        return function(t) {
            this.origin.copy(this.at(t, e));
            return this;
        };
    }(),
    closestPointToPoint: function(e, t) {
        var n = t || new THREE.Vector3();
        n.subVectors(e, this.origin);
        var r = n.dot(this.direction);
        return 0 > r ? n.copy(this.origin) : n.copy(this.direction).multiplyScalar(r).add(this.origin);
    },
    distanceToPoint: function() {
        var e = new THREE.Vector3();
        return function(t) {
            var n = e.subVectors(t, this.origin).dot(this.direction);
            if (0 > n) return this.origin.distanceTo(t);
            e.copy(this.direction).multiplyScalar(n).add(this.origin);
            return e.distanceTo(t);
        };
    }(),
    distanceSqToSegment: function(e, t, n, r) {
        var i = e.clone().add(t).multiplyScalar(.5), o = t.clone().sub(e).normalize(), a = .5 * e.distanceTo(t), s = this.origin.clone().sub(i);
        e = -this.direction.dot(o);
        t = s.dot(this.direction);
        var c = -s.dot(o), l = s.lengthSq(), u = Math.abs(1 - e * e), h, f;
        0 <= u ? (s = e * c - t, h = e * t - c, f = a * u, 0 <= s ? h >= -f ? h <= f ? (a = 1 / u, 
        s *= a, h *= a, e = s * (s + e * h + 2 * t) + h * (e * s + h + 2 * c) + l) : (h = a, 
        s = Math.max(0, -(e * h + t)), e = -s * s + h * (h + 2 * c) + l) : (h = -a, s = Math.max(0, -(e * h + t)), 
        e = -s * s + h * (h + 2 * c) + l) : h <= -f ? (s = Math.max(0, -(-e * a + t)), h = 0 < s ? -a : Math.min(Math.max(-a, -c), a), 
        e = -s * s + h * (h + 2 * c) + l) : h <= f ? (s = 0, h = Math.min(Math.max(-a, -c), a), 
        e = h * (h + 2 * c) + l) : (s = Math.max(0, -(e * a + t)), h = 0 < s ? a : Math.min(Math.max(-a, -c), a), 
        e = -s * s + h * (h + 2 * c) + l)) : (h = 0 < e ? -a : a, s = Math.max(0, -(e * h + t)), 
        e = -s * s + h * (h + 2 * c) + l);
        n && n.copy(this.direction.clone().multiplyScalar(s).add(this.origin));
        r && r.copy(o.clone().multiplyScalar(h).add(i));
        return e;
    },
    isIntersectionSphere: function(e) {
        return this.distanceToPoint(e.center) <= e.radius;
    },
    intersectSphere: function() {
        var e = new THREE.Vector3();
        return function(t, n) {
            e.subVectors(t.center, this.origin);
            var r = e.dot(this.direction), i = e.dot(e) - r * r, o = t.radius * t.radius;
            if (i > o) return null;
            o = Math.sqrt(o - i);
            i = r - o;
            r += o;
            return 0 > i && 0 > r ? null : 0 > i ? this.at(r, n) : this.at(i, n);
        };
    }(),
    isIntersectionPlane: function(e) {
        var t = e.distanceToPoint(this.origin);
        return 0 === t || 0 > e.normal.dot(this.direction) * t ? !0 : !1;
    },
    distanceToPlane: function(e) {
        var t = e.normal.dot(this.direction);
        if (0 == t) return 0 == e.distanceToPoint(this.origin) ? 0 : null;
        e = -(this.origin.dot(e.normal) + e.constant) / t;
        return 0 <= e ? e : null;
    },
    intersectPlane: function(e, t) {
        var n = this.distanceToPlane(e);
        return null === n ? null : this.at(n, t);
    },
    isIntersectionBox: function() {
        var e = new THREE.Vector3();
        return function(t) {
            return null !== this.intersectBox(t, e);
        };
    }(),
    intersectBox: function(e, t) {
        var n, r, i, o, a;
        r = 1 / this.direction.x;
        o = 1 / this.direction.y;
        a = 1 / this.direction.z;
        var s = this.origin;
        0 <= r ? (n = (e.min.x - s.x) * r, r *= e.max.x - s.x) : (n = (e.max.x - s.x) * r, 
        r *= e.min.x - s.x);
        0 <= o ? (i = (e.min.y - s.y) * o, o *= e.max.y - s.y) : (i = (e.max.y - s.y) * o, 
        o *= e.min.y - s.y);
        if (n > o || i > r) return null;
        if (i > n || n !== n) n = i;
        if (o < r || r !== r) r = o;
        0 <= a ? (i = (e.min.z - s.z) * a, a *= e.max.z - s.z) : (i = (e.max.z - s.z) * a, 
        a *= e.min.z - s.z);
        if (n > a || i > r) return null;
        if (i > n || n !== n) n = i;
        if (a < r || r !== r) r = a;
        return 0 > r ? null : this.at(0 <= n ? n : r, t);
    },
    intersectTriangle: function() {
        var e = new THREE.Vector3(), t = new THREE.Vector3(), n = new THREE.Vector3(), r = new THREE.Vector3();
        return function(i, o, a, s, c) {
            t.subVectors(o, i);
            n.subVectors(a, i);
            r.crossVectors(t, n);
            o = this.direction.dot(r);
            if (0 < o) {
                if (s) return null;
                s = 1;
            } else if (0 > o) s = -1, o = -o; else return null;
            e.subVectors(this.origin, i);
            i = s * this.direction.dot(n.crossVectors(e, n));
            if (0 > i) return null;
            a = s * this.direction.dot(t.cross(e));
            if (0 > a || i + a > o) return null;
            i = -s * e.dot(r);
            return 0 > i ? null : this.at(i / o, c);
        };
    }(),
    applyMatrix4: function(e) {
        this.direction.add(this.origin).applyMatrix4(e);
        this.origin.applyMatrix4(e);
        this.direction.sub(this.origin);
        this.direction.normalize();
        return this;
    },
    equals: function(e) {
        return e.origin.equals(this.origin) && e.direction.equals(this.direction);
    },
    clone: function() {
        return new THREE.Ray().copy(this);
    }
};

THREE.Sphere = function(e, t) {
    this.center = void 0 !== e ? e : new THREE.Vector3();
    this.radius = void 0 !== t ? t : 0;
};

THREE.Sphere.prototype = {
    constructor: THREE.Sphere,
    set: function(e, t) {
        this.center.copy(e);
        this.radius = t;
        return this;
    },
    setFromPoints: function() {
        var e = new THREE.Box3();
        return function(t, n) {
            var r = this.center;
            void 0 !== n ? r.copy(n) : e.setFromPoints(t).center(r);
            for (var i = 0, o = 0, a = t.length; o < a; o++) i = Math.max(i, r.distanceToSquared(t[o]));
            this.radius = Math.sqrt(i);
            return this;
        };
    }(),
    copy: function(e) {
        this.center.copy(e.center);
        this.radius = e.radius;
        return this;
    },
    empty: function() {
        return 0 >= this.radius;
    },
    containsPoint: function(e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius;
    },
    distanceToPoint: function(e) {
        return e.distanceTo(this.center) - this.radius;
    },
    intersectsSphere: function(e) {
        var t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t;
    },
    clampPoint: function(e, t) {
        var n = this.center.distanceToSquared(e), r = t || new THREE.Vector3();
        r.copy(e);
        n > this.radius * this.radius && (r.sub(this.center).normalize(), r.multiplyScalar(this.radius).add(this.center));
        return r;
    },
    getBoundingBox: function(e) {
        e = e || new THREE.Box3();
        e.set(this.center, this.center);
        e.expandByScalar(this.radius);
        return e;
    },
    applyMatrix4: function(e) {
        this.center.applyMatrix4(e);
        this.radius *= e.getMaxScaleOnAxis();
        return this;
    },
    translate: function(e) {
        this.center.add(e);
        return this;
    },
    equals: function(e) {
        return e.center.equals(this.center) && e.radius === this.radius;
    },
    clone: function() {
        return new THREE.Sphere().copy(this);
    }
};

THREE.Frustum = function(e, t, n, r, i, o) {
    this.planes = [ void 0 !== e ? e : new THREE.Plane(), void 0 !== t ? t : new THREE.Plane(), void 0 !== n ? n : new THREE.Plane(), void 0 !== r ? r : new THREE.Plane(), void 0 !== i ? i : new THREE.Plane(), void 0 !== o ? o : new THREE.Plane() ];
};

THREE.Frustum.prototype = {
    constructor: THREE.Frustum,
    set: function(e, t, n, r, i, o) {
        var a = this.planes;
        a[0].copy(e);
        a[1].copy(t);
        a[2].copy(n);
        a[3].copy(r);
        a[4].copy(i);
        a[5].copy(o);
        return this;
    },
    copy: function(e) {
        for (var t = this.planes, n = 0; 6 > n; n++) t[n].copy(e.planes[n]);
        return this;
    },
    setFromMatrix: function(e) {
        var t = this.planes, n = e.elements;
        e = n[0];
        var r = n[1], i = n[2], o = n[3], a = n[4], s = n[5], c = n[6], l = n[7], u = n[8], h = n[9], f = n[10], p = n[11], d = n[12], m = n[13], E = n[14], n = n[15];
        t[0].setComponents(o - e, l - a, p - u, n - d).normalize();
        t[1].setComponents(o + e, l + a, p + u, n + d).normalize();
        t[2].setComponents(o + r, l + s, p + h, n + m).normalize();
        t[3].setComponents(o - r, l - s, p - h, n - m).normalize();
        t[4].setComponents(o - i, l - c, p - f, n - E).normalize();
        t[5].setComponents(o + i, l + c, p + f, n + E).normalize();
        return this;
    },
    intersectsObject: function() {
        var e = new THREE.Sphere();
        return function(t) {
            var n = t.geometry;
            null === n.boundingSphere && n.computeBoundingSphere();
            e.copy(n.boundingSphere);
            e.applyMatrix4(t.matrixWorld);
            return this.intersectsSphere(e);
        };
    }(),
    intersectsSphere: function(e) {
        var t = this.planes, n = e.center;
        e = -e.radius;
        for (var r = 0; 6 > r; r++) if (t[r].distanceToPoint(n) < e) return !1;
        return !0;
    },
    intersectsBox: function() {
        var e = new THREE.Vector3(), t = new THREE.Vector3();
        return function(n) {
            for (var r = this.planes, i = 0; 6 > i; i++) {
                var o = r[i];
                e.x = 0 < o.normal.x ? n.min.x : n.max.x;
                t.x = 0 < o.normal.x ? n.max.x : n.min.x;
                e.y = 0 < o.normal.y ? n.min.y : n.max.y;
                t.y = 0 < o.normal.y ? n.max.y : n.min.y;
                e.z = 0 < o.normal.z ? n.min.z : n.max.z;
                t.z = 0 < o.normal.z ? n.max.z : n.min.z;
                var a = o.distanceToPoint(e), o = o.distanceToPoint(t);
                if (0 > a && 0 > o) return !1;
            }
            return !0;
        };
    }(),
    containsPoint: function(e) {
        for (var t = this.planes, n = 0; 6 > n; n++) if (0 > t[n].distanceToPoint(e)) return !1;
        return !0;
    },
    clone: function() {
        return new THREE.Frustum().copy(this);
    }
};

THREE.Plane = function(e, t) {
    this.normal = void 0 !== e ? e : new THREE.Vector3(1, 0, 0);
    this.constant = void 0 !== t ? t : 0;
};

THREE.Plane.prototype = {
    constructor: THREE.Plane,
    set: function(e, t) {
        this.normal.copy(e);
        this.constant = t;
        return this;
    },
    setComponents: function(e, t, n, r) {
        this.normal.set(e, t, n);
        this.constant = r;
        return this;
    },
    setFromNormalAndCoplanarPoint: function(e, t) {
        this.normal.copy(e);
        this.constant = -t.dot(this.normal);
        return this;
    },
    setFromCoplanarPoints: function() {
        var e = new THREE.Vector3(), t = new THREE.Vector3();
        return function(n, r, i) {
            r = e.subVectors(i, r).cross(t.subVectors(n, r)).normalize();
            this.setFromNormalAndCoplanarPoint(r, n);
            return this;
        };
    }(),
    copy: function(e) {
        this.normal.copy(e.normal);
        this.constant = e.constant;
        return this;
    },
    normalize: function() {
        var e = 1 / this.normal.length();
        this.normal.multiplyScalar(e);
        this.constant *= e;
        return this;
    },
    negate: function() {
        this.constant *= -1;
        this.normal.negate();
        return this;
    },
    distanceToPoint: function(e) {
        return this.normal.dot(e) + this.constant;
    },
    distanceToSphere: function(e) {
        return this.distanceToPoint(e.center) - e.radius;
    },
    projectPoint: function(e, t) {
        return this.orthoPoint(e, t).sub(e).negate();
    },
    orthoPoint: function(e, t) {
        var n = this.distanceToPoint(e);
        return (t || new THREE.Vector3()).copy(this.normal).multiplyScalar(n);
    },
    isIntersectionLine: function(e) {
        var t = this.distanceToPoint(e.start);
        e = this.distanceToPoint(e.end);
        return 0 > t && 0 < e || 0 > e && 0 < t;
    },
    intersectLine: function() {
        var e = new THREE.Vector3();
        return function(t, n) {
            var r = n || new THREE.Vector3(), i = t.delta(e), o = this.normal.dot(i);
            if (0 == o) {
                if (0 == this.distanceToPoint(t.start)) return r.copy(t.start);
            } else return o = -(t.start.dot(this.normal) + this.constant) / o, 0 > o || 1 < o ? void 0 : r.copy(i).multiplyScalar(o).add(t.start);
        };
    }(),
    coplanarPoint: function(e) {
        return (e || new THREE.Vector3()).copy(this.normal).multiplyScalar(-this.constant);
    },
    applyMatrix4: function() {
        var e = new THREE.Vector3(), t = new THREE.Vector3(), n = new THREE.Matrix3();
        return function(r, i) {
            var o = i || n.getNormalMatrix(r), o = e.copy(this.normal).applyMatrix3(o), a = this.coplanarPoint(t);
            a.applyMatrix4(r);
            this.setFromNormalAndCoplanarPoint(o, a);
            return this;
        };
    }(),
    translate: function(e) {
        this.constant -= e.dot(this.normal);
        return this;
    },
    equals: function(e) {
        return e.normal.equals(this.normal) && e.constant == this.constant;
    },
    clone: function() {
        return new THREE.Plane().copy(this);
    }
};

THREE.Math = {
    generateUUID: function() {
        var e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), t = Array(36), n = 0, r;
        return function() {
            for (var i = 0; 36 > i; i++) 8 == i || 13 == i || 18 == i || 23 == i ? t[i] = "-" : 14 == i ? t[i] = "4" : (2 >= n && (n = 33554432 + 16777216 * Math.random() | 0), 
            r = n & 15, n >>= 4, t[i] = e[19 == i ? r & 3 | 8 : r]);
            return t.join("");
        };
    }(),
    clamp: function(e, t, n) {
        return e < t ? t : e > n ? n : e;
    },
    clampBottom: function(e, t) {
        return e < t ? t : e;
    },
    mapLinear: function(e, t, n, r, i) {
        return r + (e - t) * (i - r) / (n - t);
    },
    smoothstep: function(e, t, n) {
        if (e <= t) return 0;
        if (e >= n) return 1;
        e = (e - t) / (n - t);
        return e * e * (3 - 2 * e);
    },
    smootherstep: function(e, t, n) {
        if (e <= t) return 0;
        if (e >= n) return 1;
        e = (e - t) / (n - t);
        return e * e * e * (e * (6 * e - 15) + 10);
    },
    random16: function() {
        return (65280 * Math.random() + 255 * Math.random()) / 65535;
    },
    randInt: function(e, t) {
        return e + Math.floor(Math.random() * (t - e + 1));
    },
    randFloat: function(e, t) {
        return e + Math.random() * (t - e);
    },
    randFloatSpread: function(e) {
        return e * (.5 - Math.random());
    },
    sign: function(e) {
        return 0 > e ? -1 : 0 < e ? 1 : 0;
    },
    degToRad: function() {
        var e = Math.PI / 180;
        return function(t) {
            return t * e;
        };
    }(),
    radToDeg: function() {
        var e = 180 / Math.PI;
        return function(t) {
            return t * e;
        };
    }(),
    isPowerOfTwo: function(e) {
        return 0 === (e & e - 1) && 0 !== e;
    }
};

THREE.Spline = function(e) {
    function t(e, t, n, r, i, o, a) {
        e = .5 * (n - e);
        r = .5 * (r - t);
        return (2 * (t - n) + e + r) * a + (-3 * (t - n) - 2 * e - r) * o + e * i + t;
    }
    this.points = e;
    var n = [], r = {
        x: 0,
        y: 0,
        z: 0
    }, i, o, a, s, c, l, u, h, f;
    this.initFromArray = function(e) {
        this.points = [];
        for (var t = 0; t < e.length; t++) this.points[t] = {
            x: e[t][0],
            y: e[t][1],
            z: e[t][2]
        };
    };
    this.getPoint = function(e) {
        i = (this.points.length - 1) * e;
        o = Math.floor(i);
        a = i - o;
        n[0] = 0 === o ? o : o - 1;
        n[1] = o;
        n[2] = o > this.points.length - 2 ? this.points.length - 1 : o + 1;
        n[3] = o > this.points.length - 3 ? this.points.length - 1 : o + 2;
        l = this.points[n[0]];
        u = this.points[n[1]];
        h = this.points[n[2]];
        f = this.points[n[3]];
        s = a * a;
        c = a * s;
        r.x = t(l.x, u.x, h.x, f.x, a, s, c);
        r.y = t(l.y, u.y, h.y, f.y, a, s, c);
        r.z = t(l.z, u.z, h.z, f.z, a, s, c);
        return r;
    };
    this.getControlPointsArray = function() {
        var e, t, n = this.points.length, r = [];
        for (e = 0; e < n; e++) t = this.points[e], r[e] = [ t.x, t.y, t.z ];
        return r;
    };
    this.getLength = function(e) {
        var t, n, r, i = t = t = 0, o = new THREE.Vector3(), a = new THREE.Vector3(), s = [], c = 0;
        s[0] = 0;
        e || (e = 100);
        n = this.points.length * e;
        o.copy(this.points[0]);
        for (e = 1; e < n; e++) t = e / n, r = this.getPoint(t), a.copy(r), c += a.distanceTo(o), 
        o.copy(r), t *= this.points.length - 1, t = Math.floor(t), t != i && (s[t] = c, 
        i = t);
        s[s.length] = c;
        return {
            chunks: s,
            total: c
        };
    };
    this.reparametrizeByArcLength = function(e) {
        var t, n, r, i, o, a, s = [], c = new THREE.Vector3(), l = this.getLength();
        s.push(c.copy(this.points[0]).clone());
        for (t = 1; t < this.points.length; t++) {
            n = l.chunks[t] - l.chunks[t - 1];
            a = Math.ceil(e * n / l.total);
            i = (t - 1) / (this.points.length - 1);
            o = t / (this.points.length - 1);
            for (n = 1; n < a - 1; n++) r = i + 1 / a * n * (o - i), r = this.getPoint(r), s.push(c.copy(r).clone());
            s.push(c.copy(this.points[t]).clone());
        }
        this.points = s;
    };
};

THREE.Triangle = function(e, t, n) {
    this.a = void 0 !== e ? e : new THREE.Vector3();
    this.b = void 0 !== t ? t : new THREE.Vector3();
    this.c = void 0 !== n ? n : new THREE.Vector3();
};

THREE.Triangle.normal = function() {
    var e = new THREE.Vector3();
    return function(t, n, r, i) {
        i = i || new THREE.Vector3();
        i.subVectors(r, n);
        e.subVectors(t, n);
        i.cross(e);
        t = i.lengthSq();
        return 0 < t ? i.multiplyScalar(1 / Math.sqrt(t)) : i.set(0, 0, 0);
    };
}();

THREE.Triangle.barycoordFromPoint = function() {
    var e = new THREE.Vector3(), t = new THREE.Vector3(), n = new THREE.Vector3();
    return function(r, i, o, a, s) {
        e.subVectors(a, i);
        t.subVectors(o, i);
        n.subVectors(r, i);
        r = e.dot(e);
        i = e.dot(t);
        o = e.dot(n);
        var c = t.dot(t);
        a = t.dot(n);
        var l = r * c - i * i;
        s = s || new THREE.Vector3();
        if (0 == l) return s.set(-2, -1, -1);
        l = 1 / l;
        c = (c * o - i * a) * l;
        r = (r * a - i * o) * l;
        return s.set(1 - c - r, r, c);
    };
}();

THREE.Triangle.containsPoint = function() {
    var e = new THREE.Vector3();
    return function(t, n, r, i) {
        t = THREE.Triangle.barycoordFromPoint(t, n, r, i, e);
        return 0 <= t.x && 0 <= t.y && 1 >= t.x + t.y;
    };
}();

THREE.Triangle.prototype = {
    constructor: THREE.Triangle,
    set: function(e, t, n) {
        this.a.copy(e);
        this.b.copy(t);
        this.c.copy(n);
        return this;
    },
    setFromPointsAndIndices: function(e, t, n, r) {
        this.a.copy(e[t]);
        this.b.copy(e[n]);
        this.c.copy(e[r]);
        return this;
    },
    copy: function(e) {
        this.a.copy(e.a);
        this.b.copy(e.b);
        this.c.copy(e.c);
        return this;
    },
    area: function() {
        var e = new THREE.Vector3(), t = new THREE.Vector3();
        return function() {
            e.subVectors(this.c, this.b);
            t.subVectors(this.a, this.b);
            return .5 * e.cross(t).length();
        };
    }(),
    midpoint: function(e) {
        return (e || new THREE.Vector3()).addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
    },
    normal: function(e) {
        return THREE.Triangle.normal(this.a, this.b, this.c, e);
    },
    plane: function(e) {
        return (e || new THREE.Plane()).setFromCoplanarPoints(this.a, this.b, this.c);
    },
    barycoordFromPoint: function(e, t) {
        return THREE.Triangle.barycoordFromPoint(e, this.a, this.b, this.c, t);
    },
    containsPoint: function(e) {
        return THREE.Triangle.containsPoint(e, this.a, this.b, this.c);
    },
    equals: function(e) {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
    },
    clone: function() {
        return new THREE.Triangle().copy(this);
    }
};

THREE.Clock = function(e) {
    this.autoStart = void 0 !== e ? e : !0;
    this.elapsedTime = this.oldTime = this.startTime = 0;
    this.running = !1;
};

THREE.Clock.prototype = {
    constructor: THREE.Clock,
    start: function() {
        this.oldTime = this.startTime = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now();
        this.running = !0;
    },
    stop: function() {
        this.getElapsedTime();
        this.running = !1;
    },
    getElapsedTime: function() {
        this.getDelta();
        return this.elapsedTime;
    },
    getDelta: function() {
        var e = 0;
        this.autoStart && !this.running && this.start();
        if (this.running) {
            var t = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now(), e = .001 * (t - this.oldTime);
            this.oldTime = t;
            this.elapsedTime += e;
        }
        return e;
    }
};

THREE.EventDispatcher = function() {};

THREE.EventDispatcher.prototype = {
    constructor: THREE.EventDispatcher,
    apply: function(e) {
        e.addEventListener = THREE.EventDispatcher.prototype.addEventListener;
        e.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;
        e.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;
        e.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;
    },
    addEventListener: function(e, t) {
        void 0 === this._listeners && (this._listeners = {});
        var n = this._listeners;
        void 0 === n[e] && (n[e] = []);
        -1 === n[e].indexOf(t) && n[e].push(t);
    },
    hasEventListener: function(e, t) {
        if (void 0 === this._listeners) return !1;
        var n = this._listeners;
        return void 0 !== n[e] && -1 !== n[e].indexOf(t) ? !0 : !1;
    },
    removeEventListener: function(e, t) {
        if (void 0 !== this._listeners) {
            var n = this._listeners[e];
            if (void 0 !== n) {
                var r = n.indexOf(t);
                -1 !== r && n.splice(r, 1);
            }
        }
    },
    dispatchEvent: function(e) {
        if (void 0 !== this._listeners) {
            var t = this._listeners[e.type];
            if (void 0 !== t) {
                e.target = this;
                for (var n = [], r = t.length, i = 0; i < r; i++) n[i] = t[i];
                for (i = 0; i < r; i++) n[i].call(this, e);
            }
        }
    }
};

(function(e) {
    e.Raycaster = function(t, n, r, i) {
        this.ray = new e.Ray(t, n);
        this.near = r || 0;
        this.far = i || Infinity;
        this.params = {
            Sprite: {},
            Mesh: {},
            PointCloud: {
                threshold: 1
            },
            LOD: {},
            Line: {}
        };
    };
    var t = function(e, t) {
        return e.distance - t.distance;
    }, n = function(e, t, r, i) {
        e.raycast(t, r);
        if (!0 === i) {
            e = e.children;
            i = 0;
            for (var o = e.length; i < o; i++) n(e[i], t, r, !0);
        }
    };
    e.Raycaster.prototype = {
        constructor: e.Raycaster,
        precision: 1e-4,
        linePrecision: 1,
        set: function(e, t) {
            this.ray.set(e, t);
        },
        intersectObject: function(e, r) {
            var i = [];
            n(e, this, i, r);
            i.sort(t);
            return i;
        },
        intersectObjects: function(e, r) {
            for (var i = [], o = 0, a = e.length; o < a; o++) n(e[o], this, i, r);
            i.sort(t);
            return i;
        }
    };
})(THREE);

THREE.Object3D = function() {
    this.id = THREE.Object3DIdCount++;
    this.uuid = THREE.Math.generateUUID();
    this.name = "";
    this.parent = void 0;
    this.children = [];
    this.up = THREE.Object3D.DefaultUp.clone();
    var e = new THREE.Vector3(), t = new THREE.Euler(), n = new THREE.Quaternion(), r = new THREE.Vector3(1, 1, 1);
    t.onChange(function() {
        n.setFromEuler(t, !1);
    });
    n.onChange(function() {
        t.setFromQuaternion(n, void 0, !1);
    });
    Object.defineProperties(this, {
        position: {
            enumerable: !0,
            value: e
        },
        rotation: {
            enumerable: !0,
            value: t
        },
        quaternion: {
            enumerable: !0,
            value: n
        },
        scale: {
            enumerable: !0,
            value: r
        }
    });
    this.renderDepth = null;
    this.rotationAutoUpdate = !0;
    this.matrix = new THREE.Matrix4();
    this.matrixWorld = new THREE.Matrix4();
    this.matrixAutoUpdate = !0;
    this.matrixWorldNeedsUpdate = !1;
    this.visible = !0;
    this.receiveShadow = this.castShadow = !1;
    this.frustumCulled = !0;
    this.userData = {};
};

THREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0);

THREE.Object3D.prototype = {
    constructor: THREE.Object3D,
    get eulerOrder() {
        console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");
        return this.rotation.order;
    },
    set eulerOrder(e) {
        console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");
        this.rotation.order = e;
    },
    get useQuaternion() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
    },
    set useQuaternion(e) {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
    },
    applyMatrix: function(e) {
        this.matrix.multiplyMatrices(e, this.matrix);
        this.matrix.decompose(this.position, this.quaternion, this.scale);
    },
    setRotationFromAxisAngle: function(e, t) {
        this.quaternion.setFromAxisAngle(e, t);
    },
    setRotationFromEuler: function(e) {
        this.quaternion.setFromEuler(e, !0);
    },
    setRotationFromMatrix: function(e) {
        this.quaternion.setFromRotationMatrix(e);
    },
    setRotationFromQuaternion: function(e) {
        this.quaternion.copy(e);
    },
    rotateOnAxis: function() {
        var e = new THREE.Quaternion();
        return function(t, n) {
            e.setFromAxisAngle(t, n);
            this.quaternion.multiply(e);
            return this;
        };
    }(),
    rotateX: function() {
        var e = new THREE.Vector3(1, 0, 0);
        return function(t) {
            return this.rotateOnAxis(e, t);
        };
    }(),
    rotateY: function() {
        var e = new THREE.Vector3(0, 1, 0);
        return function(t) {
            return this.rotateOnAxis(e, t);
        };
    }(),
    rotateZ: function() {
        var e = new THREE.Vector3(0, 0, 1);
        return function(t) {
            return this.rotateOnAxis(e, t);
        };
    }(),
    translateOnAxis: function() {
        var e = new THREE.Vector3();
        return function(t, n) {
            e.copy(t).applyQuaternion(this.quaternion);
            this.position.add(e.multiplyScalar(n));
            return this;
        };
    }(),
    translate: function(e, t) {
        console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");
        return this.translateOnAxis(t, e);
    },
    translateX: function() {
        var e = new THREE.Vector3(1, 0, 0);
        return function(t) {
            return this.translateOnAxis(e, t);
        };
    }(),
    translateY: function() {
        var e = new THREE.Vector3(0, 1, 0);
        return function(t) {
            return this.translateOnAxis(e, t);
        };
    }(),
    translateZ: function() {
        var e = new THREE.Vector3(0, 0, 1);
        return function(t) {
            return this.translateOnAxis(e, t);
        };
    }(),
    localToWorld: function(e) {
        return e.applyMatrix4(this.matrixWorld);
    },
    worldToLocal: function() {
        var e = new THREE.Matrix4();
        return function(t) {
            return t.applyMatrix4(e.getInverse(this.matrixWorld));
        };
    }(),
    lookAt: function() {
        var e = new THREE.Matrix4();
        return function(t) {
            e.lookAt(t, this.position, this.up);
            this.quaternion.setFromRotationMatrix(e);
        };
    }(),
    add: function(e) {
        if (1 < arguments.length) {
            for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
            return this;
        }
        if (e === this) return console.error("THREE.Object3D.add:", e, "can't be added as a child of itself."), 
        this;
        if (e instanceof THREE.Object3D) {
            void 0 !== e.parent && e.parent.remove(e);
            e.parent = this;
            e.dispatchEvent({
                type: "added"
            });
            this.children.push(e);
            for (t = this; void 0 !== t.parent; ) t = t.parent;
            void 0 !== t && t instanceof THREE.Scene && t.__addObject(e);
        } else console.error("THREE.Object3D.add:", e, "is not an instance of THREE.Object3D.");
        return this;
    },
    remove: function(e) {
        if (1 < arguments.length) for (var t = 0; t < arguments.length; t++) this.remove(arguments[t]);
        t = this.children.indexOf(e);
        if (-1 !== t) {
            e.parent = void 0;
            e.dispatchEvent({
                type: "removed"
            });
            this.children.splice(t, 1);
            for (t = this; void 0 !== t.parent; ) t = t.parent;
            void 0 !== t && t instanceof THREE.Scene && t.__removeObject(e);
        }
    },
    raycast: function() {},
    traverse: function(e) {
        e(this);
        for (var t = 0, n = this.children.length; t < n; t++) this.children[t].traverse(e);
    },
    traverseVisible: function(e) {
        if (!1 !== this.visible) {
            e(this);
            for (var t = 0, n = this.children.length; t < n; t++) this.children[t].traverseVisible(e);
        }
    },
    getObjectById: function(e, t) {
        for (var n = 0, r = this.children.length; n < r; n++) {
            var i = this.children[n];
            if (i.id === e || !0 === t && (i = i.getObjectById(e, t), void 0 !== i)) return i;
        }
    },
    getObjectByName: function(e, t) {
        for (var n = 0, r = this.children.length; n < r; n++) {
            var i = this.children[n];
            if (i.name === e || !0 === t && (i = i.getObjectByName(e, t), void 0 !== i)) return i;
        }
    },
    getChildByName: function(e, t) {
        console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");
        return this.getObjectByName(e, t);
    },
    updateMatrix: function() {
        this.matrix.compose(this.position, this.quaternion, this.scale);
        this.matrixWorldNeedsUpdate = !0;
    },
    updateMatrixWorld: function(e) {
        !0 === this.matrixAutoUpdate && this.updateMatrix();
        if (!0 === this.matrixWorldNeedsUpdate || !0 === e) void 0 === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), 
        this.matrixWorldNeedsUpdate = !1, e = !0;
        for (var t = 0, n = this.children.length; t < n; t++) this.children[t].updateMatrixWorld(e);
    },
    clone: function(e, t) {
        void 0 === e && (e = new THREE.Object3D());
        void 0 === t && (t = !0);
        e.name = this.name;
        e.up.copy(this.up);
        e.position.copy(this.position);
        e.quaternion.copy(this.quaternion);
        e.scale.copy(this.scale);
        e.renderDepth = this.renderDepth;
        e.rotationAutoUpdate = this.rotationAutoUpdate;
        e.matrix.copy(this.matrix);
        e.matrixWorld.copy(this.matrixWorld);
        e.matrixAutoUpdate = this.matrixAutoUpdate;
        e.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;
        e.visible = this.visible;
        e.castShadow = this.castShadow;
        e.receiveShadow = this.receiveShadow;
        e.frustumCulled = this.frustumCulled;
        e.userData = JSON.parse(JSON.stringify(this.userData));
        if (!0 === t) for (var n = 0; n < this.children.length; n++) e.add(this.children[n].clone());
        return e;
    }
};

THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);

THREE.Object3DIdCount = 0;

THREE.Projector = function() {
    function e() {
        if (h === p) {
            var e = new THREE.RenderableVertex();
            f.push(e);
            p++;
            h++;
            return e;
        }
        return f[h++];
    }
    function t() {
        if (m === v) {
            var e = new THREE.RenderableFace();
            E.push(e);
            v++;
            m++;
            return e;
        }
        return E[m++];
    }
    function n() {
        if (y === x) {
            var e = new THREE.RenderableLine();
            T.push(e);
            x++;
            y++;
            return e;
        }
        return T[y++];
    }
    function r() {
        if (_ === w) {
            var e = new THREE.RenderableSprite();
            b.push(e);
            w++;
            _++;
            return e;
        }
        return b[_++];
    }
    function i(e, t) {
        return e.z !== t.z ? t.z - e.z : e.id !== t.id ? e.id - t.id : 0;
    }
    function o(e, t) {
        var n = 0, r = 1, i = e.z + e.w, o = t.z + t.w, a = -e.z + e.w, s = -t.z + t.w;
        if (0 <= i && 0 <= o && 0 <= a && 0 <= s) return !0;
        if (0 > i && 0 > o || 0 > a && 0 > s) return !1;
        0 > i ? n = Math.max(n, i / (i - o)) : 0 > o && (r = Math.min(r, i / (i - o)));
        0 > a ? n = Math.max(n, a / (a - s)) : 0 > s && (r = Math.min(r, a / (a - s)));
        if (r < n) return !1;
        e.lerp(t, n);
        t.lerp(e, 1 - r);
        return !0;
    }
    var a, s, c = [], l = 0, u, h, f = [], p = 0, d, m, E = [], v = 0, g, y, T = [], x = 0, R, _, b = [], w = 0, H = {
        objects: [],
        lights: [],
        elements: []
    }, S = new THREE.Vector3(), M = new THREE.Vector3(), C = new THREE.Vector3(), A = new THREE.Vector3(), P = new THREE.Vector4(), k = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)), L = new THREE.Box3(), F = Array(3), D = new THREE.Matrix4(), U = new THREE.Matrix4(), V, O = new THREE.Matrix4(), z = new THREE.Matrix3(), B = new THREE.Frustum(), j = new THREE.Vector4(), $ = new THREE.Vector4();
    this.projectVector = function(e, t) {
        t.matrixWorldInverse.getInverse(t.matrixWorld);
        U.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse);
        return e.applyProjection(U);
    };
    this.unprojectVector = function() {
        var e = new THREE.Matrix4();
        return function(t, n) {
            e.getInverse(n.projectionMatrix);
            U.multiplyMatrices(n.matrixWorld, e);
            return t.applyProjection(U);
        };
    }();
    this.pickingRay = function(e, t) {
        e.z = -1;
        var n = new THREE.Vector3(e.x, e.y, 1);
        this.unprojectVector(e, t);
        this.unprojectVector(n, t);
        n.sub(e).normalize();
        return new THREE.Raycaster(e, n);
    };
    var N = new function() {
        var r = [], i = [], o = null, a = null, s = new THREE.Matrix3(), c = function(e) {
            var t = e.positionWorld, n = e.positionScreen;
            t.copy(e.position).applyMatrix4(V);
            n.copy(t).applyMatrix4(U);
            t = 1 / n.w;
            n.x *= t;
            n.y *= t;
            n.z *= t;
            e.visible = -1 <= n.x && 1 >= n.x && -1 <= n.y && 1 >= n.y && -1 <= n.z && 1 >= n.z;
        }, l = function(e, t, n) {
            if (!0 === e.visible || !0 === t.visible || !0 === n.visible) return !0;
            F[0] = e.positionScreen;
            F[1] = t.positionScreen;
            F[2] = n.positionScreen;
            return k.isIntersectionBox(L.setFromPoints(F));
        }, h = function(e, t, n) {
            return 0 > (n.positionScreen.x - e.positionScreen.x) * (t.positionScreen.y - e.positionScreen.y) - (n.positionScreen.y - e.positionScreen.y) * (t.positionScreen.x - e.positionScreen.x);
        };
        return {
            setObject: function(e) {
                o = e;
                a = o.material;
                s.getNormalMatrix(o.matrixWorld);
                r.length = 0;
                i.length = 0;
            },
            projectVertex: c,
            checkTriangleVisibility: l,
            checkBackfaceCulling: h,
            pushVertex: function(t, n, r) {
                u = e();
                u.position.set(t, n, r);
                c(u);
            },
            pushNormal: function(e, t, n) {
                r.push(e, t, n);
            },
            pushUv: function(e, t) {
                i.push(e, t);
            },
            pushLine: function(e, t) {
                var r = f[e], i = f[t];
                g = n();
                g.id = o.id;
                g.v1.copy(r);
                g.v2.copy(i);
                g.z = (r.positionScreen.z + i.positionScreen.z) / 2;
                g.material = o.material;
                H.elements.push(g);
            },
            pushTriangle: function(e, n, c) {
                var u = f[e], p = f[n], m = f[c];
                if (!1 !== l(u, p, m) && (a.side === THREE.DoubleSide || !0 === h(u, p, m))) {
                    d = t();
                    d.id = o.id;
                    d.v1.copy(u);
                    d.v2.copy(p);
                    d.v3.copy(m);
                    d.z = (u.positionScreen.z + p.positionScreen.z + m.positionScreen.z) / 3;
                    for (u = 0; 3 > u; u++) p = 3 * arguments[u], m = d.vertexNormalsModel[u], m.set(r[p], r[p + 1], r[p + 2]), 
                    m.applyMatrix3(s).normalize(), p = 2 * arguments[u], d.uvs[u].set(i[p], i[p + 1]);
                    d.vertexNormalsLength = 3;
                    d.material = o.material;
                    H.elements.push(d);
                }
            }
        };
    }();
    this.projectScene = function(u, p, E, v) {
        _ = y = m = 0;
        H.elements.length = 0;
        !0 === u.autoUpdate && u.updateMatrixWorld();
        void 0 === p.parent && p.updateMatrixWorld();
        D.copy(p.matrixWorldInverse.getInverse(p.matrixWorld));
        U.multiplyMatrices(p.projectionMatrix, D);
        B.setFromMatrix(U);
        s = 0;
        H.objects.length = 0;
        H.lights.length = 0;
        u.traverseVisible(function(e) {
            if (e instanceof THREE.Light) H.lights.push(e); else if (e instanceof THREE.Mesh || e instanceof THREE.Line || e instanceof THREE.Sprite) if (!1 === e.frustumCulled || !0 === B.intersectsObject(e)) {
                if (s === l) {
                    var t = new THREE.RenderableObject();
                    c.push(t);
                    l++;
                    s++;
                    a = t;
                } else a = c[s++];
                a.id = e.id;
                a.object = e;
                null !== e.renderDepth ? a.z = e.renderDepth : (A.setFromMatrixPosition(e.matrixWorld), 
                A.applyProjection(U), a.z = A.z);
                H.objects.push(a);
            }
        });
        !0 === E && H.objects.sort(i);
        u = 0;
        for (E = H.objects.length; u < E; u++) {
            var T = H.objects[u].object, x = T.geometry;
            N.setObject(T);
            V = T.matrixWorld;
            h = 0;
            if (T instanceof THREE.Mesh) if (x instanceof THREE.BufferGeometry) {
                var b = x.attributes, T = x.offsets;
                if (void 0 !== b.position) {
                    for (var w = b.position.array, x = 0, k = w.length; x < k; x += 3) N.pushVertex(w[x], w[x + 1], w[x + 2]);
                    if (void 0 !== b.normal) for (var L = b.normal.array, x = 0, k = L.length; x < k; x += 3) N.pushNormal(L[x], L[x + 1], L[x + 2]);
                    if (void 0 !== b.uv) for (L = b.uv.array, x = 0, k = L.length; x < k; x += 2) N.pushUv(L[x], L[x + 1]);
                    if (void 0 !== b.index) if (b = b.index.array, 0 < T.length) for (u = 0; u < T.length; u++) for (k = T[u], 
                    w = k.index, x = k.start, k = k.start + k.count; x < k; x += 3) N.pushTriangle(b[x] + w, b[x + 1] + w, b[x + 2] + w); else for (x = 0, 
                    k = b.length; x < k; x += 3) N.pushTriangle(b[x], b[x + 1], b[x + 2]); else for (x = 0, 
                    k = w.length / 3; x < k; x += 3) N.pushTriangle(x, x + 1, x + 2);
                }
            } else {
                if (x instanceof THREE.Geometry) {
                    var F = x.vertices, k = x.faces, b = x.faceVertexUvs[0];
                    z.getNormalMatrix(V);
                    for (var w = T.material instanceof THREE.MeshFaceMaterial, L = !0 === w ? T.material : null, I = 0, G = F.length; I < G; I++) {
                        var W = F[I];
                        N.pushVertex(W.x, W.y, W.z);
                    }
                    F = 0;
                    for (I = k.length; F < I; F++) {
                        var G = k[F], X = !0 === w ? L.materials[G.materialIndex] : T.material;
                        if (void 0 !== X) {
                            var q = X.side, W = f[G.a], Y = f[G.b], K = f[G.c];
                            if (!0 === X.morphTargets) {
                                var Z = x.morphTargets, Q = T.morphTargetInfluences, J = W.position, et = Y.position, tt = K.position;
                                S.set(0, 0, 0);
                                M.set(0, 0, 0);
                                C.set(0, 0, 0);
                                for (var nt = 0, rt = Z.length; nt < rt; nt++) {
                                    var it = Q[nt];
                                    if (0 !== it) {
                                        var ot = Z[nt].vertices;
                                        S.x += (ot[G.a].x - J.x) * it;
                                        S.y += (ot[G.a].y - J.y) * it;
                                        S.z += (ot[G.a].z - J.z) * it;
                                        M.x += (ot[G.b].x - et.x) * it;
                                        M.y += (ot[G.b].y - et.y) * it;
                                        M.z += (ot[G.b].z - et.z) * it;
                                        C.x += (ot[G.c].x - tt.x) * it;
                                        C.y += (ot[G.c].y - tt.y) * it;
                                        C.z += (ot[G.c].z - tt.z) * it;
                                    }
                                }
                                W.position.add(S);
                                Y.position.add(M);
                                K.position.add(C);
                                N.projectVertex(W);
                                N.projectVertex(Y);
                                N.projectVertex(K);
                            }
                            if (!1 !== N.checkTriangleVisibility(W, Y, K)) {
                                Z = N.checkBackfaceCulling(W, Y, K);
                                if (q !== THREE.DoubleSide) {
                                    if (q === THREE.FrontSide && !1 === Z) continue;
                                    if (q === THREE.BackSide && !0 === Z) continue;
                                }
                                d = t();
                                d.id = T.id;
                                d.v1.copy(W);
                                d.v2.copy(Y);
                                d.v3.copy(K);
                                d.normalModel.copy(G.normal);
                                !1 !== Z || q !== THREE.BackSide && q !== THREE.DoubleSide || d.normalModel.negate();
                                d.normalModel.applyMatrix3(z).normalize();
                                Q = G.vertexNormals;
                                J = 0;
                                for (et = Math.min(Q.length, 3); J < et; J++) tt = d.vertexNormalsModel[J], tt.copy(Q[J]), 
                                !1 !== Z || q !== THREE.BackSide && q !== THREE.DoubleSide || tt.negate(), tt.applyMatrix3(z).normalize();
                                d.vertexNormalsLength = Q.length;
                                q = b[F];
                                if (void 0 !== q) for (Z = 0; 3 > Z; Z++) d.uvs[Z].copy(q[Z]);
                                d.color = G.color;
                                d.material = X;
                                d.z = (W.positionScreen.z + Y.positionScreen.z + K.positionScreen.z) / 3;
                                H.elements.push(d);
                            }
                        }
                    }
                }
            } else if (T instanceof THREE.Line) if (x instanceof THREE.BufferGeometry) {
                if (b = x.attributes, void 0 !== b.position) {
                    w = b.position.array;
                    x = 0;
                    for (k = w.length; x < k; x += 3) N.pushVertex(w[x], w[x + 1], w[x + 2]);
                    if (void 0 !== b.index) for (b = b.index.array, x = 0, k = b.length; x < k; x += 2) N.pushLine(b[x], b[x + 1]); else for (b = T.type === THREE.LinePieces ? 2 : 1, 
                    x = 0, k = w.length / 3 - 1; x < k; x += b) N.pushLine(x, x + 1);
                }
            } else {
                if (x instanceof THREE.Geometry && (O.multiplyMatrices(U, V), F = T.geometry.vertices, 
                0 !== F.length)) for (W = e(), W.positionScreen.copy(F[0]).applyMatrix4(O), b = T.type === THREE.LinePieces ? 2 : 1, 
                I = 1, G = F.length; I < G; I++) W = e(), W.positionScreen.copy(F[I]).applyMatrix4(O), 
                0 < (I + 1) % b || (Y = f[h - 2], j.copy(W.positionScreen), $.copy(Y.positionScreen), 
                !0 === o(j, $) && (j.multiplyScalar(1 / j.w), $.multiplyScalar(1 / $.w), g = n(), 
                g.id = T.id, g.v1.positionScreen.copy(j), g.v2.positionScreen.copy($), g.z = Math.max(j.z, $.z), 
                g.material = T.material, T.material.vertexColors === THREE.VertexColors && (g.vertexColors[0].copy(T.geometry.colors[I]), 
                g.vertexColors[1].copy(T.geometry.colors[I - 1])), H.elements.push(g)));
            } else T instanceof THREE.Sprite && (P.set(V.elements[12], V.elements[13], V.elements[14], 1), 
            P.applyMatrix4(U), x = 1 / P.w, P.z *= x, -1 <= P.z && 1 >= P.z && (R = r(), R.id = T.id, 
            R.x = P.x * x, R.y = P.y * x, R.z = P.z, R.object = T, R.rotation = T.rotation, 
            R.scale.x = T.scale.x * Math.abs(R.x - (P.x + p.projectionMatrix.elements[0]) / (P.w + p.projectionMatrix.elements[12])), 
            R.scale.y = T.scale.y * Math.abs(R.y - (P.y + p.projectionMatrix.elements[5]) / (P.w + p.projectionMatrix.elements[13])), 
            R.material = T.material, H.elements.push(R)));
        }
        !0 === v && H.elements.sort(i);
        return H;
    };
};

THREE.Face3 = function(e, t, n, r, i, o) {
    this.a = e;
    this.b = t;
    this.c = n;
    this.normal = r instanceof THREE.Vector3 ? r : new THREE.Vector3();
    this.vertexNormals = r instanceof Array ? r : [];
    this.color = i instanceof THREE.Color ? i : new THREE.Color();
    this.vertexColors = i instanceof Array ? i : [];
    this.vertexTangents = [];
    this.materialIndex = void 0 !== o ? o : 0;
};

THREE.Face3.prototype = {
    constructor: THREE.Face3,
    clone: function() {
        var e = new THREE.Face3(this.a, this.b, this.c);
        e.normal.copy(this.normal);
        e.color.copy(this.color);
        e.materialIndex = this.materialIndex;
        for (var t = 0, n = this.vertexNormals.length; t < n; t++) e.vertexNormals[t] = this.vertexNormals[t].clone();
        t = 0;
        for (n = this.vertexColors.length; t < n; t++) e.vertexColors[t] = this.vertexColors[t].clone();
        t = 0;
        for (n = this.vertexTangents.length; t < n; t++) e.vertexTangents[t] = this.vertexTangents[t].clone();
        return e;
    }
};

THREE.Face4 = function(e, t, n, r, i, o, a) {
    console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");
    return new THREE.Face3(e, t, n, i, o, a);
};

THREE.BufferAttribute = function(e, t) {
    this.array = e;
    this.itemSize = t;
};

THREE.BufferAttribute.prototype = {
    constructor: THREE.BufferAttribute,
    get length() {
        return this.array.length;
    },
    set: function(e) {
        this.array.set(e);
        return this;
    },
    setX: function(e, t) {
        this.array[e * this.itemSize] = t;
        return this;
    },
    setY: function(e, t) {
        this.array[e * this.itemSize + 1] = t;
        return this;
    },
    setZ: function(e, t) {
        this.array[e * this.itemSize + 2] = t;
        return this;
    },
    setXY: function(e, t, n) {
        e *= this.itemSize;
        this.array[e] = t;
        this.array[e + 1] = n;
        return this;
    },
    setXYZ: function(e, t, n, r) {
        e *= this.itemSize;
        this.array[e] = t;
        this.array[e + 1] = n;
        this.array[e + 2] = r;
        return this;
    },
    setXYZW: function(e, t, n, r, i) {
        e *= this.itemSize;
        this.array[e] = t;
        this.array[e + 1] = n;
        this.array[e + 2] = r;
        this.array[e + 3] = i;
        return this;
    }
};

THREE.Int8Attribute = function(e, t) {
    console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(e, t);
};

THREE.Uint8Attribute = function(e, t) {
    console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(e, t);
};

THREE.Uint8ClampedAttribute = function(e, t) {
    console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(e, t);
};

THREE.Int16Attribute = function(e, t) {
    console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(e, t);
};

THREE.Uint16Attribute = function(e, t) {
    console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(e, t);
};

THREE.Int32Attribute = function(e, t) {
    console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(e, t);
};

THREE.Uint32Attribute = function(e, t) {
    console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(e, t);
};

THREE.Float32Attribute = function(e, t) {
    console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(e, t);
};

THREE.Float64Attribute = function(e, t) {
    console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(e, t);
};

THREE.BufferGeometry = function() {
    this.id = THREE.GeometryIdCount++;
    this.uuid = THREE.Math.generateUUID();
    this.name = "";
    this.attributes = {};
    this.offsets = this.drawcalls = [];
    this.boundingSphere = this.boundingBox = null;
};

THREE.BufferGeometry.prototype = {
    constructor: THREE.BufferGeometry,
    addAttribute: function(e, t, n) {
        !1 === t instanceof THREE.BufferAttribute ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), 
        this.attributes[e] = {
            array: t,
            itemSize: n
        }) : this.attributes[e] = t;
    },
    getAttribute: function(e) {
        return this.attributes[e];
    },
    addDrawCall: function(e, t, n) {
        this.drawcalls.push({
            start: e,
            count: t,
            index: void 0 !== n ? n : 0
        });
    },
    applyMatrix: function(e) {
        var t = this.attributes.position;
        void 0 !== t && (e.applyToVector3Array(t.array), t.needsUpdate = !0);
        t = this.attributes.normal;
        void 0 !== t && (new THREE.Matrix3().getNormalMatrix(e).applyToVector3Array(t.array), 
        t.needsUpdate = !0);
    },
    fromGeometry: function(e, t) {
        t = t || {
            vertexColors: THREE.NoColors
        };
        var n = e.vertices, r = e.faces, i = e.faceVertexUvs, o = t.vertexColors, a = 0 < i[0].length, s = 3 == r[0].vertexNormals.length, c = new Float32Array(9 * r.length);
        this.addAttribute("position", new THREE.BufferAttribute(c, 3));
        var l = new Float32Array(9 * r.length);
        this.addAttribute("normal", new THREE.BufferAttribute(l, 3));
        if (o !== THREE.NoColors) {
            var u = new Float32Array(9 * r.length);
            this.addAttribute("color", new THREE.BufferAttribute(u, 3));
        }
        if (!0 === a) {
            var h = new Float32Array(6 * r.length);
            this.addAttribute("uvs", new THREE.BufferAttribute(h, 2));
        }
        for (var f = 0, p = 0, d = 0; f < r.length; f++, p += 6, d += 9) {
            var m = r[f], E = n[m.a], v = n[m.b], g = n[m.c];
            c[d] = E.x;
            c[d + 1] = E.y;
            c[d + 2] = E.z;
            c[d + 3] = v.x;
            c[d + 4] = v.y;
            c[d + 5] = v.z;
            c[d + 6] = g.x;
            c[d + 7] = g.y;
            c[d + 8] = g.z;
            !0 === s ? (E = m.vertexNormals[0], v = m.vertexNormals[1], g = m.vertexNormals[2], 
            l[d] = E.x, l[d + 1] = E.y, l[d + 2] = E.z, l[d + 3] = v.x, l[d + 4] = v.y, l[d + 5] = v.z, 
            l[d + 6] = g.x, l[d + 7] = g.y, l[d + 8] = g.z) : (E = m.normal, l[d] = E.x, l[d + 1] = E.y, 
            l[d + 2] = E.z, l[d + 3] = E.x, l[d + 4] = E.y, l[d + 5] = E.z, l[d + 6] = E.x, 
            l[d + 7] = E.y, l[d + 8] = E.z);
            o === THREE.FaceColors ? (m = m.color, u[d] = m.r, u[d + 1] = m.g, u[d + 2] = m.b, 
            u[d + 3] = m.r, u[d + 4] = m.g, u[d + 5] = m.b, u[d + 6] = m.r, u[d + 7] = m.g, 
            u[d + 8] = m.b) : o === THREE.VertexColors && (E = m.vertexColors[0], v = m.vertexColors[1], 
            m = m.vertexColors[2], u[d] = E.r, u[d + 1] = E.g, u[d + 2] = E.b, u[d + 3] = v.r, 
            u[d + 4] = v.g, u[d + 5] = v.b, u[d + 6] = m.r, u[d + 7] = m.g, u[d + 8] = m.b);
            !0 === a && (m = i[0][f][0], E = i[0][f][1], v = i[0][f][2], h[p] = m.x, h[p + 1] = m.y, 
            h[p + 2] = E.x, h[p + 3] = E.y, h[p + 4] = v.x, h[p + 5] = v.y);
        }
        this.computeBoundingSphere();
        return this;
    },
    computeBoundingBox: function() {
        null === this.boundingBox && (this.boundingBox = new THREE.Box3());
        var e = this.attributes.position.array;
        if (e) {
            var t = this.boundingBox;
            3 <= e.length && (t.min.x = t.max.x = e[0], t.min.y = t.max.y = e[1], t.min.z = t.max.z = e[2]);
            for (var n = 3, r = e.length; n < r; n += 3) {
                var i = e[n], o = e[n + 1], a = e[n + 2];
                i < t.min.x ? t.min.x = i : i > t.max.x && (t.max.x = i);
                o < t.min.y ? t.min.y = o : o > t.max.y && (t.max.y = o);
                a < t.min.z ? t.min.z = a : a > t.max.z && (t.max.z = a);
            }
        }
        if (void 0 === e || 0 === e.length) this.boundingBox.min.set(0, 0, 0), this.boundingBox.max.set(0, 0, 0);
        (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.');
    },
    computeBoundingSphere: function() {
        var e = new THREE.Box3(), t = new THREE.Vector3();
        return function() {
            null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere());
            var n = this.attributes.position.array;
            if (n) {
                e.makeEmpty();
                for (var r = this.boundingSphere.center, i = 0, o = n.length; i < o; i += 3) t.set(n[i], n[i + 1], n[i + 2]), 
                e.expandByPoint(t);
                e.center(r);
                for (var a = 0, i = 0, o = n.length; i < o; i += 3) t.set(n[i], n[i + 1], n[i + 2]), 
                a = Math.max(a, r.distanceToSquared(t));
                this.boundingSphere.radius = Math.sqrt(a);
                isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.');
            }
        };
    }(),
    computeFaceNormals: function() {},
    computeVertexNormals: function() {
        if (this.attributes.position) {
            var e, t, n, r;
            e = this.attributes.position.array.length;
            if (void 0 === this.attributes.normal) this.attributes.normal = {
                itemSize: 3,
                array: new Float32Array(e)
            }; else for (e = 0, t = this.attributes.normal.array.length; e < t; e++) this.attributes.normal.array[e] = 0;
            var i = this.attributes.position.array, o = this.attributes.normal.array, a, s, c, l, u, h, f = new THREE.Vector3(), p = new THREE.Vector3(), d = new THREE.Vector3(), m = new THREE.Vector3(), E = new THREE.Vector3();
            if (this.attributes.index) {
                var v = this.attributes.index.array, g = 0 < this.offsets.length ? this.offsets : [ {
                    start: 0,
                    count: v.length,
                    index: 0
                } ];
                n = 0;
                for (r = g.length; n < r; ++n) {
                    t = g[n].start;
                    a = g[n].count;
                    var y = g[n].index;
                    e = t;
                    for (t += a; e < t; e += 3) a = y + v[e], s = y + v[e + 1], c = y + v[e + 2], l = i[3 * a], 
                    u = i[3 * a + 1], h = i[3 * a + 2], f.set(l, u, h), l = i[3 * s], u = i[3 * s + 1], 
                    h = i[3 * s + 2], p.set(l, u, h), l = i[3 * c], u = i[3 * c + 1], h = i[3 * c + 2], 
                    d.set(l, u, h), m.subVectors(d, p), E.subVectors(f, p), m.cross(E), o[3 * a] += m.x, 
                    o[3 * a + 1] += m.y, o[3 * a + 2] += m.z, o[3 * s] += m.x, o[3 * s + 1] += m.y, 
                    o[3 * s + 2] += m.z, o[3 * c] += m.x, o[3 * c + 1] += m.y, o[3 * c + 2] += m.z;
                }
            } else for (e = 0, t = i.length; e < t; e += 9) l = i[e], u = i[e + 1], h = i[e + 2], 
            f.set(l, u, h), l = i[e + 3], u = i[e + 4], h = i[e + 5], p.set(l, u, h), l = i[e + 6], 
            u = i[e + 7], h = i[e + 8], d.set(l, u, h), m.subVectors(d, p), E.subVectors(f, p), 
            m.cross(E), o[e] = m.x, o[e + 1] = m.y, o[e + 2] = m.z, o[e + 3] = m.x, o[e + 4] = m.y, 
            o[e + 5] = m.z, o[e + 6] = m.x, o[e + 7] = m.y, o[e + 8] = m.z;
            this.normalizeNormals();
            this.normalsNeedUpdate = !0;
        }
    },
    computeTangents: function() {
        function e(e, t, n) {
            h = r[3 * e];
            f = r[3 * e + 1];
            p = r[3 * e + 2];
            d = r[3 * t];
            m = r[3 * t + 1];
            E = r[3 * t + 2];
            v = r[3 * n];
            g = r[3 * n + 1];
            y = r[3 * n + 2];
            T = o[2 * e];
            x = o[2 * e + 1];
            R = o[2 * t];
            _ = o[2 * t + 1];
            b = o[2 * n];
            w = o[2 * n + 1];
            H = d - h;
            S = v - h;
            M = m - f;
            C = g - f;
            A = E - p;
            P = y - p;
            k = R - T;
            L = b - T;
            F = _ - x;
            D = w - x;
            U = 1 / (k * D - L * F);
            V.set((D * H - F * S) * U, (D * M - F * C) * U, (D * A - F * P) * U);
            O.set((k * S - L * H) * U, (k * C - L * M) * U, (k * P - L * A) * U);
            c[e].add(V);
            c[t].add(V);
            c[n].add(V);
            l[e].add(O);
            l[t].add(O);
            l[n].add(O);
        }
        function t(e) {
            q.x = i[3 * e];
            q.y = i[3 * e + 1];
            q.z = i[3 * e + 2];
            Y.copy(q);
            Z = c[e];
            W.copy(Z);
            W.sub(q.multiplyScalar(q.dot(Z))).normalize();
            X.crossVectors(Y, Z);
            Q = X.dot(l[e]);
            K = 0 > Q ? -1 : 1;
            s[4 * e] = W.x;
            s[4 * e + 1] = W.y;
            s[4 * e + 2] = W.z;
            s[4 * e + 3] = K;
        }
        if (void 0 === this.attributes.index || void 0 === this.attributes.position || void 0 === this.attributes.normal || void 0 === this.attributes.uv) console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()"); else {
            var n = this.attributes.index.array, r = this.attributes.position.array, i = this.attributes.normal.array, o = this.attributes.uv.array, a = r.length / 3;
            void 0 === this.attributes.tangent && (this.attributes.tangent = {
                itemSize: 4,
                array: new Float32Array(4 * a)
            });
            for (var s = this.attributes.tangent.array, c = [], l = [], u = 0; u < a; u++) c[u] = new THREE.Vector3(), 
            l[u] = new THREE.Vector3();
            var h, f, p, d, m, E, v, g, y, T, x, R, _, b, w, H, S, M, C, A, P, k, L, F, D, U, V = new THREE.Vector3(), O = new THREE.Vector3(), z, B, j, $, N, I = this.offsets, u = 0;
            for (B = I.length; u < B; ++u) {
                z = I[u].start;
                j = I[u].count;
                var G = I[u].index, a = z;
                for (z += j; a < z; a += 3) j = G + n[a], $ = G + n[a + 1], N = G + n[a + 2], e(j, $, N);
            }
            var W = new THREE.Vector3(), X = new THREE.Vector3(), q = new THREE.Vector3(), Y = new THREE.Vector3(), K, Z, Q, u = 0;
            for (B = I.length; u < B; ++u) for (z = I[u].start, j = I[u].count, G = I[u].index, 
            a = z, z += j; a < z; a += 3) j = G + n[a], $ = G + n[a + 1], N = G + n[a + 2], 
            t(j), t($), t(N);
        }
    },
    computeOffsets: function(e) {
        var t = e;
        void 0 === e && (t = 65535);
        Date.now();
        e = this.attributes.index.array;
        for (var n = this.attributes.position.array, r = e.length / 3, i = new Uint16Array(e.length), o = 0, a = 0, s = [ {
            start: 0,
            count: 0,
            index: 0
        } ], c = s[0], l = 0, u = 0, h = new Int32Array(6), f = new Int32Array(n.length), p = new Int32Array(n.length), d = 0; d < n.length; d++) f[d] = -1, 
        p[d] = -1;
        for (n = 0; n < r; n++) {
            for (var m = u = 0; 3 > m; m++) d = e[3 * n + m], -1 == f[d] ? (h[2 * m] = d, h[2 * m + 1] = -1, 
            u++) : f[d] < c.index ? (h[2 * m] = d, h[2 * m + 1] = -1, l++) : (h[2 * m] = d, 
            h[2 * m + 1] = f[d]);
            if (a + u > c.index + t) for (c = {
                start: o,
                count: 0,
                index: a
            }, s.push(c), u = 0; 6 > u; u += 2) m = h[u + 1], -1 < m && m < c.index && (h[u + 1] = -1);
            for (u = 0; 6 > u; u += 2) d = h[u], m = h[u + 1], -1 === m && (m = a++), f[d] = m, 
            p[m] = d, i[o++] = m - c.index, c.count++;
        }
        this.reorderBuffers(i, p, a);
        return this.offsets = s;
    },
    merge: function() {
        console.log("BufferGeometry.merge(): TODO");
    },
    normalizeNormals: function() {
        for (var e = this.attributes.normal.array, t, n, r, i = 0, o = e.length; i < o; i += 3) t = e[i], 
        n = e[i + 1], r = e[i + 2], t = 1 / Math.sqrt(t * t + n * n + r * r), e[i] *= t, 
        e[i + 1] *= t, e[i + 2] *= t;
    },
    reorderBuffers: function(e, t, n) {
        var r = {}, i = [ Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ], o;
        for (o in this.attributes) if ("index" != o) for (var a = this.attributes[o].array, s = 0, c = i.length; s < c; s++) {
            var l = i[s];
            if (a instanceof l) {
                r[o] = new l(this.attributes[o].itemSize * n);
                break;
            }
        }
        for (i = 0; i < n; i++) for (o in a = t[i], this.attributes) if ("index" != o) for (var s = this.attributes[o].array, c = this.attributes[o].itemSize, l = r[o], u = 0; u < c; u++) l[i * c + u] = s[a * c + u];
        this.attributes.index.array = e;
        for (o in this.attributes) "index" != o && (this.attributes[o].array = r[o], this.attributes[o].numItems = this.attributes[o].itemSize * n);
    },
    clone: function() {
        var e = new THREE.BufferGeometry(), t = [ Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ], n;
        for (n in this.attributes) {
            for (var r = this.attributes[n], i = r.array, o = {
                itemSize: r.itemSize,
                array: null
            }, r = 0, a = t.length; r < a; r++) {
                var s = t[r];
                if (i instanceof s) {
                    o.array = new s(i);
                    break;
                }
            }
            e.attributes[n] = o;
        }
        r = 0;
        for (a = this.offsets.length; r < a; r++) t = this.offsets[r], e.offsets.push({
            start: t.start,
            index: t.index,
            count: t.count
        });
        return e;
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};

THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);

THREE.Geometry = function() {
    this.id = THREE.GeometryIdCount++;
    this.uuid = THREE.Math.generateUUID();
    this.name = "";
    this.vertices = [];
    this.colors = [];
    this.faces = [];
    this.faceVertexUvs = [ [] ];
    this.morphTargets = [];
    this.morphColors = [];
    this.morphNormals = [];
    this.skinWeights = [];
    this.skinIndices = [];
    this.lineDistances = [];
    this.boundingSphere = this.boundingBox = null;
    this.hasTangents = !1;
    this.dynamic = !0;
    this.groupsNeedUpdate = this.buffersNeedUpdate = this.lineDistancesNeedUpdate = this.colorsNeedUpdate = this.tangentsNeedUpdate = this.normalsNeedUpdate = this.uvsNeedUpdate = this.elementsNeedUpdate = this.verticesNeedUpdate = !1;
};

THREE.Geometry.prototype = {
    constructor: THREE.Geometry,
    applyMatrix: function(e) {
        for (var t = new THREE.Matrix3().getNormalMatrix(e), n = 0, r = this.vertices.length; n < r; n++) this.vertices[n].applyMatrix4(e);
        n = 0;
        for (r = this.faces.length; n < r; n++) {
            e = this.faces[n];
            e.normal.applyMatrix3(t).normalize();
            for (var i = 0, o = e.vertexNormals.length; i < o; i++) e.vertexNormals[i].applyMatrix3(t).normalize();
        }
        this.boundingBox instanceof THREE.Box3 && this.computeBoundingBox();
        this.boundingSphere instanceof THREE.Sphere && this.computeBoundingSphere();
    },
    center: function() {
        this.computeBoundingBox();
        var e = new THREE.Vector3();
        e.addVectors(this.boundingBox.min, this.boundingBox.max);
        e.multiplyScalar(-.5);
        this.applyMatrix(new THREE.Matrix4().makeTranslation(e.x, e.y, e.z));
        this.computeBoundingBox();
        return e;
    },
    computeFaceNormals: function() {
        for (var e = new THREE.Vector3(), t = new THREE.Vector3(), n = 0, r = this.faces.length; n < r; n++) {
            var i = this.faces[n], o = this.vertices[i.a], a = this.vertices[i.b];
            e.subVectors(this.vertices[i.c], a);
            t.subVectors(o, a);
            e.cross(t);
            e.normalize();
            i.normal.copy(e);
        }
    },
    computeVertexNormals: function(e) {
        var t, n, r;
        r = Array(this.vertices.length);
        t = 0;
        for (n = this.vertices.length; t < n; t++) r[t] = new THREE.Vector3();
        if (e) {
            var i, o, a, s = new THREE.Vector3(), c = new THREE.Vector3();
            new THREE.Vector3();
            new THREE.Vector3();
            new THREE.Vector3();
            e = 0;
            for (t = this.faces.length; e < t; e++) n = this.faces[e], i = this.vertices[n.a], 
            o = this.vertices[n.b], a = this.vertices[n.c], s.subVectors(a, o), c.subVectors(i, o), 
            s.cross(c), r[n.a].add(s), r[n.b].add(s), r[n.c].add(s);
        } else for (e = 0, t = this.faces.length; e < t; e++) n = this.faces[e], r[n.a].add(n.normal), 
        r[n.b].add(n.normal), r[n.c].add(n.normal);
        t = 0;
        for (n = this.vertices.length; t < n; t++) r[t].normalize();
        e = 0;
        for (t = this.faces.length; e < t; e++) n = this.faces[e], n.vertexNormals[0] = r[n.a].clone(), 
        n.vertexNormals[1] = r[n.b].clone(), n.vertexNormals[2] = r[n.c].clone();
    },
    computeMorphNormals: function() {
        var e, t, n, r, i;
        n = 0;
        for (r = this.faces.length; n < r; n++) for (i = this.faces[n], i.__originalFaceNormal ? i.__originalFaceNormal.copy(i.normal) : i.__originalFaceNormal = i.normal.clone(), 
        i.__originalVertexNormals || (i.__originalVertexNormals = []), e = 0, t = i.vertexNormals.length; e < t; e++) i.__originalVertexNormals[e] ? i.__originalVertexNormals[e].copy(i.vertexNormals[e]) : i.__originalVertexNormals[e] = i.vertexNormals[e].clone();
        var o = new THREE.Geometry();
        o.faces = this.faces;
        e = 0;
        for (t = this.morphTargets.length; e < t; e++) {
            if (!this.morphNormals[e]) {
                this.morphNormals[e] = {};
                this.morphNormals[e].faceNormals = [];
                this.morphNormals[e].vertexNormals = [];
                i = this.morphNormals[e].faceNormals;
                var a = this.morphNormals[e].vertexNormals, s, c;
                n = 0;
                for (r = this.faces.length; n < r; n++) s = new THREE.Vector3(), c = {
                    a: new THREE.Vector3(),
                    b: new THREE.Vector3(),
                    c: new THREE.Vector3()
                }, i.push(s), a.push(c);
            }
            a = this.morphNormals[e];
            o.vertices = this.morphTargets[e].vertices;
            o.computeFaceNormals();
            o.computeVertexNormals();
            n = 0;
            for (r = this.faces.length; n < r; n++) i = this.faces[n], s = a.faceNormals[n], 
            c = a.vertexNormals[n], s.copy(i.normal), c.a.copy(i.vertexNormals[0]), c.b.copy(i.vertexNormals[1]), 
            c.c.copy(i.vertexNormals[2]);
        }
        n = 0;
        for (r = this.faces.length; n < r; n++) i = this.faces[n], i.normal = i.__originalFaceNormal, 
        i.vertexNormals = i.__originalVertexNormals;
    },
    computeTangents: function() {
        var e, t, n, r, i, o, a, s, c, l, u, h, f, p, d, m, E, v = [], g = [];
        n = new THREE.Vector3();
        var y = new THREE.Vector3(), T = new THREE.Vector3(), x = new THREE.Vector3(), R = new THREE.Vector3();
        e = 0;
        for (t = this.vertices.length; e < t; e++) v[e] = new THREE.Vector3(), g[e] = new THREE.Vector3();
        e = 0;
        for (t = this.faces.length; e < t; e++) i = this.faces[e], o = this.faceVertexUvs[0][e], 
        r = i.a, E = i.b, i = i.c, a = this.vertices[r], s = this.vertices[E], c = this.vertices[i], 
        l = o[0], u = o[1], h = o[2], o = s.x - a.x, f = c.x - a.x, p = s.y - a.y, d = c.y - a.y, 
        s = s.z - a.z, a = c.z - a.z, c = u.x - l.x, m = h.x - l.x, u = u.y - l.y, l = h.y - l.y, 
        h = 1 / (c * l - m * u), n.set((l * o - u * f) * h, (l * p - u * d) * h, (l * s - u * a) * h), 
        y.set((c * f - m * o) * h, (c * d - m * p) * h, (c * a - m * s) * h), v[r].add(n), 
        v[E].add(n), v[i].add(n), g[r].add(y), g[E].add(y), g[i].add(y);
        y = [ "a", "b", "c", "d" ];
        e = 0;
        for (t = this.faces.length; e < t; e++) for (i = this.faces[e], n = 0; n < Math.min(i.vertexNormals.length, 3); n++) R.copy(i.vertexNormals[n]), 
        r = i[y[n]], E = v[r], T.copy(E), T.sub(R.multiplyScalar(R.dot(E))).normalize(), 
        x.crossVectors(i.vertexNormals[n], E), r = x.dot(g[r]), r = 0 > r ? -1 : 1, i.vertexTangents[n] = new THREE.Vector4(T.x, T.y, T.z, r);
        this.hasTangents = !0;
    },
    computeLineDistances: function() {
        for (var e = 0, t = this.vertices, n = 0, r = t.length; n < r; n++) 0 < n && (e += t[n].distanceTo(t[n - 1])), 
        this.lineDistances[n] = e;
    },
    computeBoundingBox: function() {
        null === this.boundingBox && (this.boundingBox = new THREE.Box3());
        this.boundingBox.setFromPoints(this.vertices);
    },
    computeBoundingSphere: function() {
        null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere());
        this.boundingSphere.setFromPoints(this.vertices);
    },
    merge: function(e, t, n) {
        if (!1 === e instanceof THREE.Geometry) console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e); else {
            var r, i = this.vertices.length, o = this.vertices, a = e.vertices, s = this.faces, c = e.faces, l = this.faceVertexUvs[0];
            e = e.faceVertexUvs[0];
            void 0 === n && (n = 0);
            void 0 !== t && (r = new THREE.Matrix3().getNormalMatrix(t));
            for (var u = 0, h = a.length; u < h; u++) {
                var f = a[u].clone();
                void 0 !== t && f.applyMatrix4(t);
                o.push(f);
            }
            u = 0;
            for (h = c.length; u < h; u++) {
                var a = c[u], p, d = a.vertexNormals, m = a.vertexColors, f = new THREE.Face3(a.a + i, a.b + i, a.c + i);
                f.normal.copy(a.normal);
                void 0 !== r && f.normal.applyMatrix3(r).normalize();
                t = 0;
                for (o = d.length; t < o; t++) p = d[t].clone(), void 0 !== r && p.applyMatrix3(r).normalize(), 
                f.vertexNormals.push(p);
                f.color.copy(a.color);
                t = 0;
                for (o = m.length; t < o; t++) p = m[t], f.vertexColors.push(p.clone());
                f.materialIndex = a.materialIndex + n;
                s.push(f);
            }
            u = 0;
            for (h = e.length; u < h; u++) if (n = e[u], r = [], void 0 !== n) {
                t = 0;
                for (o = n.length; t < o; t++) r.push(new THREE.Vector2(n[t].x, n[t].y));
                l.push(r);
            }
        }
    },
    mergeVertices: function() {
        var e = {}, t = [], n = [], r, i = Math.pow(10, 4), o, a;
        o = 0;
        for (a = this.vertices.length; o < a; o++) r = this.vertices[o], r = Math.round(r.x * i) + "_" + Math.round(r.y * i) + "_" + Math.round(r.z * i), 
        void 0 === e[r] ? (e[r] = o, t.push(this.vertices[o]), n[o] = t.length - 1) : n[o] = n[e[r]];
        e = [];
        o = 0;
        for (a = this.faces.length; o < a; o++) for (i = this.faces[o], i.a = n[i.a], i.b = n[i.b], 
        i.c = n[i.c], i = [ i.a, i.b, i.c ], r = 0; 3 > r; r++) if (i[r] == i[(r + 1) % 3]) {
            e.push(o);
            break;
        }
        for (o = e.length - 1; 0 <= o; o--) for (i = e[o], this.faces.splice(i, 1), n = 0, 
        a = this.faceVertexUvs.length; n < a; n++) this.faceVertexUvs[n].splice(i, 1);
        o = this.vertices.length - t.length;
        this.vertices = t;
        return o;
    },
    makeGroups: function() {
        var e = 0;
        return function(t, n) {
            var r, i, o, a, s = {}, c, l = this.morphTargets.length, u = this.morphNormals.length;
            this.geometryGroups = {};
            this.geometryGroupsList = [];
            r = 0;
            for (i = this.faces.length; r < i; r++) o = this.faces[r], o = t ? o.materialIndex : 0, 
            o in s || (s[o] = {
                hash: o,
                counter: 0
            }), a = s[o].hash + "_" + s[o].counter, a in this.geometryGroups || (c = {
                id: e++,
                faces3: [],
                materialIndex: o,
                vertices: 0,
                numMorphTargets: l,
                numMorphNormals: u
            }, this.geometryGroups[a] = c, this.geometryGroupsList.push(c)), this.geometryGroups[a].vertices + 3 > n && (s[o].counter += 1, 
            a = s[o].hash + "_" + s[o].counter, a in this.geometryGroups || (c = {
                id: e++,
                faces3: [],
                materialIndex: o,
                vertices: 0,
                numMorphTargets: l,
                numMorphNormals: u
            }, this.geometryGroups[a] = c, this.geometryGroupsList.push(c))), this.geometryGroups[a].faces3.push(r), 
            this.geometryGroups[a].vertices += 3;
        };
    }(),
    clone: function() {
        for (var e = new THREE.Geometry(), t = this.vertices, n = 0, r = t.length; n < r; n++) e.vertices.push(t[n].clone());
        t = this.faces;
        n = 0;
        for (r = t.length; n < r; n++) e.faces.push(t[n].clone());
        t = this.faceVertexUvs[0];
        n = 0;
        for (r = t.length; n < r; n++) {
            for (var i = t[n], o = [], a = 0, s = i.length; a < s; a++) o.push(new THREE.Vector2(i[a].x, i[a].y));
            e.faceVertexUvs[0].push(o);
        }
        return e;
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};

THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);

THREE.GeometryIdCount = 0;

THREE.Camera = function() {
    THREE.Object3D.call(this);
    this.matrixWorldInverse = new THREE.Matrix4();
    this.projectionMatrix = new THREE.Matrix4();
};

THREE.Camera.prototype = Object.create(THREE.Object3D.prototype);

THREE.Camera.prototype.lookAt = function() {
    var e = new THREE.Matrix4();
    return function(t) {
        e.lookAt(this.position, t, this.up);
        this.quaternion.setFromRotationMatrix(e);
    };
}();

THREE.Camera.prototype.clone = function(e) {
    void 0 === e && (e = new THREE.Camera());
    THREE.Object3D.prototype.clone.call(this, e);
    e.matrixWorldInverse.copy(this.matrixWorldInverse);
    e.projectionMatrix.copy(this.projectionMatrix);
    return e;
};

THREE.CubeCamera = function(e, t, n) {
    THREE.Object3D.call(this);
    var r = new THREE.PerspectiveCamera(90, 1, e, t);
    r.up.set(0, -1, 0);
    r.lookAt(new THREE.Vector3(1, 0, 0));
    this.add(r);
    var i = new THREE.PerspectiveCamera(90, 1, e, t);
    i.up.set(0, -1, 0);
    i.lookAt(new THREE.Vector3(-1, 0, 0));
    this.add(i);
    var o = new THREE.PerspectiveCamera(90, 1, e, t);
    o.up.set(0, 0, 1);
    o.lookAt(new THREE.Vector3(0, 1, 0));
    this.add(o);
    var a = new THREE.PerspectiveCamera(90, 1, e, t);
    a.up.set(0, 0, -1);
    a.lookAt(new THREE.Vector3(0, -1, 0));
    this.add(a);
    var s = new THREE.PerspectiveCamera(90, 1, e, t);
    s.up.set(0, -1, 0);
    s.lookAt(new THREE.Vector3(0, 0, 1));
    this.add(s);
    var c = new THREE.PerspectiveCamera(90, 1, e, t);
    c.up.set(0, -1, 0);
    c.lookAt(new THREE.Vector3(0, 0, -1));
    this.add(c);
    this.renderTarget = new THREE.WebGLRenderTargetCube(n, n, {
        format: THREE.RGBFormat,
        magFilter: THREE.LinearFilter,
        minFilter: THREE.LinearFilter
    });
    this.updateCubeMap = function(e, t) {
        var n = this.renderTarget, l = n.generateMipmaps;
        n.generateMipmaps = !1;
        n.activeCubeFace = 0;
        e.render(t, r, n);
        n.activeCubeFace = 1;
        e.render(t, i, n);
        n.activeCubeFace = 2;
        e.render(t, o, n);
        n.activeCubeFace = 3;
        e.render(t, a, n);
        n.activeCubeFace = 4;
        e.render(t, s, n);
        n.generateMipmaps = l;
        n.activeCubeFace = 5;
        e.render(t, c, n);
    };
};

THREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype);

THREE.OrthographicCamera = function(e, t, n, r, i, o) {
    THREE.Camera.call(this);
    this.left = e;
    this.right = t;
    this.top = n;
    this.bottom = r;
    this.near = void 0 !== i ? i : .1;
    this.far = void 0 !== o ? o : 2e3;
    this.updateProjectionMatrix();
};

THREE.OrthographicCamera.prototype = Object.create(THREE.Camera.prototype);

THREE.OrthographicCamera.prototype.updateProjectionMatrix = function() {
    this.projectionMatrix.makeOrthographic(this.left, this.right, this.top, this.bottom, this.near, this.far);
};

THREE.OrthographicCamera.prototype.clone = function() {
    var e = new THREE.OrthographicCamera();
    THREE.Camera.prototype.clone.call(this, e);
    e.left = this.left;
    e.right = this.right;
    e.top = this.top;
    e.bottom = this.bottom;
    e.near = this.near;
    e.far = this.far;
    return e;
};

THREE.PerspectiveCamera = function(e, t, n, r) {
    THREE.Camera.call(this);
    this.fov = void 0 !== e ? e : 50;
    this.aspect = void 0 !== t ? t : 1;
    this.near = void 0 !== n ? n : .1;
    this.far = void 0 !== r ? r : 2e3;
    this.updateProjectionMatrix();
};

THREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype);

THREE.PerspectiveCamera.prototype.setLens = function(e, t) {
    void 0 === t && (t = 24);
    this.fov = 2 * THREE.Math.radToDeg(Math.atan(t / (2 * e)));
    this.updateProjectionMatrix();
};

THREE.PerspectiveCamera.prototype.setViewOffset = function(e, t, n, r, i, o) {
    this.fullWidth = e;
    this.fullHeight = t;
    this.x = n;
    this.y = r;
    this.width = i;
    this.height = o;
    this.updateProjectionMatrix();
};

THREE.PerspectiveCamera.prototype.updateProjectionMatrix = function() {
    if (this.fullWidth) {
        var e = this.fullWidth / this.fullHeight, t = Math.tan(THREE.Math.degToRad(.5 * this.fov)) * this.near, n = -t, r = e * n, e = Math.abs(e * t - r), n = Math.abs(t - n);
        this.projectionMatrix.makeFrustum(r + this.x * e / this.fullWidth, r + (this.x + this.width) * e / this.fullWidth, t - (this.y + this.height) * n / this.fullHeight, t - this.y * n / this.fullHeight, this.near, this.far);
    } else this.projectionMatrix.makePerspective(this.fov, this.aspect, this.near, this.far);
};

THREE.PerspectiveCamera.prototype.clone = function() {
    var e = new THREE.PerspectiveCamera();
    THREE.Camera.prototype.clone.call(this, e);
    e.fov = this.fov;
    e.aspect = this.aspect;
    e.near = this.near;
    e.far = this.far;
    return e;
};

THREE.Light = function(e) {
    THREE.Object3D.call(this);
    this.color = new THREE.Color(e);
};

THREE.Light.prototype = Object.create(THREE.Object3D.prototype);

THREE.Light.prototype.clone = function(e) {
    void 0 === e && (e = new THREE.Light());
    THREE.Object3D.prototype.clone.call(this, e);
    e.color.copy(this.color);
    return e;
};

THREE.AmbientLight = function(e) {
    THREE.Light.call(this, e);
};

THREE.AmbientLight.prototype = Object.create(THREE.Light.prototype);

THREE.AmbientLight.prototype.clone = function() {
    var e = new THREE.AmbientLight();
    THREE.Light.prototype.clone.call(this, e);
    return e;
};

THREE.AreaLight = function(e, t) {
    THREE.Light.call(this, e);
    this.normal = new THREE.Vector3(0, -1, 0);
    this.right = new THREE.Vector3(1, 0, 0);
    this.intensity = void 0 !== t ? t : 1;
    this.height = this.width = 1;
    this.constantAttenuation = 1.5;
    this.linearAttenuation = .5;
    this.quadraticAttenuation = .1;
};

THREE.AreaLight.prototype = Object.create(THREE.Light.prototype);

THREE.DirectionalLight = function(e, t) {
    THREE.Light.call(this, e);
    this.position.set(0, 1, 0);
    this.target = new THREE.Object3D();
    this.intensity = void 0 !== t ? t : 1;
    this.onlyShadow = this.castShadow = !1;
    this.shadowCameraNear = 50;
    this.shadowCameraFar = 5e3;
    this.shadowCameraLeft = -500;
    this.shadowCameraTop = this.shadowCameraRight = 500;
    this.shadowCameraBottom = -500;
    this.shadowCameraVisible = !1;
    this.shadowBias = 0;
    this.shadowDarkness = .5;
    this.shadowMapHeight = this.shadowMapWidth = 512;
    this.shadowCascade = !1;
    this.shadowCascadeOffset = new THREE.Vector3(0, 0, -1e3);
    this.shadowCascadeCount = 2;
    this.shadowCascadeBias = [ 0, 0, 0 ];
    this.shadowCascadeWidth = [ 512, 512, 512 ];
    this.shadowCascadeHeight = [ 512, 512, 512 ];
    this.shadowCascadeNearZ = [ -1, .99, .998 ];
    this.shadowCascadeFarZ = [ .99, .998, 1 ];
    this.shadowCascadeArray = [];
    this.shadowMatrix = this.shadowCamera = this.shadowMapSize = this.shadowMap = null;
};

THREE.DirectionalLight.prototype = Object.create(THREE.Light.prototype);

THREE.DirectionalLight.prototype.clone = function() {
    var e = new THREE.DirectionalLight();
    THREE.Light.prototype.clone.call(this, e);
    e.target = this.target.clone();
    e.intensity = this.intensity;
    e.castShadow = this.castShadow;
    e.onlyShadow = this.onlyShadow;
    e.shadowCameraNear = this.shadowCameraNear;
    e.shadowCameraFar = this.shadowCameraFar;
    e.shadowCameraLeft = this.shadowCameraLeft;
    e.shadowCameraRight = this.shadowCameraRight;
    e.shadowCameraTop = this.shadowCameraTop;
    e.shadowCameraBottom = this.shadowCameraBottom;
    e.shadowCameraVisible = this.shadowCameraVisible;
    e.shadowBias = this.shadowBias;
    e.shadowDarkness = this.shadowDarkness;
    e.shadowMapWidth = this.shadowMapWidth;
    e.shadowMapHeight = this.shadowMapHeight;
    e.shadowCascade = this.shadowCascade;
    e.shadowCascadeOffset.copy(this.shadowCascadeOffset);
    e.shadowCascadeCount = this.shadowCascadeCount;
    e.shadowCascadeBias = this.shadowCascadeBias.slice(0);
    e.shadowCascadeWidth = this.shadowCascadeWidth.slice(0);
    e.shadowCascadeHeight = this.shadowCascadeHeight.slice(0);
    e.shadowCascadeNearZ = this.shadowCascadeNearZ.slice(0);
    e.shadowCascadeFarZ = this.shadowCascadeFarZ.slice(0);
    return e;
};

THREE.HemisphereLight = function(e, t, n) {
    THREE.Light.call(this, e);
    this.position.set(0, 100, 0);
    this.groundColor = new THREE.Color(t);
    this.intensity = void 0 !== n ? n : 1;
};

THREE.HemisphereLight.prototype = Object.create(THREE.Light.prototype);

THREE.HemisphereLight.prototype.clone = function() {
    var e = new THREE.HemisphereLight();
    THREE.Light.prototype.clone.call(this, e);
    e.groundColor.copy(this.groundColor);
    e.intensity = this.intensity;
    return e;
};

THREE.PointLight = function(e, t, n) {
    THREE.Light.call(this, e);
    this.intensity = void 0 !== t ? t : 1;
    this.distance = void 0 !== n ? n : 0;
};

THREE.PointLight.prototype = Object.create(THREE.Light.prototype);

THREE.PointLight.prototype.clone = function() {
    var e = new THREE.PointLight();
    THREE.Light.prototype.clone.call(this, e);
    e.intensity = this.intensity;
    e.distance = this.distance;
    return e;
};

THREE.SpotLight = function(e, t, n, r, i) {
    THREE.Light.call(this, e);
    this.position.set(0, 1, 0);
    this.target = new THREE.Object3D();
    this.intensity = void 0 !== t ? t : 1;
    this.distance = void 0 !== n ? n : 0;
    this.angle = void 0 !== r ? r : Math.PI / 3;
    this.exponent = void 0 !== i ? i : 10;
    this.onlyShadow = this.castShadow = !1;
    this.shadowCameraNear = 50;
    this.shadowCameraFar = 5e3;
    this.shadowCameraFov = 50;
    this.shadowCameraVisible = !1;
    this.shadowBias = 0;
    this.shadowDarkness = .5;
    this.shadowMapHeight = this.shadowMapWidth = 512;
    this.shadowMatrix = this.shadowCamera = this.shadowMapSize = this.shadowMap = null;
};

THREE.SpotLight.prototype = Object.create(THREE.Light.prototype);

THREE.SpotLight.prototype.clone = function() {
    var e = new THREE.SpotLight();
    THREE.Light.prototype.clone.call(this, e);
    e.target = this.target.clone();
    e.intensity = this.intensity;
    e.distance = this.distance;
    e.angle = this.angle;
    e.exponent = this.exponent;
    e.castShadow = this.castShadow;
    e.onlyShadow = this.onlyShadow;
    e.shadowCameraNear = this.shadowCameraNear;
    e.shadowCameraFar = this.shadowCameraFar;
    e.shadowCameraFov = this.shadowCameraFov;
    e.shadowCameraVisible = this.shadowCameraVisible;
    e.shadowBias = this.shadowBias;
    e.shadowDarkness = this.shadowDarkness;
    e.shadowMapWidth = this.shadowMapWidth;
    e.shadowMapHeight = this.shadowMapHeight;
    return e;
};

THREE.Cache = function() {
    this.files = {};
};

THREE.Cache.prototype = {
    constructor: THREE.Cache,
    add: function(e, t) {
        this.files[e] = t;
    },
    get: function(e) {
        return this.files[e];
    },
    remove: function(e) {
        delete this.files[e];
    },
    clear: function() {
        this.files = {};
    }
};

THREE.Loader = function(e) {
    this.statusDomElement = (this.showStatus = e) ? THREE.Loader.prototype.addStatusElement() : null;
    this.imageLoader = new THREE.ImageLoader();
    this.onLoadStart = function() {};
    this.onLoadProgress = function() {};
    this.onLoadComplete = function() {};
};

THREE.Loader.prototype = {
    constructor: THREE.Loader,
    crossOrigin: void 0,
    addStatusElement: function() {
        var e = document.createElement("div");
        e.style.position = "absolute";
        e.style.right = "0px";
        e.style.top = "0px";
        e.style.fontSize = "0.8em";
        e.style.textAlign = "left";
        e.style.background = "rgba(0,0,0,0.25)";
        e.style.color = "#fff";
        e.style.width = "120px";
        e.style.padding = "0.5em 0.5em 0.5em 0.5em";
        e.style.zIndex = 1e3;
        e.innerHTML = "Loading ...";
        return e;
    },
    updateProgress: function(e) {
        var t = "Loaded ", t = e.total ? t + ((100 * e.loaded / e.total).toFixed(0) + "%") : t + ((e.loaded / 1024).toFixed(2) + " KB");
        this.statusDomElement.innerHTML = t;
    },
    extractUrlBase: function(e) {
        e = e.split("/");
        if (1 === e.length) return "./";
        e.pop();
        return e.join("/") + "/";
    },
    initMaterials: function(e, t) {
        for (var n = [], r = 0; r < e.length; ++r) n[r] = this.createMaterial(e[r], t);
        return n;
    },
    needsTangents: function(e) {
        for (var t = 0, n = e.length; t < n; t++) if (e[t] instanceof THREE.ShaderMaterial) return !0;
        return !1;
    },
    createMaterial: function(e, t) {
        function n(e) {
            e = Math.log(e) / Math.LN2;
            return Math.pow(2, Math.round(e));
        }
        function r(e, r, i, a, s, c, l) {
            var u = t + i, h, f = THREE.Loader.Handlers.get(u);
            null !== f ? h = f.load(u) : (h = new THREE.Texture(), f = o.imageLoader, f.crossOrigin = o.crossOrigin, 
            f.load(u, function(e) {
                if (!1 === THREE.Math.isPowerOfTwo(e.width) || !1 === THREE.Math.isPowerOfTwo(e.height)) {
                    var t = n(e.width), r = n(e.height), i = document.createElement("canvas");
                    i.width = t;
                    i.height = r;
                    i.getContext("2d").drawImage(e, 0, 0, t, r);
                    h.image = i;
                } else h.image = e;
                h.needsUpdate = !0;
            }));
            h.sourceFile = i;
            a && (h.repeat.set(a[0], a[1]), 1 !== a[0] && (h.wrapS = THREE.RepeatWrapping), 
            1 !== a[1] && (h.wrapT = THREE.RepeatWrapping));
            s && h.offset.set(s[0], s[1]);
            c && (i = {
                repeat: THREE.RepeatWrapping,
                mirror: THREE.MirroredRepeatWrapping
            }, void 0 !== i[c[0]] && (h.wrapS = i[c[0]]), void 0 !== i[c[1]] && (h.wrapT = i[c[1]]));
            l && (h.anisotropy = l);
            e[r] = h;
        }
        function i(e) {
            return (255 * e[0] << 16) + (255 * e[1] << 8) + 255 * e[2];
        }
        var o = this, a = "MeshLambertMaterial", s = {
            color: 15658734,
            opacity: 1,
            map: null,
            lightMap: null,
            normalMap: null,
            bumpMap: null,
            wireframe: !1
        };
        if (e.shading) {
            var c = e.shading.toLowerCase();
            "phong" === c ? a = "MeshPhongMaterial" : "basic" === c && (a = "MeshBasicMaterial");
        }
        void 0 !== e.blending && void 0 !== THREE[e.blending] && (s.blending = THREE[e.blending]);
        if (void 0 !== e.transparent || 1 > e.opacity) s.transparent = e.transparent;
        void 0 !== e.depthTest && (s.depthTest = e.depthTest);
        void 0 !== e.depthWrite && (s.depthWrite = e.depthWrite);
        void 0 !== e.visible && (s.visible = e.visible);
        void 0 !== e.flipSided && (s.side = THREE.BackSide);
        void 0 !== e.doubleSided && (s.side = THREE.DoubleSide);
        void 0 !== e.wireframe && (s.wireframe = e.wireframe);
        void 0 !== e.vertexColors && ("face" === e.vertexColors ? s.vertexColors = THREE.FaceColors : e.vertexColors && (s.vertexColors = THREE.VertexColors));
        e.colorDiffuse ? s.color = i(e.colorDiffuse) : e.DbgColor && (s.color = e.DbgColor);
        e.colorSpecular && (s.specular = i(e.colorSpecular));
        e.colorAmbient && (s.ambient = i(e.colorAmbient));
        e.colorEmissive && (s.emissive = i(e.colorEmissive));
        e.transparency && (s.opacity = e.transparency);
        e.specularCoef && (s.shininess = e.specularCoef);
        e.mapDiffuse && t && r(s, "map", e.mapDiffuse, e.mapDiffuseRepeat, e.mapDiffuseOffset, e.mapDiffuseWrap, e.mapDiffuseAnisotropy);
        e.mapLight && t && r(s, "lightMap", e.mapLight, e.mapLightRepeat, e.mapLightOffset, e.mapLightWrap, e.mapLightAnisotropy);
        e.mapBump && t && r(s, "bumpMap", e.mapBump, e.mapBumpRepeat, e.mapBumpOffset, e.mapBumpWrap, e.mapBumpAnisotropy);
        e.mapNormal && t && r(s, "normalMap", e.mapNormal, e.mapNormalRepeat, e.mapNormalOffset, e.mapNormalWrap, e.mapNormalAnisotropy);
        e.mapSpecular && t && r(s, "specularMap", e.mapSpecular, e.mapSpecularRepeat, e.mapSpecularOffset, e.mapSpecularWrap, e.mapSpecularAnisotropy);
        e.mapAlpha && t && r(s, "alphaMap", e.mapAlpha, e.mapAlphaRepeat, e.mapAlphaOffset, e.mapAlphaWrap, e.mapAlphaAnisotropy);
        e.mapBumpScale && (s.bumpScale = e.mapBumpScale);
        e.mapNormal ? (a = THREE.ShaderLib.normalmap, c = THREE.UniformsUtils.clone(a.uniforms), 
        c.tNormal.value = s.normalMap, e.mapNormalFactor && c.uNormalScale.value.set(e.mapNormalFactor, e.mapNormalFactor), 
        s.map && (c.tDiffuse.value = s.map, c.enableDiffuse.value = !0), s.specularMap && (c.tSpecular.value = s.specularMap, 
        c.enableSpecular.value = !0), s.lightMap && (c.tAO.value = s.lightMap, c.enableAO.value = !0), 
        c.diffuse.value.setHex(s.color), c.specular.value.setHex(s.specular), c.ambient.value.setHex(s.ambient), 
        c.shininess.value = s.shininess, void 0 !== s.opacity && (c.opacity.value = s.opacity), 
        a = new THREE.ShaderMaterial({
            fragmentShader: a.fragmentShader,
            vertexShader: a.vertexShader,
            uniforms: c,
            lights: !0,
            fog: !0
        }), s.transparent && (a.transparent = !0)) : a = new THREE[a](s);
        void 0 !== e.DbgName && (a.name = e.DbgName);
        return a;
    }
};

THREE.Loader.Handlers = {
    handlers: [],
    add: function(e, t) {
        this.handlers.push(e, t);
    },
    get: function(e) {
        for (var t = 0, n = this.handlers.length; t < n; t += 2) {
            var r = this.handlers[t + 1];
            if (this.handlers[t].test(e)) return r;
        }
        return null;
    }
};

THREE.XHRLoader = function(e) {
    this.cache = new THREE.Cache();
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager;
};

THREE.XHRLoader.prototype = {
    constructor: THREE.XHRLoader,
    load: function(e, t, n, r) {
        var i = this, o = i.cache.get(e);
        void 0 !== o ? t && t(o) : (o = new XMLHttpRequest(), o.open("GET", e, !0), o.addEventListener("load", function(n) {
            i.cache.add(e, this.response);
            t && t(this.response);
            i.manager.itemEnd(e);
        }, !1), void 0 !== n && o.addEventListener("progress", function(e) {
            n(e);
        }, !1), void 0 !== r && o.addEventListener("error", function(e) {
            r(e);
        }, !1), void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin), void 0 !== this.responseType && (o.responseType = this.responseType), 
        o.send(null), i.manager.itemStart(e));
    },
    setResponseType: function(e) {
        this.responseType = e;
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e;
    }
};

THREE.ImageLoader = function(e) {
    this.cache = new THREE.Cache();
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager;
};

THREE.ImageLoader.prototype = {
    constructor: THREE.ImageLoader,
    load: function(e, t, n, r) {
        var i = this, o = i.cache.get(e);
        if (void 0 !== o) t(o); else return o = document.createElement("img"), void 0 !== t && o.addEventListener("load", function(n) {
            i.cache.add(e, this);
            t(this);
            i.manager.itemEnd(e);
        }, !1), void 0 !== n && o.addEventListener("progress", function(e) {
            n(e);
        }, !1), void 0 !== r && o.addEventListener("error", function(e) {
            r(e);
        }, !1), void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin), o.src = e, 
        i.manager.itemStart(e), o;
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e;
    }
};

THREE.JSONLoader = function(e) {
    THREE.Loader.call(this, e);
    this.withCredentials = !1;
};

THREE.JSONLoader.prototype = Object.create(THREE.Loader.prototype);

THREE.JSONLoader.prototype.load = function(e, t, n) {
    n = n && "string" === typeof n ? n : this.extractUrlBase(e);
    this.onLoadStart();
    this.loadAjaxJSON(this, e, t, n);
};

THREE.JSONLoader.prototype.loadAjaxJSON = function(e, t, n, r, i) {
    var o = new XMLHttpRequest(), a = 0;
    o.onreadystatechange = function() {
        if (o.readyState === o.DONE) if (200 === o.status || 0 === o.status) {
            if (o.responseText) {
                var s = JSON.parse(o.responseText);
                if (void 0 !== s.metadata && "scene" === s.metadata.type) {
                    console.error('THREE.JSONLoader: "' + t + '" seems to be a Scene. Use THREE.SceneLoader instead.');
                    return;
                }
                s = e.parse(s, r);
                n(s.geometry, s.materials);
            } else console.error('THREE.JSONLoader: "' + t + '" seems to be unreachable or the file is empty.');
            e.onLoadComplete();
        } else console.error("THREE.JSONLoader: Couldn't load \"" + t + '" (' + o.status + ")"); else o.readyState === o.LOADING ? i && (0 === a && (a = o.getResponseHeader("Content-Length")), 
        i({
            total: a,
            loaded: o.responseText.length
        })) : o.readyState === o.HEADERS_RECEIVED && void 0 !== i && (a = o.getResponseHeader("Content-Length"));
    };
    o.open("GET", t, !0);
    o.withCredentials = this.withCredentials;
    o.send(null);
};

THREE.JSONLoader.prototype.parse = function(e, t) {
    var n = new THREE.Geometry(), r = void 0 !== e.scale ? 1 / e.scale : 1;
    (function(t) {
        var r, i, o, a, s, c, l, u, h, f, p, d, m, E = e.faces;
        c = e.vertices;
        var v = e.normals, g = e.colors, y = 0;
        if (void 0 !== e.uvs) {
            for (r = 0; r < e.uvs.length; r++) e.uvs[r].length && y++;
            for (r = 0; r < y; r++) n.faceVertexUvs[r] = [];
        }
        a = 0;
        for (s = c.length; a < s; ) r = new THREE.Vector3(), r.x = c[a++] * t, r.y = c[a++] * t, 
        r.z = c[a++] * t, n.vertices.push(r);
        a = 0;
        for (s = E.length; a < s; ) if (t = E[a++], h = t & 1, o = t & 2, r = t & 8, l = t & 16, 
        f = t & 32, c = t & 64, t &= 128, h) {
            h = new THREE.Face3();
            h.a = E[a];
            h.b = E[a + 1];
            h.c = E[a + 3];
            p = new THREE.Face3();
            p.a = E[a + 1];
            p.b = E[a + 2];
            p.c = E[a + 3];
            a += 4;
            o && (o = E[a++], h.materialIndex = o, p.materialIndex = o);
            o = n.faces.length;
            if (r) for (r = 0; r < y; r++) for (d = e.uvs[r], n.faceVertexUvs[r][o] = [], n.faceVertexUvs[r][o + 1] = [], 
            i = 0; 4 > i; i++) u = E[a++], m = d[2 * u], u = d[2 * u + 1], m = new THREE.Vector2(m, u), 
            2 !== i && n.faceVertexUvs[r][o].push(m), 0 !== i && n.faceVertexUvs[r][o + 1].push(m);
            l && (l = 3 * E[a++], h.normal.set(v[l++], v[l++], v[l]), p.normal.copy(h.normal));
            if (f) for (r = 0; 4 > r; r++) l = 3 * E[a++], f = new THREE.Vector3(v[l++], v[l++], v[l]), 
            2 !== r && h.vertexNormals.push(f), 0 !== r && p.vertexNormals.push(f);
            c && (c = E[a++], c = g[c], h.color.setHex(c), p.color.setHex(c));
            if (t) for (r = 0; 4 > r; r++) c = E[a++], c = g[c], 2 !== r && h.vertexColors.push(new THREE.Color(c)), 
            0 !== r && p.vertexColors.push(new THREE.Color(c));
            n.faces.push(h);
            n.faces.push(p);
        } else {
            h = new THREE.Face3();
            h.a = E[a++];
            h.b = E[a++];
            h.c = E[a++];
            o && (o = E[a++], h.materialIndex = o);
            o = n.faces.length;
            if (r) for (r = 0; r < y; r++) for (d = e.uvs[r], n.faceVertexUvs[r][o] = [], i = 0; 3 > i; i++) u = E[a++], 
            m = d[2 * u], u = d[2 * u + 1], m = new THREE.Vector2(m, u), n.faceVertexUvs[r][o].push(m);
            l && (l = 3 * E[a++], h.normal.set(v[l++], v[l++], v[l]));
            if (f) for (r = 0; 3 > r; r++) l = 3 * E[a++], f = new THREE.Vector3(v[l++], v[l++], v[l]), 
            h.vertexNormals.push(f);
            c && (c = E[a++], h.color.setHex(g[c]));
            if (t) for (r = 0; 3 > r; r++) c = E[a++], h.vertexColors.push(new THREE.Color(g[c]));
            n.faces.push(h);
        }
    })(r);
    (function() {
        var t = void 0 !== e.influencesPerVertex ? e.influencesPerVertex : 2;
        if (e.skinWeights) for (var r = 0, i = e.skinWeights.length; r < i; r += t) n.skinWeights.push(new THREE.Vector4(e.skinWeights[r], 1 < t ? e.skinWeights[r + 1] : 0, 2 < t ? e.skinWeights[r + 2] : 0, 3 < t ? e.skinWeights[r + 3] : 0));
        if (e.skinIndices) for (r = 0, i = e.skinIndices.length; r < i; r += t) n.skinIndices.push(new THREE.Vector4(e.skinIndices[r], 1 < t ? e.skinIndices[r + 1] : 0, 2 < t ? e.skinIndices[r + 2] : 0, 3 < t ? e.skinIndices[r + 3] : 0));
        n.bones = e.bones;
        n.bones && 0 < n.bones.length && (n.skinWeights.length !== n.skinIndices.length || n.skinIndices.length !== n.vertices.length) && console.warn("When skinning, number of vertices (" + n.vertices.length + "), skinIndices (" + n.skinIndices.length + "), and skinWeights (" + n.skinWeights.length + ") should match.");
        n.animation = e.animation;
        n.animations = e.animations;
    })();
    (function(t) {
        if (void 0 !== e.morphTargets) {
            var r, i, o, a, s, c;
            r = 0;
            for (i = e.morphTargets.length; r < i; r++) for (n.morphTargets[r] = {}, n.morphTargets[r].name = e.morphTargets[r].name, 
            n.morphTargets[r].vertices = [], s = n.morphTargets[r].vertices, c = e.morphTargets[r].vertices, 
            o = 0, a = c.length; o < a; o += 3) {
                var l = new THREE.Vector3();
                l.x = c[o] * t;
                l.y = c[o + 1] * t;
                l.z = c[o + 2] * t;
                s.push(l);
            }
        }
        if (void 0 !== e.morphColors) for (r = 0, i = e.morphColors.length; r < i; r++) for (n.morphColors[r] = {}, 
        n.morphColors[r].name = e.morphColors[r].name, n.morphColors[r].colors = [], a = n.morphColors[r].colors, 
        s = e.morphColors[r].colors, t = 0, o = s.length; t < o; t += 3) c = new THREE.Color(16755200), 
        c.setRGB(s[t], s[t + 1], s[t + 2]), a.push(c);
    })(r);
    n.computeFaceNormals();
    n.computeBoundingSphere();
    if (void 0 === e.materials || 0 === e.materials.length) return {
        geometry: n
    };
    r = this.initMaterials(e.materials, t);
    this.needsTangents(r) && n.computeTangents();
    return {
        geometry: n,
        materials: r
    };
};

THREE.LoadingManager = function(e, t, n) {
    var r = this, i = 0, o = 0;
    this.onLoad = e;
    this.onProgress = t;
    this.onError = n;
    this.itemStart = function(e) {
        o++;
    };
    this.itemEnd = function(e) {
        i++;
        if (void 0 !== r.onProgress) r.onProgress(e, i, o);
        if (i === o && void 0 !== r.onLoad) r.onLoad();
    };
};

THREE.DefaultLoadingManager = new THREE.LoadingManager();

THREE.BufferGeometryLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager;
};

THREE.BufferGeometryLoader.prototype = {
    constructor: THREE.BufferGeometryLoader,
    load: function(e, t, n, r) {
        var i = this, o = new THREE.XHRLoader();
        o.setCrossOrigin(this.crossOrigin);
        o.load(e, function(e) {
            t(i.parse(JSON.parse(e)));
        }, n, r);
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e;
    },
    parse: function(e) {
        var t = new THREE.BufferGeometry(), n = e.attributes, r;
        for (r in n) {
            var i = n[r];
            t.attributes[r] = {
                itemSize: i.itemSize,
                array: new self[i.type](i.array)
            };
        }
        n = e.offsets;
        void 0 !== n && (t.offsets = JSON.parse(JSON.stringify(n)));
        e = e.boundingSphere;
        void 0 !== e && (t.boundingSphere = new THREE.Sphere(new THREE.Vector3().fromArray(void 0 !== e.center ? e.center : [ 0, 0, 0 ]), e.radius));
        return t;
    }
};

THREE.MaterialLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager;
};

THREE.MaterialLoader.prototype = {
    constructor: THREE.MaterialLoader,
    load: function(e, t, n, r) {
        var i = this, o = new THREE.XHRLoader();
        o.setCrossOrigin(this.crossOrigin);
        o.load(e, function(e) {
            t(i.parse(JSON.parse(e)));
        }, n, r);
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e;
    },
    parse: function(e) {
        var t = new THREE[e.type]();
        void 0 !== e.color && t.color.setHex(e.color);
        void 0 !== e.ambient && t.ambient.setHex(e.ambient);
        void 0 !== e.emissive && t.emissive.setHex(e.emissive);
        void 0 !== e.specular && t.specular.setHex(e.specular);
        void 0 !== e.shininess && (t.shininess = e.shininess);
        void 0 !== e.uniforms && (t.uniforms = e.uniforms);
        void 0 !== e.vertexShader && (t.vertexShader = e.vertexShader);
        void 0 !== e.fragmentShader && (t.fragmentShader = e.fragmentShader);
        void 0 !== e.vertexColors && (t.vertexColors = e.vertexColors);
        void 0 !== e.blending && (t.blending = e.blending);
        void 0 !== e.side && (t.side = e.side);
        void 0 !== e.opacity && (t.opacity = e.opacity);
        void 0 !== e.transparent && (t.transparent = e.transparent);
        void 0 !== e.wireframe && (t.wireframe = e.wireframe);
        if (void 0 !== e.materials) for (var n = 0, r = e.materials.length; n < r; n++) t.materials.push(this.parse(e.materials[n]));
        return t;
    }
};

THREE.ObjectLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager;
};

THREE.ObjectLoader.prototype = {
    constructor: THREE.ObjectLoader,
    load: function(e, t, n, r) {
        var i = this, o = new THREE.XHRLoader(i.manager);
        o.setCrossOrigin(this.crossOrigin);
        o.load(e, function(e) {
            t(i.parse(JSON.parse(e)));
        }, n, r);
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e;
    },
    parse: function(e) {
        var t = this.parseGeometries(e.geometries), n = this.parseMaterials(e.materials);
        return this.parseObject(e.object, t, n);
    },
    parseGeometries: function(e) {
        var t = {};
        if (void 0 !== e) for (var n = new THREE.JSONLoader(), r = new THREE.BufferGeometryLoader(), i = 0, o = e.length; i < o; i++) {
            var a, s = e[i];
            switch (s.type) {
              case "PlaneGeometry":
                a = new THREE.PlaneGeometry(s.width, s.height, s.widthSegments, s.heightSegments);
                break;

              case "BoxGeometry":
              case "CubeGeometry":
                a = new THREE.BoxGeometry(s.width, s.height, s.depth, s.widthSegments, s.heightSegments, s.depthSegments);
                break;

              case "CircleGeometry":
                a = new THREE.CircleGeometry(s.radius, s.segments);
                break;

              case "CylinderGeometry":
                a = new THREE.CylinderGeometry(s.radiusTop, s.radiusBottom, s.height, s.radialSegments, s.heightSegments, s.openEnded);
                break;

              case "SphereGeometry":
                a = new THREE.SphereGeometry(s.radius, s.widthSegments, s.heightSegments, s.phiStart, s.phiLength, s.thetaStart, s.thetaLength);
                break;

              case "IcosahedronGeometry":
                a = new THREE.IcosahedronGeometry(s.radius, s.detail);
                break;

              case "TorusGeometry":
                a = new THREE.TorusGeometry(s.radius, s.tube, s.radialSegments, s.tubularSegments, s.arc);
                break;

              case "TorusKnotGeometry":
                a = new THREE.TorusKnotGeometry(s.radius, s.tube, s.radialSegments, s.tubularSegments, s.p, s.q, s.heightScale);
                break;

              case "BufferGeometry":
                a = r.parse(s.data);
                break;

              case "Geometry":
                a = n.parse(s.data).geometry;
            }
            a.uuid = s.uuid;
            void 0 !== s.name && (a.name = s.name);
            t[s.uuid] = a;
        }
        return t;
    },
    parseMaterials: function(e) {
        var t = {};
        if (void 0 !== e) for (var n = new THREE.MaterialLoader(), r = 0, i = e.length; r < i; r++) {
            var o = e[r], a = n.parse(o);
            a.uuid = o.uuid;
            void 0 !== o.name && (a.name = o.name);
            t[o.uuid] = a;
        }
        return t;
    },
    parseObject: function() {
        var e = new THREE.Matrix4();
        return function(t, n, r) {
            var i;
            switch (t.type) {
              case "Scene":
                i = new THREE.Scene();
                break;

              case "PerspectiveCamera":
                i = new THREE.PerspectiveCamera(t.fov, t.aspect, t.near, t.far);
                break;

              case "OrthographicCamera":
                i = new THREE.OrthographicCamera(t.left, t.right, t.top, t.bottom, t.near, t.far);
                break;

              case "AmbientLight":
                i = new THREE.AmbientLight(t.color);
                break;

              case "DirectionalLight":
                i = new THREE.DirectionalLight(t.color, t.intensity);
                break;

              case "PointLight":
                i = new THREE.PointLight(t.color, t.intensity, t.distance);
                break;

              case "SpotLight":
                i = new THREE.SpotLight(t.color, t.intensity, t.distance, t.angle, t.exponent);
                break;

              case "HemisphereLight":
                i = new THREE.HemisphereLight(t.color, t.groundColor, t.intensity);
                break;

              case "Mesh":
                i = n[t.geometry];
                var o = r[t.material];
                void 0 === i && console.error("THREE.ObjectLoader: Undefined geometry " + t.geometry);
                void 0 === o && console.error("THREE.ObjectLoader: Undefined material " + t.material);
                i = new THREE.Mesh(i, o);
                break;

              case "Sprite":
                o = r[t.material];
                void 0 === o && console.error("THREE.ObjectLoader: Undefined material " + t.material);
                i = new THREE.Sprite(o);
                break;

              default:
                i = new THREE.Object3D();
            }
            i.uuid = t.uuid;
            void 0 !== t.name && (i.name = t.name);
            void 0 !== t.matrix ? (e.fromArray(t.matrix), e.decompose(i.position, i.quaternion, i.scale)) : (void 0 !== t.position && i.position.fromArray(t.position), 
            void 0 !== t.rotation && i.rotation.fromArray(t.rotation), void 0 !== t.scale && i.scale.fromArray(t.scale));
            void 0 !== t.visible && (i.visible = t.visible);
            void 0 !== t.userData && (i.userData = t.userData);
            if (void 0 !== t.children) for (var a in t.children) i.add(this.parseObject(t.children[a], n, r));
            return i;
        };
    }()
};

THREE.TextureLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager;
};

THREE.TextureLoader.prototype = {
    constructor: THREE.TextureLoader,
    load: function(e, t, n, r) {
        var i = new THREE.ImageLoader(this.manager);
        i.setCrossOrigin(this.crossOrigin);
        i.load(e, function(e) {
            e = new THREE.Texture(e);
            e.needsUpdate = !0;
            void 0 !== t && t(e);
        }, n, r);
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e;
    }
};

THREE.Material = function() {
    this.id = THREE.MaterialIdCount++;
    this.uuid = THREE.Math.generateUUID();
    this.name = "";
    this.side = THREE.FrontSide;
    this.opacity = 1;
    this.transparent = !1;
    this.blending = THREE.NormalBlending;
    this.blendSrc = THREE.SrcAlphaFactor;
    this.blendDst = THREE.OneMinusSrcAlphaFactor;
    this.blendEquation = THREE.AddEquation;
    this.depthWrite = this.depthTest = !0;
    this.polygonOffset = !1;
    this.overdraw = this.alphaTest = this.polygonOffsetUnits = this.polygonOffsetFactor = 0;
    this.needsUpdate = this.visible = !0;
};

THREE.Material.prototype = {
    constructor: THREE.Material,
    setValues: function(e) {
        if (void 0 !== e) for (var t in e) {
            var n = e[t];
            if (void 0 === n) console.warn("THREE.Material: '" + t + "' parameter is undefined."); else if (t in this) {
                var r = this[t];
                r instanceof THREE.Color ? r.set(n) : r instanceof THREE.Vector3 && n instanceof THREE.Vector3 ? r.copy(n) : this[t] = "overdraw" == t ? Number(n) : n;
            }
        }
    },
    clone: function(e) {
        void 0 === e && (e = new THREE.Material());
        e.name = this.name;
        e.side = this.side;
        e.opacity = this.opacity;
        e.transparent = this.transparent;
        e.blending = this.blending;
        e.blendSrc = this.blendSrc;
        e.blendDst = this.blendDst;
        e.blendEquation = this.blendEquation;
        e.depthTest = this.depthTest;
        e.depthWrite = this.depthWrite;
        e.polygonOffset = this.polygonOffset;
        e.polygonOffsetFactor = this.polygonOffsetFactor;
        e.polygonOffsetUnits = this.polygonOffsetUnits;
        e.alphaTest = this.alphaTest;
        e.overdraw = this.overdraw;
        e.visible = this.visible;
        return e;
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};

THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);

THREE.MaterialIdCount = 0;

THREE.LineBasicMaterial = function(e) {
    THREE.Material.call(this);
    this.color = new THREE.Color(16777215);
    this.linewidth = 1;
    this.linejoin = this.linecap = "round";
    this.vertexColors = THREE.NoColors;
    this.fog = !0;
    this.setValues(e);
};

THREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.LineBasicMaterial.prototype.clone = function() {
    var e = new THREE.LineBasicMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.color.copy(this.color);
    e.linewidth = this.linewidth;
    e.linecap = this.linecap;
    e.linejoin = this.linejoin;
    e.vertexColors = this.vertexColors;
    e.fog = this.fog;
    return e;
};

THREE.LineDashedMaterial = function(e) {
    THREE.Material.call(this);
    this.color = new THREE.Color(16777215);
    this.scale = this.linewidth = 1;
    this.dashSize = 3;
    this.gapSize = 1;
    this.vertexColors = !1;
    this.fog = !0;
    this.setValues(e);
};

THREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.LineDashedMaterial.prototype.clone = function() {
    var e = new THREE.LineDashedMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.color.copy(this.color);
    e.linewidth = this.linewidth;
    e.scale = this.scale;
    e.dashSize = this.dashSize;
    e.gapSize = this.gapSize;
    e.vertexColors = this.vertexColors;
    e.fog = this.fog;
    return e;
};

THREE.MeshBasicMaterial = function(e) {
    THREE.Material.call(this);
    this.color = new THREE.Color(16777215);
    this.envMap = this.alphaMap = this.specularMap = this.lightMap = this.map = null;
    this.combine = THREE.MultiplyOperation;
    this.reflectivity = 1;
    this.refractionRatio = .98;
    this.fog = !0;
    this.shading = THREE.SmoothShading;
    this.wireframe = !1;
    this.wireframeLinewidth = 1;
    this.wireframeLinejoin = this.wireframeLinecap = "round";
    this.vertexColors = THREE.NoColors;
    this.morphTargets = this.skinning = !1;
    this.setValues(e);
};

THREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.MeshBasicMaterial.prototype.clone = function() {
    var e = new THREE.MeshBasicMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.color.copy(this.color);
    e.map = this.map;
    e.lightMap = this.lightMap;
    e.specularMap = this.specularMap;
    e.alphaMap = this.alphaMap;
    e.envMap = this.envMap;
    e.combine = this.combine;
    e.reflectivity = this.reflectivity;
    e.refractionRatio = this.refractionRatio;
    e.fog = this.fog;
    e.shading = this.shading;
    e.wireframe = this.wireframe;
    e.wireframeLinewidth = this.wireframeLinewidth;
    e.wireframeLinecap = this.wireframeLinecap;
    e.wireframeLinejoin = this.wireframeLinejoin;
    e.vertexColors = this.vertexColors;
    e.skinning = this.skinning;
    e.morphTargets = this.morphTargets;
    return e;
};

THREE.MeshLambertMaterial = function(e) {
    THREE.Material.call(this);
    this.color = new THREE.Color(16777215);
    this.ambient = new THREE.Color(16777215);
    this.emissive = new THREE.Color(0);
    this.wrapAround = !1;
    this.wrapRGB = new THREE.Vector3(1, 1, 1);
    this.envMap = this.alphaMap = this.specularMap = this.lightMap = this.map = null;
    this.combine = THREE.MultiplyOperation;
    this.reflectivity = 1;
    this.refractionRatio = .98;
    this.fog = !0;
    this.shading = THREE.SmoothShading;
    this.wireframe = !1;
    this.wireframeLinewidth = 1;
    this.wireframeLinejoin = this.wireframeLinecap = "round";
    this.vertexColors = THREE.NoColors;
    this.morphNormals = this.morphTargets = this.skinning = !1;
    this.setValues(e);
};

THREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.MeshLambertMaterial.prototype.clone = function() {
    var e = new THREE.MeshLambertMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.color.copy(this.color);
    e.ambient.copy(this.ambient);
    e.emissive.copy(this.emissive);
    e.wrapAround = this.wrapAround;
    e.wrapRGB.copy(this.wrapRGB);
    e.map = this.map;
    e.lightMap = this.lightMap;
    e.specularMap = this.specularMap;
    e.alphaMap = this.alphaMap;
    e.envMap = this.envMap;
    e.combine = this.combine;
    e.reflectivity = this.reflectivity;
    e.refractionRatio = this.refractionRatio;
    e.fog = this.fog;
    e.shading = this.shading;
    e.wireframe = this.wireframe;
    e.wireframeLinewidth = this.wireframeLinewidth;
    e.wireframeLinecap = this.wireframeLinecap;
    e.wireframeLinejoin = this.wireframeLinejoin;
    e.vertexColors = this.vertexColors;
    e.skinning = this.skinning;
    e.morphTargets = this.morphTargets;
    e.morphNormals = this.morphNormals;
    return e;
};

THREE.MeshPhongMaterial = function(e) {
    THREE.Material.call(this);
    this.color = new THREE.Color(16777215);
    this.ambient = new THREE.Color(16777215);
    this.emissive = new THREE.Color(0);
    this.specular = new THREE.Color(1118481);
    this.shininess = 30;
    this.wrapAround = this.metal = !1;
    this.wrapRGB = new THREE.Vector3(1, 1, 1);
    this.bumpMap = this.lightMap = this.map = null;
    this.bumpScale = 1;
    this.normalMap = null;
    this.normalScale = new THREE.Vector2(1, 1);
    this.envMap = this.alphaMap = this.specularMap = null;
    this.combine = THREE.MultiplyOperation;
    this.reflectivity = 1;
    this.refractionRatio = .98;
    this.fog = !0;
    this.shading = THREE.SmoothShading;
    this.wireframe = !1;
    this.wireframeLinewidth = 1;
    this.wireframeLinejoin = this.wireframeLinecap = "round";
    this.vertexColors = THREE.NoColors;
    this.morphNormals = this.morphTargets = this.skinning = !1;
    this.setValues(e);
};

THREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.MeshPhongMaterial.prototype.clone = function() {
    var e = new THREE.MeshPhongMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.color.copy(this.color);
    e.ambient.copy(this.ambient);
    e.emissive.copy(this.emissive);
    e.specular.copy(this.specular);
    e.shininess = this.shininess;
    e.metal = this.metal;
    e.wrapAround = this.wrapAround;
    e.wrapRGB.copy(this.wrapRGB);
    e.map = this.map;
    e.lightMap = this.lightMap;
    e.bumpMap = this.bumpMap;
    e.bumpScale = this.bumpScale;
    e.normalMap = this.normalMap;
    e.normalScale.copy(this.normalScale);
    e.specularMap = this.specularMap;
    e.alphaMap = this.alphaMap;
    e.envMap = this.envMap;
    e.combine = this.combine;
    e.reflectivity = this.reflectivity;
    e.refractionRatio = this.refractionRatio;
    e.fog = this.fog;
    e.shading = this.shading;
    e.wireframe = this.wireframe;
    e.wireframeLinewidth = this.wireframeLinewidth;
    e.wireframeLinecap = this.wireframeLinecap;
    e.wireframeLinejoin = this.wireframeLinejoin;
    e.vertexColors = this.vertexColors;
    e.skinning = this.skinning;
    e.morphTargets = this.morphTargets;
    e.morphNormals = this.morphNormals;
    return e;
};

THREE.MeshDepthMaterial = function(e) {
    THREE.Material.call(this);
    this.wireframe = this.morphTargets = !1;
    this.wireframeLinewidth = 1;
    this.setValues(e);
};

THREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.MeshDepthMaterial.prototype.clone = function() {
    var e = new THREE.MeshDepthMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.wireframe = this.wireframe;
    e.wireframeLinewidth = this.wireframeLinewidth;
    return e;
};

THREE.MeshNormalMaterial = function(e) {
    THREE.Material.call(this, e);
    this.shading = THREE.FlatShading;
    this.wireframe = !1;
    this.wireframeLinewidth = 1;
    this.morphTargets = !1;
    this.setValues(e);
};

THREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.MeshNormalMaterial.prototype.clone = function() {
    var e = new THREE.MeshNormalMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.shading = this.shading;
    e.wireframe = this.wireframe;
    e.wireframeLinewidth = this.wireframeLinewidth;
    return e;
};

THREE.MeshFaceMaterial = function(e) {
    this.materials = e instanceof Array ? e : [];
};

THREE.MeshFaceMaterial.prototype.clone = function() {
    for (var e = new THREE.MeshFaceMaterial(), t = 0; t < this.materials.length; t++) e.materials.push(this.materials[t].clone());
    return e;
};

THREE.PointCloudMaterial = function(e) {
    THREE.Material.call(this);
    this.color = new THREE.Color(16777215);
    this.map = null;
    this.size = 1;
    this.sizeAttenuation = !0;
    this.vertexColors = THREE.NoColors;
    this.fog = !0;
    this.setValues(e);
};

THREE.PointCloudMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.PointCloudMaterial.prototype.clone = function() {
    var e = new THREE.PointCloudMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.color.copy(this.color);
    e.map = this.map;
    e.size = this.size;
    e.sizeAttenuation = this.sizeAttenuation;
    e.vertexColors = this.vertexColors;
    e.fog = this.fog;
    return e;
};

THREE.ParticleBasicMaterial = function(e) {
    console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.");
    return new THREE.PointCloudMaterial(e);
};

THREE.ParticleSystemMaterial = function(e) {
    console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.");
    return new THREE.PointCloudMaterial(e);
};

THREE.ShaderMaterial = function(e) {
    THREE.Material.call(this);
    this.defines = {};
    this.uniforms = {};
    this.attributes = null;
    this.vertexShader = "void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";
    this.fragmentShader = "void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";
    this.shading = THREE.SmoothShading;
    this.linewidth = 1;
    this.wireframe = !1;
    this.wireframeLinewidth = 1;
    this.lights = this.fog = !1;
    this.vertexColors = THREE.NoColors;
    this.morphNormals = this.morphTargets = this.skinning = !1;
    this.defaultAttributeValues = {
        color: [ 1, 1, 1 ],
        uv: [ 0, 0 ],
        uv2: [ 0, 0 ]
    };
    this.index0AttributeName = void 0;
    this.setValues(e);
};

THREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.ShaderMaterial.prototype.clone = function() {
    var e = new THREE.ShaderMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.fragmentShader = this.fragmentShader;
    e.vertexShader = this.vertexShader;
    e.uniforms = THREE.UniformsUtils.clone(this.uniforms);
    e.attributes = this.attributes;
    e.defines = this.defines;
    e.shading = this.shading;
    e.wireframe = this.wireframe;
    e.wireframeLinewidth = this.wireframeLinewidth;
    e.fog = this.fog;
    e.lights = this.lights;
    e.vertexColors = this.vertexColors;
    e.skinning = this.skinning;
    e.morphTargets = this.morphTargets;
    e.morphNormals = this.morphNormals;
    return e;
};

THREE.RawShaderMaterial = function(e) {
    THREE.ShaderMaterial.call(this, e);
};

THREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);

THREE.RawShaderMaterial.prototype.clone = function() {
    var e = new THREE.RawShaderMaterial();
    THREE.ShaderMaterial.prototype.clone.call(this, e);
    return e;
};

THREE.SpriteMaterial = function(e) {
    THREE.Material.call(this);
    this.color = new THREE.Color(16777215);
    this.map = null;
    this.rotation = 0;
    this.fog = !1;
    this.setValues(e);
};

THREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.SpriteMaterial.prototype.clone = function() {
    var e = new THREE.SpriteMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.color.copy(this.color);
    e.map = this.map;
    e.rotation = this.rotation;
    e.fog = this.fog;
    return e;
};

THREE.SpriteCanvasMaterial = function(e) {
    THREE.Material.call(this);
    this.color = new THREE.Color(16777215);
    this.program = function(e, t) {};
    this.setValues(e);
};

THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);

THREE.SpriteCanvasMaterial.prototype.clone = function() {
    var e = new THREE.SpriteCanvasMaterial();
    THREE.Material.prototype.clone.call(this, e);
    e.color.copy(this.color);
    e.program = this.program;
    return e;
};

THREE.ParticleCanvasMaterial = THREE.SpriteCanvasMaterial;

THREE.Texture = function(e, t, n, r, i, o, a, s, c) {
    this.id = THREE.TextureIdCount++;
    this.uuid = THREE.Math.generateUUID();
    this.name = "";
    this.image = void 0 !== e ? e : THREE.Texture.DEFAULT_IMAGE;
    this.mipmaps = [];
    this.mapping = void 0 !== t ? t : THREE.Texture.DEFAULT_MAPPING;
    this.wrapS = void 0 !== n ? n : THREE.ClampToEdgeWrapping;
    this.wrapT = void 0 !== r ? r : THREE.ClampToEdgeWrapping;
    this.magFilter = void 0 !== i ? i : THREE.LinearFilter;
    this.minFilter = void 0 !== o ? o : THREE.LinearMipMapLinearFilter;
    this.anisotropy = void 0 !== c ? c : 1;
    this.format = void 0 !== a ? a : THREE.RGBAFormat;
    this.type = void 0 !== s ? s : THREE.UnsignedByteType;
    this.offset = new THREE.Vector2(0, 0);
    this.repeat = new THREE.Vector2(1, 1);
    this.generateMipmaps = !0;
    this.premultiplyAlpha = !1;
    this.flipY = !0;
    this.unpackAlignment = 4;
    this._needsUpdate = !1;
    this.onUpdate = null;
};

THREE.Texture.DEFAULT_IMAGE = void 0;

THREE.Texture.DEFAULT_MAPPING = new THREE.UVMapping();

THREE.Texture.prototype = {
    constructor: THREE.Texture,
    get needsUpdate() {
        return this._needsUpdate;
    },
    set needsUpdate(e) {
        !0 === e && this.update();
        this._needsUpdate = e;
    },
    clone: function(e) {
        void 0 === e && (e = new THREE.Texture());
        e.image = this.image;
        e.mipmaps = this.mipmaps.slice(0);
        e.mapping = this.mapping;
        e.wrapS = this.wrapS;
        e.wrapT = this.wrapT;
        e.magFilter = this.magFilter;
        e.minFilter = this.minFilter;
        e.anisotropy = this.anisotropy;
        e.format = this.format;
        e.type = this.type;
        e.offset.copy(this.offset);
        e.repeat.copy(this.repeat);
        e.generateMipmaps = this.generateMipmaps;
        e.premultiplyAlpha = this.premultiplyAlpha;
        e.flipY = this.flipY;
        e.unpackAlignment = this.unpackAlignment;
        return e;
    },
    update: function() {
        this.dispatchEvent({
            type: "update"
        });
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};

THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);

THREE.TextureIdCount = 0;

THREE.CubeTexture = function(e, t, n, r, i, o, a, s, c) {
    THREE.Texture.call(this, e, t, n, r, i, o, a, s, c);
    this.images = e;
};

THREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype);

THREE.CubeTexture.clone = function(e) {
    void 0 === e && (e = new THREE.CubeTexture());
    THREE.Texture.prototype.clone.call(this, e);
    e.images = this.images;
    return e;
};

THREE.CompressedTexture = function(e, t, n, r, i, o, a, s, c, l, u) {
    THREE.Texture.call(this, null, o, a, s, c, l, r, i, u);
    this.image = {
        width: t,
        height: n
    };
    this.mipmaps = e;
    this.generateMipmaps = !1;
};

THREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype);

THREE.CompressedTexture.prototype.clone = function() {
    var e = new THREE.CompressedTexture();
    THREE.Texture.prototype.clone.call(this, e);
    return e;
};

THREE.DataTexture = function(e, t, n, r, i, o, a, s, c, l, u) {
    THREE.Texture.call(this, null, o, a, s, c, l, r, i, u);
    this.image = {
        data: e,
        width: t,
        height: n
    };
};

THREE.DataTexture.prototype = Object.create(THREE.Texture.prototype);

THREE.DataTexture.prototype.clone = function() {
    var e = new THREE.DataTexture();
    THREE.Texture.prototype.clone.call(this, e);
    return e;
};

THREE.PointCloud = function(e, t) {
    THREE.Object3D.call(this);
    this.geometry = void 0 !== e ? e : new THREE.Geometry();
    this.material = void 0 !== t ? t : new THREE.PointCloudMaterial({
        color: 16777215 * Math.random()
    });
    this.sortParticles = !1;
};

THREE.PointCloud.prototype = Object.create(THREE.Object3D.prototype);

THREE.PointCloud.prototype.raycast = function() {
    var e = new THREE.Matrix4(), t = new THREE.Ray();
    return function(n, r) {
        var i = this, o = i.geometry, a = n.params.PointCloud.threshold;
        e.getInverse(this.matrixWorld);
        t.copy(n.ray).applyMatrix4(e);
        if (null === o.boundingBox || !1 !== t.isIntersectionBox(o.boundingBox)) {
            var s = a / ((this.scale.x + this.scale.y + this.scale.z) / 3), c = new THREE.Vector3(), a = function(e, o) {
                var a = t.distanceToPoint(e);
                if (a < s) {
                    var c = t.closestPointToPoint(e);
                    c.applyMatrix4(i.matrixWorld);
                    var l = n.ray.origin.distanceTo(c);
                    r.push({
                        distance: l,
                        distanceToRay: a,
                        point: c.clone(),
                        index: o,
                        face: null,
                        object: i
                    });
                }
            };
            if (o instanceof THREE.BufferGeometry) {
                var l = o.attributes, u = l.position.array;
                if (void 0 !== l.index) {
                    var l = l.index.array, h = o.offsets;
                    0 === h.length && (h = [ {
                        start: 0,
                        count: l.length,
                        index: 0
                    } ]);
                    for (var f = 0, p = h.length; f < p; ++f) for (var d = h[f].start, m = h[f].index, o = d, d = d + h[f].count; o < d; o++) {
                        var E = m + l[o];
                        c.set(u[3 * E], u[3 * E + 1], u[3 * E + 2]);
                        a(c, E);
                    }
                } else for (l = u.length / 3, o = 0; o < l; o++) c.set(u[3 * o], u[3 * o + 1], u[3 * o + 2]), 
                a(c, o);
            } else for (c = this.geometry.vertices, o = 0; o < c.length; o++) a(c[o], o);
        }
    };
}();

THREE.PointCloud.prototype.clone = function(e) {
    void 0 === e && (e = new THREE.PointCloud(this.geometry, this.material));
    e.sortParticles = this.sortParticles;
    THREE.Object3D.prototype.clone.call(this, e);
    return e;
};

THREE.ParticleSystem = function(e, t) {
    console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud.");
    return new THREE.PointCloud(e, t);
};

THREE.Line = function(e, t, n) {
    THREE.Object3D.call(this);
    this.geometry = void 0 !== e ? e : new THREE.Geometry();
    this.material = void 0 !== t ? t : new THREE.LineBasicMaterial({
        color: 16777215 * Math.random()
    });
    this.type = void 0 !== n ? n : THREE.LineStrip;
};

THREE.LineStrip = 0;

THREE.LinePieces = 1;

THREE.Line.prototype = Object.create(THREE.Object3D.prototype);

THREE.Line.prototype.raycast = function() {
    var e = new THREE.Matrix4(), t = new THREE.Ray(), n = new THREE.Sphere();
    return function(r, i) {
        var o = r.linePrecision, o = o * o, a = this.geometry;
        null === a.boundingSphere && a.computeBoundingSphere();
        n.copy(a.boundingSphere);
        n.applyMatrix4(this.matrixWorld);
        if (!1 !== r.ray.isIntersectionSphere(n) && (e.getInverse(this.matrixWorld), t.copy(r.ray).applyMatrix4(e), 
        a instanceof THREE.Geometry)) for (var a = a.vertices, s = a.length, c = new THREE.Vector3(), l = new THREE.Vector3(), u = this.type === THREE.LineStrip ? 1 : 2, h = 0; h < s - 1; h += u) if (!(t.distanceSqToSegment(a[h], a[h + 1], l, c) > o)) {
            var f = t.origin.distanceTo(l);
            f < r.near || f > r.far || i.push({
                distance: f,
                point: c.clone().applyMatrix4(this.matrixWorld),
                face: null,
                faceIndex: null,
                object: this
            });
        }
    };
}();

THREE.Line.prototype.clone = function(e) {
    void 0 === e && (e = new THREE.Line(this.geometry, this.material, this.type));
    THREE.Object3D.prototype.clone.call(this, e);
    return e;
};

THREE.Mesh = function(e, t) {
    THREE.Object3D.call(this);
    this.geometry = void 0 !== e ? e : new THREE.Geometry();
    this.material = void 0 !== t ? t : new THREE.MeshBasicMaterial({
        color: 16777215 * Math.random()
    });
    this.updateMorphTargets();
};

THREE.Mesh.prototype = Object.create(THREE.Object3D.prototype);

THREE.Mesh.prototype.updateMorphTargets = function() {
    if (void 0 !== this.geometry.morphTargets && 0 < this.geometry.morphTargets.length) {
        this.morphTargetBase = -1;
        this.morphTargetForcedOrder = [];
        this.morphTargetInfluences = [];
        this.morphTargetDictionary = {};
        for (var e = 0, t = this.geometry.morphTargets.length; e < t; e++) this.morphTargetInfluences.push(0), 
        this.morphTargetDictionary[this.geometry.morphTargets[e].name] = e;
    }
};

THREE.Mesh.prototype.getMorphTargetIndexByName = function(e) {
    if (void 0 !== this.morphTargetDictionary[e]) return this.morphTargetDictionary[e];
    console.log("THREE.Mesh.getMorphTargetIndexByName: morph target " + e + " does not exist. Returning 0.");
    return 0;
};

THREE.Mesh.prototype.raycast = function() {
    var e = new THREE.Matrix4(), t = new THREE.Ray(), n = new THREE.Sphere(), r = new THREE.Vector3(), i = new THREE.Vector3(), o = new THREE.Vector3();
    return function(a, s) {
        var c = this.geometry;
        null === c.boundingSphere && c.computeBoundingSphere();
        n.copy(c.boundingSphere);
        n.applyMatrix4(this.matrixWorld);
        if (!1 !== a.ray.isIntersectionSphere(n) && (e.getInverse(this.matrixWorld), t.copy(a.ray).applyMatrix4(e), 
        null === c.boundingBox || !1 !== t.isIntersectionBox(c.boundingBox))) if (c instanceof THREE.BufferGeometry) {
            var l = this.material;
            if (void 0 !== l) {
                var u = c.attributes, h, f, p = a.precision;
                if (void 0 !== u.index) {
                    var d = u.index.array, m = u.position.array, E = c.offsets;
                    0 === E.length && (E = [ {
                        start: 0,
                        count: d.length,
                        index: 0
                    } ]);
                    for (var v = 0, g = E.length; v < g; ++v) for (var u = E[v].start, y = E[v].index, c = u, T = u + E[v].count; c < T; c += 3) {
                        u = y + d[c];
                        h = y + d[c + 1];
                        f = y + d[c + 2];
                        r.set(m[3 * u], m[3 * u + 1], m[3 * u + 2]);
                        i.set(m[3 * h], m[3 * h + 1], m[3 * h + 2]);
                        o.set(m[3 * f], m[3 * f + 1], m[3 * f + 2]);
                        var x = l.side === THREE.BackSide ? t.intersectTriangle(o, i, r, !0) : t.intersectTriangle(r, i, o, l.side !== THREE.DoubleSide);
                        if (null !== x) {
                            x.applyMatrix4(this.matrixWorld);
                            var R = a.ray.origin.distanceTo(x);
                            R < p || R < a.near || R > a.far || s.push({
                                distance: R,
                                point: x,
                                indices: [ u, h, f ],
                                face: null,
                                faceIndex: null,
                                object: this
                            });
                        }
                    }
                } else for (m = u.position.array, d = c = 0, T = m.length; c < T; c += 3, d += 9) u = c, 
                h = c + 1, f = c + 2, r.set(m[d], m[d + 1], m[d + 2]), i.set(m[d + 3], m[d + 4], m[d + 5]), 
                o.set(m[d + 6], m[d + 7], m[d + 8]), x = l.side === THREE.BackSide ? t.intersectTriangle(o, i, r, !0) : t.intersectTriangle(r, i, o, l.side !== THREE.DoubleSide), 
                null !== x && (x.applyMatrix4(this.matrixWorld), R = a.ray.origin.distanceTo(x), 
                R < p || R < a.near || R > a.far || s.push({
                    distance: R,
                    point: x,
                    indices: [ u, h, f ],
                    face: null,
                    faceIndex: null,
                    object: this
                }));
            }
        } else if (c instanceof THREE.Geometry) for (d = this.material instanceof THREE.MeshFaceMaterial, 
        m = !0 === d ? this.material.materials : null, p = a.precision, E = c.vertices, 
        v = 0, g = c.faces.length; v < g; v++) if (y = c.faces[v], l = !0 === d ? m[y.materialIndex] : this.material, 
        void 0 !== l) {
            u = E[y.a];
            h = E[y.b];
            f = E[y.c];
            if (!0 === l.morphTargets) {
                x = c.morphTargets;
                R = this.morphTargetInfluences;
                r.set(0, 0, 0);
                i.set(0, 0, 0);
                o.set(0, 0, 0);
                for (var T = 0, _ = x.length; T < _; T++) {
                    var b = R[T];
                    if (0 !== b) {
                        var w = x[T].vertices;
                        r.x += (w[y.a].x - u.x) * b;
                        r.y += (w[y.a].y - u.y) * b;
                        r.z += (w[y.a].z - u.z) * b;
                        i.x += (w[y.b].x - h.x) * b;
                        i.y += (w[y.b].y - h.y) * b;
                        i.z += (w[y.b].z - h.z) * b;
                        o.x += (w[y.c].x - f.x) * b;
                        o.y += (w[y.c].y - f.y) * b;
                        o.z += (w[y.c].z - f.z) * b;
                    }
                }
                r.add(u);
                i.add(h);
                o.add(f);
                u = r;
                h = i;
                f = o;
            }
            x = l.side === THREE.BackSide ? t.intersectTriangle(f, h, u, !0) : t.intersectTriangle(u, h, f, l.side !== THREE.DoubleSide);
            null !== x && (x.applyMatrix4(this.matrixWorld), R = a.ray.origin.distanceTo(x), 
            R < p || R < a.near || R > a.far || s.push({
                distance: R,
                point: x,
                face: y,
                faceIndex: v,
                object: this
            }));
        }
    };
}();

THREE.Mesh.prototype.clone = function(e, t) {
    void 0 === e && (e = new THREE.Mesh(this.geometry, this.material));
    THREE.Object3D.prototype.clone.call(this, e, t);
    return e;
};

THREE.Bone = function(e) {
    THREE.Object3D.call(this);
    this.skin = e;
    this.accumulatedSclWeight = this.accumulatedPosWeight = this.accumulatedRotWeight = 0;
};

THREE.Bone.prototype = Object.create(THREE.Object3D.prototype);

THREE.Bone.prototype.updateMatrixWorld = function(e) {
    THREE.Object3D.prototype.updateMatrixWorld.call(this, e);
    this.accumulatedSclWeight = this.accumulatedPosWeight = this.accumulatedRotWeight = 0;
};

THREE.Skeleton = function(e, t, n) {
    this.useVertexTexture = void 0 !== n ? n : !0;
    this.identityMatrix = new THREE.Matrix4();
    e = e || [];
    this.bones = e.slice(0);
    this.useVertexTexture ? (this.boneTextureHeight = this.boneTextureWidth = e = 256 < this.bones.length ? 64 : 64 < this.bones.length ? 32 : 16 < this.bones.length ? 16 : 8, 
    this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4), 
    this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType), 
    this.boneTexture.minFilter = THREE.NearestFilter, this.boneTexture.magFilter = THREE.NearestFilter, 
    this.boneTexture.generateMipmaps = !1, this.boneTexture.flipY = !1) : this.boneMatrices = new Float32Array(16 * this.bones.length);
    if (void 0 === t) this.calculateInverses(); else if (this.bones.length === t.length) this.boneInverses = t.slice(0); else for (console.warn("THREE.Skeleton bonInverses is the wrong length."), 
    this.boneInverses = [], t = 0, e = this.bones.length; t < e; t++) this.boneInverses.push(new THREE.Matrix4());
};

THREE.Skeleton.prototype.calculateInverses = function() {
    this.boneInverses = [];
    for (var e = 0, t = this.bones.length; e < t; e++) {
        var n = new THREE.Matrix4();
        this.bones[e] && n.getInverse(this.bones[e].matrixWorld);
        this.boneInverses.push(n);
    }
};

THREE.Skeleton.prototype.pose = function() {
    for (var e, t = 0, n = this.bones.length; t < n; t++) (e = this.bones[t]) && e.matrixWorld.getInverse(this.boneInverses[t]);
    t = 0;
    for (n = this.bones.length; t < n; t++) if (e = this.bones[t]) e.parent ? (e.matrix.getInverse(e.parent.matrixWorld), 
    e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld), e.matrix.decompose(e.position, e.quaternion, e.scale);
};

THREE.Skeleton.prototype.update = function() {
    for (var e = new THREE.Matrix4(), t = 0, n = this.bones.length; t < n; t++) e.multiplyMatrices(this.bones[t] ? this.bones[t].matrixWorld : this.identityMatrix, this.boneInverses[t]), 
    e.flattenToArrayOffset(this.boneMatrices, 16 * t);
    this.useVertexTexture && (this.boneTexture.needsUpdate = !0);
};

THREE.SkinnedMesh = function(e, t, n) {
    THREE.Mesh.call(this, e, t);
    this.bindMode = "attached";
    this.bindMatrix = new THREE.Matrix4();
    this.bindMatrixInverse = new THREE.Matrix4();
    e = [];
    if (this.geometry && void 0 !== this.geometry.bones) {
        for (var r, i, o, a, s = 0, c = this.geometry.bones.length; s < c; ++s) r = this.geometry.bones[s], 
        i = r.pos, o = r.rotq, a = r.scl, t = new THREE.Bone(this), e.push(t), t.name = r.name, 
        t.position.set(i[0], i[1], i[2]), t.quaternion.set(o[0], o[1], o[2], o[3]), void 0 !== a ? t.scale.set(a[0], a[1], a[2]) : t.scale.set(1, 1, 1);
        s = 0;
        for (c = this.geometry.bones.length; s < c; ++s) r = this.geometry.bones[s], -1 !== r.parent ? e[r.parent].add(e[s]) : this.add(e[s]);
    }
    this.normalizeSkinWeights();
    this.updateMatrixWorld(!0);
    this.bind(new THREE.Skeleton(e, void 0, n));
};

THREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype);

THREE.SkinnedMesh.prototype.bind = function(e, t) {
    this.skeleton = e;
    void 0 === t && (this.updateMatrixWorld(!0), t = this.matrixWorld);
    this.bindMatrix.copy(t);
    this.bindMatrixInverse.getInverse(t);
};

THREE.SkinnedMesh.prototype.pose = function() {
    this.skeleton.pose();
};

THREE.SkinnedMesh.prototype.normalizeSkinWeights = function() {
    if (this.geometry instanceof THREE.Geometry) for (var e = 0; e < this.geometry.skinIndices.length; e++) {
        var t = this.geometry.skinWeights[e], n = 1 / t.lengthManhattan();
        Infinity !== n ? t.multiplyScalar(n) : t.set(1);
    }
};

THREE.SkinnedMesh.prototype.updateMatrixWorld = function(e) {
    THREE.Mesh.prototype.updateMatrixWorld.call(this, !0);
    "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh unreckognized bindMode: " + this.bindMode);
};

THREE.SkinnedMesh.prototype.clone = function(e) {
    void 0 === e && (e = new THREE.SkinnedMesh(this.geometry, this.material, this.useVertexTexture));
    THREE.Mesh.prototype.clone.call(this, e);
    return e;
};

THREE.MorphAnimMesh = function(e, t) {
    THREE.Mesh.call(this, e, t);
    this.duration = 1e3;
    this.mirroredLoop = !1;
    this.currentKeyframe = this.lastKeyframe = this.time = 0;
    this.direction = 1;
    this.directionBackwards = !1;
    this.setFrameRange(0, this.geometry.morphTargets.length - 1);
};

THREE.MorphAnimMesh.prototype = Object.create(THREE.Mesh.prototype);

THREE.MorphAnimMesh.prototype.setFrameRange = function(e, t) {
    this.startKeyframe = e;
    this.endKeyframe = t;
    this.length = this.endKeyframe - this.startKeyframe + 1;
};

THREE.MorphAnimMesh.prototype.setDirectionForward = function() {
    this.direction = 1;
    this.directionBackwards = !1;
};

THREE.MorphAnimMesh.prototype.setDirectionBackward = function() {
    this.direction = -1;
    this.directionBackwards = !0;
};

THREE.MorphAnimMesh.prototype.parseAnimations = function() {
    var e = this.geometry;
    e.animations || (e.animations = {});
    for (var t, n = e.animations, r = /([a-z]+)_?(\d+)/, i = 0, o = e.morphTargets.length; i < o; i++) {
        var a = e.morphTargets[i].name.match(r);
        if (a && 1 < a.length) {
            a = a[1];
            n[a] || (n[a] = {
                start: Infinity,
                end: -Infinity
            });
            var s = n[a];
            i < s.start && (s.start = i);
            i > s.end && (s.end = i);
            t || (t = a);
        }
    }
    e.firstAnimation = t;
};

THREE.MorphAnimMesh.prototype.setAnimationLabel = function(e, t, n) {
    this.geometry.animations || (this.geometry.animations = {});
    this.geometry.animations[e] = {
        start: t,
        end: n
    };
};

THREE.MorphAnimMesh.prototype.playAnimation = function(e, t) {
    var n = this.geometry.animations[e];
    n ? (this.setFrameRange(n.start, n.end), this.duration = (n.end - n.start) / t * 1e3, 
    this.time = 0) : console.warn("animation[" + e + "] undefined");
};

THREE.MorphAnimMesh.prototype.updateAnimation = function(e) {
    var t = this.duration / this.length;
    this.time += this.direction * e;
    if (this.mirroredLoop) {
        if (this.time > this.duration || 0 > this.time) this.direction *= -1, this.time > this.duration && (this.time = this.duration, 
        this.directionBackwards = !0), 0 > this.time && (this.time = 0, this.directionBackwards = !1);
    } else this.time %= this.duration, 0 > this.time && (this.time += this.duration);
    e = this.startKeyframe + THREE.Math.clamp(Math.floor(this.time / t), 0, this.length - 1);
    e !== this.currentKeyframe && (this.morphTargetInfluences[this.lastKeyframe] = 0, 
    this.morphTargetInfluences[this.currentKeyframe] = 1, this.morphTargetInfluences[e] = 0, 
    this.lastKeyframe = this.currentKeyframe, this.currentKeyframe = e);
    t = this.time % t / t;
    this.directionBackwards && (t = 1 - t);
    this.morphTargetInfluences[this.currentKeyframe] = t;
    this.morphTargetInfluences[this.lastKeyframe] = 1 - t;
};

THREE.MorphAnimMesh.prototype.interpolateTargets = function(e, t, n) {
    for (var r = this.morphTargetInfluences, i = 0, o = r.length; i < o; i++) r[i] = 0;
    -1 < e && (r[e] = 1 - n);
    -1 < t && (r[t] = n);
};

THREE.MorphAnimMesh.prototype.clone = function(e) {
    void 0 === e && (e = new THREE.MorphAnimMesh(this.geometry, this.material));
    e.duration = this.duration;
    e.mirroredLoop = this.mirroredLoop;
    e.time = this.time;
    e.lastKeyframe = this.lastKeyframe;
    e.currentKeyframe = this.currentKeyframe;
    e.direction = this.direction;
    e.directionBackwards = this.directionBackwards;
    THREE.Mesh.prototype.clone.call(this, e);
    return e;
};

THREE.LOD = function() {
    THREE.Object3D.call(this);
    this.objects = [];
};

THREE.LOD.prototype = Object.create(THREE.Object3D.prototype);

THREE.LOD.prototype.addLevel = function(e, t) {
    void 0 === t && (t = 0);
    t = Math.abs(t);
    for (var n = 0; n < this.objects.length && !(t < this.objects[n].distance); n++) ;
    this.objects.splice(n, 0, {
        distance: t,
        object: e
    });
    this.add(e);
};

THREE.LOD.prototype.getObjectForDistance = function(e) {
    for (var t = 1, n = this.objects.length; t < n && !(e < this.objects[t].distance); t++) ;
    return this.objects[t - 1].object;
};

THREE.LOD.prototype.raycast = function() {
    var e = new THREE.Vector3();
    return function(t, n) {
        e.setFromMatrixPosition(this.matrixWorld);
        var r = t.ray.origin.distanceTo(e);
        this.getObjectForDistance(r).raycast(t, n);
    };
}();

THREE.LOD.prototype.update = function() {
    var e = new THREE.Vector3(), t = new THREE.Vector3();
    return function(n) {
        if (1 < this.objects.length) {
            e.setFromMatrixPosition(n.matrixWorld);
            t.setFromMatrixPosition(this.matrixWorld);
            n = e.distanceTo(t);
            this.objects[0].object.visible = !0;
            for (var r = 1, i = this.objects.length; r < i; r++) if (n >= this.objects[r].distance) this.objects[r - 1].object.visible = !1, 
            this.objects[r].object.visible = !0; else break;
            for (;r < i; r++) this.objects[r].object.visible = !1;
        }
    };
}();

THREE.LOD.prototype.clone = function(e) {
    void 0 === e && (e = new THREE.LOD());
    THREE.Object3D.prototype.clone.call(this, e);
    for (var t = 0, n = this.objects.length; t < n; t++) {
        var r = this.objects[t].object.clone();
        r.visible = 0 === t;
        e.addLevel(r, this.objects[t].distance);
    }
    return e;
};

THREE.Sprite = function() {
    var e = new Float32Array([ -.5, -.5, 0, .5, -.5, 0, .5, .5, 0 ]), t = new THREE.BufferGeometry();
    t.addAttribute("position", new THREE.BufferAttribute(e, 3));
    return function(e) {
        THREE.Object3D.call(this);
        this.geometry = t;
        this.material = void 0 !== e ? e : new THREE.SpriteMaterial();
    };
}();

THREE.Sprite.prototype = Object.create(THREE.Object3D.prototype);

THREE.Sprite.prototype.raycast = function() {
    var e = new THREE.Vector3();
    return function(t, n) {
        e.setFromMatrixPosition(this.matrixWorld);
        var r = t.ray.distanceToPoint(e);
        r > this.scale.x || n.push({
            distance: r,
            point: this.position,
            face: null,
            object: this
        });
    };
}();

THREE.Sprite.prototype.updateMatrix = function() {
    this.matrix.compose(this.position, this.quaternion, this.scale);
    this.matrixWorldNeedsUpdate = !0;
};

THREE.Sprite.prototype.clone = function(e) {
    void 0 === e && (e = new THREE.Sprite(this.material));
    THREE.Object3D.prototype.clone.call(this, e);
    return e;
};

THREE.Particle = THREE.Sprite;

THREE.Scene = function() {
    THREE.Object3D.call(this);
    this.overrideMaterial = this.fog = null;
    this.autoUpdate = !0;
    this.matrixAutoUpdate = !1;
    this.__lights = [];
    this.__objectsAdded = [];
    this.__objectsRemoved = [];
};

THREE.Scene.prototype = Object.create(THREE.Object3D.prototype);

THREE.Scene.prototype.__addObject = function(e) {
    if (e instanceof THREE.Light) -1 === this.__lights.indexOf(e) && this.__lights.push(e), 
    e.target && void 0 === e.target.parent && this.add(e.target); else if (!(e instanceof THREE.Camera || e instanceof THREE.Bone)) {
        this.__objectsAdded.push(e);
        var t = this.__objectsRemoved.indexOf(e);
        -1 !== t && this.__objectsRemoved.splice(t, 1);
    }
    this.dispatchEvent({
        type: "objectAdded",
        object: e
    });
    e.dispatchEvent({
        type: "addedToScene",
        scene: this
    });
    for (t = 0; t < e.children.length; t++) this.__addObject(e.children[t]);
};

THREE.Scene.prototype.__removeObject = function(e) {
    if (e instanceof THREE.Light) {
        var t = this.__lights.indexOf(e);
        -1 !== t && this.__lights.splice(t, 1);
        if (e.shadowCascadeArray) for (t = 0; t < e.shadowCascadeArray.length; t++) this.__removeObject(e.shadowCascadeArray[t]);
    } else e instanceof THREE.Camera || (this.__objectsRemoved.push(e), t = this.__objectsAdded.indexOf(e), 
    -1 !== t && this.__objectsAdded.splice(t, 1));
    this.dispatchEvent({
        type: "objectRemoved",
        object: e
    });
    e.dispatchEvent({
        type: "removedFromScene",
        scene: this
    });
    for (t = 0; t < e.children.length; t++) this.__removeObject(e.children[t]);
};

THREE.Scene.prototype.clone = function(e) {
    void 0 === e && (e = new THREE.Scene());
    THREE.Object3D.prototype.clone.call(this, e);
    null !== this.fog && (e.fog = this.fog.clone());
    null !== this.overrideMaterial && (e.overrideMaterial = this.overrideMaterial.clone());
    e.autoUpdate = this.autoUpdate;
    e.matrixAutoUpdate = this.matrixAutoUpdate;
    return e;
};

THREE.Fog = function(e, t, n) {
    this.name = "";
    this.color = new THREE.Color(e);
    this.near = void 0 !== t ? t : 1;
    this.far = void 0 !== n ? n : 1e3;
};

THREE.Fog.prototype.clone = function() {
    return new THREE.Fog(this.color.getHex(), this.near, this.far);
};

THREE.FogExp2 = function(e, t) {
    this.name = "";
    this.color = new THREE.Color(e);
    this.density = void 0 !== t ? t : 25e-5;
};

THREE.FogExp2.prototype.clone = function() {
    return new THREE.FogExp2(this.color.getHex(), this.density);
};

THREE.CanvasRenderer = function(e) {
    function t(e, t, n, r) {
        l(t);
        u(n);
        h(r);
        f(e.getStyle());
        A.stroke();
        ht.expandByScalar(2 * t);
    }
    function n(e) {
        p(e.getStyle());
        A.fill();
    }
    function r(e) {
        i(e.target);
    }
    function i(e) {
        if (!(e instanceof THREE.CompressedTexture)) {
            var t = e.wrapS === THREE.RepeatWrapping, n = e.wrapT === THREE.RepeatWrapping, r = e.image, i = document.createElement("canvas");
            i.width = r.width;
            i.height = r.height;
            var o = i.getContext("2d");
            o.setTransform(1, 0, 0, -1, 0, r.height);
            o.drawImage(r, 0, 0);
            tt[e.id] = A.createPattern(i, !0 === t && !0 === n ? "repeat" : !0 === t && !1 === n ? "repeat-x" : !1 === t && !0 === n ? "repeat-y" : "no-repeat");
        }
    }
    function o(e, t, n, o, a, s, c, l, u, h, f, d, m) {
        if (!(m instanceof THREE.DataTexture)) {
            !1 === m.hasEventListener("update", r) && (void 0 !== m.image && 0 < m.image.width && i(m), 
            m.addEventListener("update", r));
            var E = tt[m.id];
            if (void 0 !== E) {
                p(E);
                var E = m.offset.x / m.repeat.x, v = m.offset.y / m.repeat.y, g = m.image.width * m.repeat.x;
                m = m.image.height * m.repeat.y;
                c = (c + E) * g;
                l = (l + v) * m;
                n -= e;
                o -= t;
                a -= e;
                s -= t;
                u = (u + E) * g - c;
                h = (h + v) * m - l;
                f = (f + E) * g - c;
                d = (d + v) * m - l;
                m = u * d - f * h;
                0 !== m && (E = 1 / m, m = (d * n - h * a) * E, h = (d * o - h * s) * E, n = (u * a - f * n) * E, 
                o = (u * s - f * o) * E, e = e - m * c - n * l, t = t - h * c - o * l, A.save(), 
                A.transform(m, h, n, o, e, t), A.fill(), A.restore());
            } else p("rgba(0,0,0,1)"), A.fill();
        }
    }
    function a(e, t, n) {
        var r = t.x - e.x, i = t.y - e.y, o = r * r + i * i;
        0 !== o && (n /= Math.sqrt(o), r *= n, i *= n, t.x += r, t.y += i, e.x -= r, e.y -= i);
    }
    function s(e) {
        L !== e && (L = A.globalAlpha = e);
    }
    function c(e) {
        F !== e && (e === THREE.NormalBlending ? A.globalCompositeOperation = "source-over" : e === THREE.AdditiveBlending ? A.globalCompositeOperation = "lighter" : e === THREE.SubtractiveBlending && (A.globalCompositeOperation = "darker"), 
        F = e);
    }
    function l(e) {
        V !== e && (V = A.lineWidth = e);
    }
    function u(e) {
        O !== e && (O = A.lineCap = e);
    }
    function h(e) {
        z !== e && (z = A.lineJoin = e);
    }
    function f(e) {
        D !== e && (D = A.strokeStyle = e);
    }
    function p(e) {
        U !== e && (U = A.fillStyle = e);
    }
    function d(e) {
        B.length !== e.length && (A.setLineDash(e), B = e);
    }
    console.log("THREE.CanvasRenderer", THREE.REVISION);
    var m = THREE.Math.smoothstep;
    e = e || {};
    var E = this, v, g, y, T = new THREE.Projector(), x = void 0 !== e.canvas ? e.canvas : document.createElement("canvas"), R = x.width, _ = x.height, b = Math.floor(R / 2), w = Math.floor(_ / 2), H = 0, S = 0, M = R, C = _, A = x.getContext("2d", {
        alpha: !0 === e.alpha
    }), P = new THREE.Color(0), k = 0, L = 1, F = 0, D = null, U = null, V = null, O = null, z = null, B = [], j, $, N, I;
    new THREE.RenderableVertex();
    new THREE.RenderableVertex();
    var G, W, X, q, Y, K, Z = new THREE.Color();
    new THREE.Color();
    new THREE.Color();
    new THREE.Color();
    new THREE.Color();
    var Q = new THREE.Color(), J = new THREE.Color(), et = new THREE.Color(), tt = {}, nt, rt, it, ot, at, st, ct, lt = new THREE.Box2(), ut = new THREE.Box2(), ht = new THREE.Box2(), ft = new THREE.Color(), pt = new THREE.Color(), dt = new THREE.Color(), mt = new THREE.Vector3(), Et = new THREE.Vector3(), vt = new THREE.Vector3(), gt = new THREE.Matrix3();
    void 0 === A.setLineDash && (A.setLineDash = function() {});
    this.domElement = x;
    this.devicePixelRatio = void 0 !== e.devicePixelRatio ? e.devicePixelRatio : void 0 !== self.devicePixelRatio ? self.devicePixelRatio : 1;
    this.sortElements = this.sortObjects = this.autoClear = !0;
    this.info = {
        render: {
            vertices: 0,
            faces: 0
        }
    };
    this.supportsVertexTextures = function() {};
    this.setFaceCulling = function() {};
    this.setSize = function(e, t, n) {
        R = e * this.devicePixelRatio;
        _ = t * this.devicePixelRatio;
        x.width = R;
        x.height = _;
        b = Math.floor(R / 2);
        w = Math.floor(_ / 2);
        !1 !== n && (x.style.width = e + "px", x.style.height = t + "px");
        lt.min.set(-b, -w);
        lt.max.set(b, w);
        ut.min.set(-b, -w);
        ut.max.set(b, w);
        L = 1;
        F = 0;
        z = O = V = U = D = null;
        this.setViewport(0, 0, e, t);
    };
    this.setViewport = function(e, t, n, r) {
        H = e * this.devicePixelRatio;
        S = t * this.devicePixelRatio;
        M = n * this.devicePixelRatio;
        C = r * this.devicePixelRatio;
    };
    this.setScissor = function() {};
    this.enableScissorTest = function() {};
    this.setClearColor = function(e, t) {
        P.set(e);
        k = void 0 !== t ? t : 1;
        ut.min.set(-b, -w);
        ut.max.set(b, w);
    };
    this.setClearColorHex = function(e, t) {
        console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");
        this.setClearColor(e, t);
    };
    this.getClearColor = function() {
        return P;
    };
    this.getClearAlpha = function() {
        return k;
    };
    this.getMaxAnisotropy = function() {
        return 0;
    };
    this.clear = function() {
        !1 === ut.empty() && (ut.intersect(lt), ut.expandByScalar(2), ut.min.x += b, ut.min.y = -ut.min.y + w, 
        ut.max.x += b, ut.max.y = -ut.max.y + w, 1 > k && A.clearRect(ut.min.x | 0, ut.min.y | 0, ut.max.x - ut.min.x | 0, ut.max.y - ut.min.y | 0), 
        0 < k && (c(THREE.NormalBlending), s(1), p("rgba(" + Math.floor(255 * P.r) + "," + Math.floor(255 * P.g) + "," + Math.floor(255 * P.b) + "," + k + ")"), 
        A.fillRect(ut.min.x | 0, ut.min.y | 0, ut.max.x - ut.min.x | 0, ut.max.y - ut.min.y | 0)), 
        ut.makeEmpty());
    };
    this.clearColor = function() {};
    this.clearDepth = function() {};
    this.clearStencil = function() {};
    this.render = function(e, x) {
        if (!1 === x instanceof THREE.Camera) console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera."); else {
            !0 === this.autoClear && this.clear();
            E.info.render.vertices = 0;
            E.info.render.faces = 0;
            A.setTransform(M / R, 0, 0, -C / _, H, _ - S);
            A.translate(b, w);
            v = T.projectScene(e, x, this.sortObjects, this.sortElements);
            g = v.elements;
            y = v.lights;
            j = x;
            gt.getNormalMatrix(x.matrixWorldInverse);
            ft.setRGB(0, 0, 0);
            pt.setRGB(0, 0, 0);
            dt.setRGB(0, 0, 0);
            for (var P = 0, k = y.length; P < k; P++) {
                var L = y[P], F = L.color;
                L instanceof THREE.AmbientLight ? ft.add(F) : L instanceof THREE.DirectionalLight ? pt.add(F) : L instanceof THREE.PointLight && dt.add(F);
            }
            P = 0;
            for (k = g.length; P < k; P++) {
                var D = g[P], U = D.material;
                if (void 0 !== U && 0 !== U.opacity) {
                    ht.makeEmpty();
                    if (D instanceof THREE.RenderableSprite) {
                        $ = D;
                        $.x *= b;
                        $.y *= w;
                        var L = $, V = D, F = U;
                        s(F.opacity);
                        c(F.blending);
                        var O = V.scale.x * b, V = V.scale.y * w, D = .5 * Math.sqrt(O * O + V * V);
                        ht.min.set(L.x - D, L.y - D);
                        ht.max.set(L.x + D, L.y + D);
                        if (F instanceof THREE.SpriteMaterial) {
                            var z = F.map;
                            if (null !== z && void 0 !== z.image) {
                                !1 === z.hasEventListener("update", r) && (0 < z.image.width && i(z), z.addEventListener("update", r));
                                D = tt[z.id];
                                void 0 !== D ? p(D) : p("rgba( 0, 0, 0, 1 )");
                                var B = z.image, D = B.width * z.offset.x, U = B.height * z.offset.y, yt = B.width * z.repeat.x, z = B.height * z.repeat.y, B = O / yt, Tt = V / z;
                                A.save();
                                A.translate(L.x, L.y);
                                0 !== F.rotation && A.rotate(F.rotation);
                                A.translate(-O / 2, -V / 2);
                                A.scale(B, Tt);
                                A.translate(-D, -U);
                                A.fillRect(D, U, yt, z);
                            } else p(F.color.getStyle()), A.save(), A.translate(L.x, L.y), 0 !== F.rotation && A.rotate(F.rotation), 
                            A.scale(O, -V), A.fillRect(-.5, -.5, 1, 1);
                            A.restore();
                        } else F instanceof THREE.SpriteCanvasMaterial && (f(F.color.getStyle()), p(F.color.getStyle()), 
                        A.save(), A.translate(L.x, L.y), 0 !== F.rotation && A.rotate(F.rotation), A.scale(O, V), 
                        F.program(A), A.restore());
                    } else if (D instanceof THREE.RenderableLine) {
                        if ($ = D.v1, N = D.v2, $.positionScreen.x *= b, $.positionScreen.y *= w, N.positionScreen.x *= b, 
                        N.positionScreen.y *= w, ht.setFromPoints([ $.positionScreen, N.positionScreen ]), 
                        !0 === lt.isIntersectionBox(ht)) if (L = $, F = N, O = D, V = U, s(V.opacity), c(V.blending), 
                        A.beginPath(), A.moveTo(L.positionScreen.x, L.positionScreen.y), A.lineTo(F.positionScreen.x, F.positionScreen.y), 
                        V instanceof THREE.LineBasicMaterial) {
                            l(V.linewidth);
                            u(V.linecap);
                            h(V.linejoin);
                            if (V.vertexColors !== THREE.VertexColors) f(V.color.getStyle()); else if (D = O.vertexColors[0].getStyle(), 
                            O = O.vertexColors[1].getStyle(), D === O) f(D); else {
                                try {
                                    var xt = A.createLinearGradient(L.positionScreen.x, L.positionScreen.y, F.positionScreen.x, F.positionScreen.y);
                                    xt.addColorStop(0, D);
                                    xt.addColorStop(1, O);
                                } catch (Rt) {
                                    xt = D;
                                }
                                f(xt);
                            }
                            A.stroke();
                            ht.expandByScalar(2 * V.linewidth);
                        } else V instanceof THREE.LineDashedMaterial && (l(V.linewidth), u(V.linecap), h(V.linejoin), 
                        f(V.color.getStyle()), d([ V.dashSize, V.gapSize ]), A.stroke(), ht.expandByScalar(2 * V.linewidth), 
                        d([]));
                    } else if (D instanceof THREE.RenderableFace) {
                        $ = D.v1;
                        N = D.v2;
                        I = D.v3;
                        if (-1 > $.positionScreen.z || 1 < $.positionScreen.z) continue;
                        if (-1 > N.positionScreen.z || 1 < N.positionScreen.z) continue;
                        if (-1 > I.positionScreen.z || 1 < I.positionScreen.z) continue;
                        $.positionScreen.x *= b;
                        $.positionScreen.y *= w;
                        N.positionScreen.x *= b;
                        N.positionScreen.y *= w;
                        I.positionScreen.x *= b;
                        I.positionScreen.y *= w;
                        0 < U.overdraw && (a($.positionScreen, N.positionScreen, U.overdraw), a(N.positionScreen, I.positionScreen, U.overdraw), 
                        a(I.positionScreen, $.positionScreen, U.overdraw));
                        ht.setFromPoints([ $.positionScreen, N.positionScreen, I.positionScreen ]);
                        if (!0 === lt.isIntersectionBox(ht)) {
                            F = $;
                            O = N;
                            V = I;
                            L = U;
                            E.info.render.vertices += 3;
                            E.info.render.faces++;
                            s(L.opacity);
                            c(L.blending);
                            G = F.positionScreen.x;
                            W = F.positionScreen.y;
                            X = O.positionScreen.x;
                            q = O.positionScreen.y;
                            Y = V.positionScreen.x;
                            K = V.positionScreen.y;
                            var U = G, yt = W, z = X, B = q, Tt = Y, _t = K;
                            A.beginPath();
                            A.moveTo(U, yt);
                            A.lineTo(z, B);
                            A.lineTo(Tt, _t);
                            A.closePath();
                            if ((L instanceof THREE.MeshLambertMaterial || L instanceof THREE.MeshPhongMaterial) && null === L.map) {
                                Q.copy(L.color);
                                J.copy(L.emissive);
                                L.vertexColors === THREE.FaceColors && Q.multiply(D.color);
                                Z.copy(ft);
                                Et.copy(F.positionWorld).add(O.positionWorld).add(V.positionWorld).divideScalar(3);
                                F = Et;
                                O = D.normalModel;
                                V = Z;
                                D = 0;
                                for (U = y.length; D < U; D++) yt = y[D], et.copy(yt.color), yt instanceof THREE.DirectionalLight ? (z = mt.setFromMatrixPosition(yt.matrixWorld).normalize(), 
                                B = O.dot(z), 0 >= B || (B *= yt.intensity, V.add(et.multiplyScalar(B)))) : yt instanceof THREE.PointLight && (z = mt.setFromMatrixPosition(yt.matrixWorld), 
                                B = O.dot(mt.subVectors(z, F).normalize()), 0 >= B || (B *= 0 == yt.distance ? 1 : 1 - Math.min(F.distanceTo(z) / yt.distance, 1), 
                                0 != B && (B *= yt.intensity, V.add(et.multiplyScalar(B)))));
                                Z.multiply(Q).add(J);
                                !0 === L.wireframe ? t(Z, L.wireframeLinewidth, L.wireframeLinecap, L.wireframeLinejoin) : n(Z);
                            } else L instanceof THREE.MeshBasicMaterial || L instanceof THREE.MeshLambertMaterial || L instanceof THREE.MeshPhongMaterial ? null !== L.map ? L.map.mapping instanceof THREE.UVMapping && (nt = D.uvs, 
                            o(G, W, X, q, Y, K, nt[0].x, nt[0].y, nt[1].x, nt[1].y, nt[2].x, nt[2].y, L.map)) : null !== L.envMap ? L.envMap.mapping instanceof THREE.SphericalReflectionMapping ? (vt.copy(D.vertexNormalsModel[0]).applyMatrix3(gt), 
                            rt = .5 * vt.x + .5, it = .5 * vt.y + .5, vt.copy(D.vertexNormalsModel[1]).applyMatrix3(gt), 
                            ot = .5 * vt.x + .5, at = .5 * vt.y + .5, vt.copy(D.vertexNormalsModel[2]).applyMatrix3(gt), 
                            st = .5 * vt.x + .5, ct = .5 * vt.y + .5, o(G, W, X, q, Y, K, rt, it, ot, at, st, ct, L.envMap)) : L.envMap.mapping instanceof THREE.SphericalRefractionMapping && (vt.copy(D.vertexNormalsModel[0]).applyMatrix3(gt), 
                            rt = -.5 * vt.x + .5, it = -.5 * vt.y + .5, vt.copy(D.vertexNormalsModel[1]).applyMatrix3(gt), 
                            ot = -.5 * vt.x + .5, at = -.5 * vt.y + .5, vt.copy(D.vertexNormalsModel[2]).applyMatrix3(gt), 
                            st = -.5 * vt.x + .5, ct = -.5 * vt.y + .5, o(G, W, X, q, Y, K, rt, it, ot, at, st, ct, L.envMap)) : (Z.copy(L.color), 
                            L.vertexColors === THREE.FaceColors && Z.multiply(D.color), !0 === L.wireframe ? t(Z, L.wireframeLinewidth, L.wireframeLinecap, L.wireframeLinejoin) : n(Z)) : (L instanceof THREE.MeshDepthMaterial ? Z.r = Z.g = Z.b = 1 - m(F.positionScreen.z * F.positionScreen.w, j.near, j.far) : L instanceof THREE.MeshNormalMaterial ? (vt.copy(D.normalModel).applyMatrix3(gt), 
                            Z.setRGB(vt.x, vt.y, vt.z).multiplyScalar(.5).addScalar(.5)) : Z.setRGB(1, 1, 1), 
                            !0 === L.wireframe ? t(Z, L.wireframeLinewidth, L.wireframeLinecap, L.wireframeLinejoin) : n(Z));
                        }
                    }
                    ut.union(ht);
                }
            }
            A.setTransform(1, 0, 0, 1, 0, 0);
        }
    };
};

THREE.ShaderChunk = {};

THREE.ShaderChunk.alphatest_fragment = "#ifdef ALPHATEST\n\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n";

THREE.ShaderChunk.lights_lambert_vertex = "vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif";

THREE.ShaderChunk.map_particle_pars_fragment = "#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif";

THREE.ShaderChunk.default_vertex = "vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n	mvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n	mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n	mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;";

THREE.ShaderChunk.map_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif";

THREE.ShaderChunk.skinnormal_vertex = "#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n";

THREE.ShaderChunk.logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif";

THREE.ShaderChunk.lightmap_pars_vertex = "#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif";

THREE.ShaderChunk.lights_phong_fragment = "vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	vec3 pointDiffuse = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n				// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		pointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	vec3 spotDiffuse = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n					// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n					// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	vec3 dirDiffuse = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n\n				// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		dirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	vec3 hemiDiffuse = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		hemiDiffuse += diffuse * hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif";

THREE.ShaderChunk.fog_pars_fragment = "#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif";

THREE.ShaderChunk.morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif";

THREE.ShaderChunk.envmap_pars_fragment = "#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	uniform samplerCube envMap;\n	uniform float flipEnvMap;\n	uniform int combine;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n		uniform bool useRefract;\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif";

THREE.ShaderChunk.logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";

THREE.ShaderChunk.normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n			// Per-Pixel Tangent Space Normal Mapping\n			// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n";

THREE.ShaderChunk.lights_phong_pars_vertex = "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n";

THREE.ShaderChunk.lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif";

THREE.ShaderChunk.shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif";

THREE.ShaderChunk.lights_phong_vertex = "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif";

THREE.ShaderChunk.map_fragment = "#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	#ifdef GAMMA_INPUT\n\n		texelColor.xyz *= texelColor.xyz;\n\n	#endif\n\n	gl_FragColor = gl_FragColor * texelColor;\n\n#endif";

THREE.ShaderChunk.lightmap_vertex = "#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif";

THREE.ShaderChunk.map_particle_fragment = "#ifdef USE_MAP\n\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif";

THREE.ShaderChunk.color_pars_fragment = "#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n";

THREE.ShaderChunk.color_vertex = "#ifdef USE_COLOR\n\n	#ifdef GAMMA_INPUT\n\n		vColor = color * color;\n\n	#else\n\n		vColor = color;\n\n	#endif\n\n#endif";

THREE.ShaderChunk.skinning_vertex = "#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n";

THREE.ShaderChunk.envmap_pars_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n	uniform bool useRefract;\n\n#endif\n";

THREE.ShaderChunk.linear_to_gamma_fragment = "#ifdef GAMMA_OUTPUT\n\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif";

THREE.ShaderChunk.color_pars_vertex = "#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif";

THREE.ShaderChunk.lights_lambert_pars_vertex = "uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n";

THREE.ShaderChunk.map_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n";

THREE.ShaderChunk.envmap_fragment = "#ifdef USE_ENVMAP\n\n	vec3 reflectVec;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n		// Transforming Normal Vectors with the Inverse Transformation\n\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n		if ( useRefract ) {\n\n			reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		} else { \n\n			reflectVec = reflect( cameraToVertex, worldNormal );\n\n		}\n\n	#else\n\n		reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n		vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#else\n\n		vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#endif\n\n	#ifdef GAMMA_INPUT\n\n		cubeColor.xyz *= cubeColor.xyz;\n\n	#endif\n\n	if ( combine == 1 ) {\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n	} else if ( combine == 2 ) {\n\n		gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n	} else {\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n	}\n\n#endif";

THREE.ShaderChunk.specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif";

THREE.ShaderChunk.logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif";

THREE.ShaderChunk.morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif";

THREE.ShaderChunk.specularmap_fragment = "float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif";

THREE.ShaderChunk.fog_fragment = "#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif";

THREE.ShaderChunk.bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n			// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n			//	http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n			// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif";

THREE.ShaderChunk.defaultnormal_vertex = "vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n	objectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n	objectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n	objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;";

THREE.ShaderChunk.lights_phong_pars_fragment = "uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;";

THREE.ShaderChunk.skinbase_vertex = "#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";

THREE.ShaderChunk.map_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";

THREE.ShaderChunk.lightmap_fragment = "#ifdef USE_LIGHTMAP\n\n	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif";

THREE.ShaderChunk.shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif";

THREE.ShaderChunk.color_fragment = "#ifdef USE_COLOR\n\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif";

THREE.ShaderChunk.morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif";

THREE.ShaderChunk.envmap_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	if ( useRefract ) {\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	} else {\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	}\n\n#endif";

THREE.ShaderChunk.shadowmap_fragment = "#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	#ifdef GAMMA_OUTPUT\n\n		shadowColor *= shadowColor;\n\n	#endif\n\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n";

THREE.ShaderChunk.worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#endif\n\n	#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#endif\n\n	#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif";

THREE.ShaderChunk.shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif";

THREE.ShaderChunk.skinning_pars_vertex = "#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n";

THREE.ShaderChunk.logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif";

THREE.ShaderChunk.alphamap_fragment = "#ifdef USE_ALPHAMAP\n\n	gl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";

THREE.ShaderChunk.alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n";

THREE.UniformsUtils = {
    merge: function(e) {
        var t, n, r, i = {};
        for (t = 0; t < e.length; t++) for (n in r = this.clone(e[t]), r) i[n] = r[n];
        return i;
    },
    clone: function(e) {
        var t, n, r, i = {};
        for (t in e) for (n in i[t] = {}, e[t]) r = e[t][n], i[t][n] = r instanceof THREE.Color || r instanceof THREE.Vector2 || r instanceof THREE.Vector3 || r instanceof THREE.Vector4 || r instanceof THREE.Matrix4 || r instanceof THREE.Texture ? r.clone() : r instanceof Array ? r.slice() : r;
        return i;
    }
};

THREE.UniformsLib = {
    common: {
        diffuse: {
            type: "c",
            value: new THREE.Color(15658734)
        },
        opacity: {
            type: "f",
            value: 1
        },
        map: {
            type: "t",
            value: null
        },
        offsetRepeat: {
            type: "v4",
            value: new THREE.Vector4(0, 0, 1, 1)
        },
        lightMap: {
            type: "t",
            value: null
        },
        specularMap: {
            type: "t",
            value: null
        },
        alphaMap: {
            type: "t",
            value: null
        },
        envMap: {
            type: "t",
            value: null
        },
        flipEnvMap: {
            type: "f",
            value: -1
        },
        useRefract: {
            type: "i",
            value: 0
        },
        reflectivity: {
            type: "f",
            value: 1
        },
        refractionRatio: {
            type: "f",
            value: .98
        },
        combine: {
            type: "i",
            value: 0
        },
        morphTargetInfluences: {
            type: "f",
            value: 0
        }
    },
    bump: {
        bumpMap: {
            type: "t",
            value: null
        },
        bumpScale: {
            type: "f",
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            type: "t",
            value: null
        },
        normalScale: {
            type: "v2",
            value: new THREE.Vector2(1, 1)
        }
    },
    fog: {
        fogDensity: {
            type: "f",
            value: 25e-5
        },
        fogNear: {
            type: "f",
            value: 1
        },
        fogFar: {
            type: "f",
            value: 2e3
        },
        fogColor: {
            type: "c",
            value: new THREE.Color(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            type: "fv",
            value: []
        },
        directionalLightDirection: {
            type: "fv",
            value: []
        },
        directionalLightColor: {
            type: "fv",
            value: []
        },
        hemisphereLightDirection: {
            type: "fv",
            value: []
        },
        hemisphereLightSkyColor: {
            type: "fv",
            value: []
        },
        hemisphereLightGroundColor: {
            type: "fv",
            value: []
        },
        pointLightColor: {
            type: "fv",
            value: []
        },
        pointLightPosition: {
            type: "fv",
            value: []
        },
        pointLightDistance: {
            type: "fv1",
            value: []
        },
        spotLightColor: {
            type: "fv",
            value: []
        },
        spotLightPosition: {
            type: "fv",
            value: []
        },
        spotLightDirection: {
            type: "fv",
            value: []
        },
        spotLightDistance: {
            type: "fv1",
            value: []
        },
        spotLightAngleCos: {
            type: "fv1",
            value: []
        },
        spotLightExponent: {
            type: "fv1",
            value: []
        }
    },
    particle: {
        psColor: {
            type: "c",
            value: new THREE.Color(15658734)
        },
        opacity: {
            type: "f",
            value: 1
        },
        size: {
            type: "f",
            value: 1
        },
        scale: {
            type: "f",
            value: 1
        },
        map: {
            type: "t",
            value: null
        },
        fogDensity: {
            type: "f",
            value: 25e-5
        },
        fogNear: {
            type: "f",
            value: 1
        },
        fogFar: {
            type: "f",
            value: 2e3
        },
        fogColor: {
            type: "c",
            value: new THREE.Color(16777215)
        }
    },
    shadowmap: {
        shadowMap: {
            type: "tv",
            value: []
        },
        shadowMapSize: {
            type: "v2v",
            value: []
        },
        shadowBias: {
            type: "fv1",
            value: []
        },
        shadowDarkness: {
            type: "fv1",
            value: []
        },
        shadowMatrix: {
            type: "m4v",
            value: []
        }
    }
};

THREE.ShaderLib = {
    basic: {
        uniforms: THREE.UniformsUtils.merge([ THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.shadowmap ]),
        vertexShader: [ THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.skinbase_vertex, "	#ifdef USE_ENVMAP", THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "	#endif", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.shadowmap_vertex, "}" ].join("\n"),
        fragmentShader: [ "uniform vec3 diffuse;\nuniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = vec4( diffuse, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}" ].join("\n")
    },
    lambert: {
        uniforms: THREE.UniformsUtils.merge([ THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            emissive: {
                type: "c",
                value: new THREE.Color(0)
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1, 1, 1)
            }
        } ]),
        vertexShader: [ "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif", THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_lambert_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_lambert_vertex, THREE.ShaderChunk.shadowmap_vertex, "}" ].join("\n"),
        fragmentShader: [ "uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = vec4( vec3( 1.0 ), opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, "	#ifdef DOUBLE_SIDED\n		if ( gl_FrontFacing )\n			gl_FragColor.xyz *= vLightFront;\n		else\n			gl_FragColor.xyz *= vLightBack;\n	#else\n		gl_FragColor.xyz *= vLightFront;\n	#endif", THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}" ].join("\n")
    },
    phong: {
        uniforms: THREE.UniformsUtils.merge([ THREE.UniformsLib.common, THREE.UniformsLib.bump, THREE.UniformsLib.normalmap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            emissive: {
                type: "c",
                value: new THREE.Color(0)
            },
            specular: {
                type: "c",
                value: new THREE.Color(1118481)
            },
            shininess: {
                type: "f",
                value: 30
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1, 1, 1)
            }
        } ]),
        vertexShader: [ "#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;", THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_phong_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "	vNormal = normalize( transformedNormal );", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "	vViewPosition = -mvPosition.xyz;", THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_phong_vertex, THREE.ShaderChunk.shadowmap_vertex, "}" ].join("\n"),
        fragmentShader: [ "uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.lights_phong_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.bumpmap_pars_fragment, THREE.ShaderChunk.normalmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = vec4( vec3( 1.0 ), opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lights_phong_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}" ].join("\n")
    },
    particle_basic: {
        uniforms: THREE.UniformsUtils.merge([ THREE.UniformsLib.particle, THREE.UniformsLib.shadowmap ]),
        vertexShader: [ "uniform float size;\nuniform float scale;", THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n	#else\n		gl_PointSize = size;\n	#endif\n	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.shadowmap_vertex, "}" ].join("\n"),
        fragmentShader: [ "uniform vec3 psColor;\nuniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_particle_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = vec4( psColor, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_particle_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.fog_fragment, "}" ].join("\n")
    },
    dashed: {
        uniforms: THREE.UniformsUtils.merge([ THREE.UniformsLib.common, THREE.UniformsLib.fog, {
            scale: {
                type: "f",
                value: 1
            },
            dashSize: {
                type: "f",
                value: 1
            },
            totalSize: {
                type: "f",
                value: 2
            }
        } ]),
        vertexShader: [ "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;", THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, "}" ].join("\n"),
        fragmentShader: [ "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	gl_FragColor = vec4( diffuse, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.fog_fragment, "}" ].join("\n")
    },
    depth: {
        uniforms: {
            mNear: {
                type: "f",
                value: 1
            },
            mFar: {
                type: "f",
                value: 2e3
            },
            opacity: {
                type: "f",
                value: 1
            }
        },
        vertexShader: [ THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}" ].join("\n"),
        fragmentShader: [ "uniform float mNear;\nuniform float mFar;\nuniform float opacity;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	float color = 1.0 - smoothstep( mNear, mFar, depth );\n	gl_FragColor = vec4( vec3( color ), opacity );\n}" ].join("\n")
    },
    normal: {
        uniforms: {
            opacity: {
                type: "f",
                value: 1
            }
        },
        vertexShader: [ "varying vec3 vNormal;", THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {\n	vNormal = normalize( normalMatrix * normal );", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}" ].join("\n"),
        fragmentShader: [ "uniform float opacity;\nvarying vec3 vNormal;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, "}" ].join("\n")
    },
    normalmap: {
        uniforms: THREE.UniformsUtils.merge([ THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            enableAO: {
                type: "i",
                value: 0
            },
            enableDiffuse: {
                type: "i",
                value: 0
            },
            enableSpecular: {
                type: "i",
                value: 0
            },
            enableReflection: {
                type: "i",
                value: 0
            },
            enableDisplacement: {
                type: "i",
                value: 0
            },
            tDisplacement: {
                type: "t",
                value: null
            },
            tDiffuse: {
                type: "t",
                value: null
            },
            tCube: {
                type: "t",
                value: null
            },
            tNormal: {
                type: "t",
                value: null
            },
            tSpecular: {
                type: "t",
                value: null
            },
            tAO: {
                type: "t",
                value: null
            },
            uNormalScale: {
                type: "v2",
                value: new THREE.Vector2(1, 1)
            },
            uDisplacementBias: {
                type: "f",
                value: 0
            },
            uDisplacementScale: {
                type: "f",
                value: 1
            },
            diffuse: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            specular: {
                type: "c",
                value: new THREE.Color(1118481)
            },
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            shininess: {
                type: "f",
                value: 30
            },
            opacity: {
                type: "f",
                value: 1
            },
            useRefract: {
                type: "i",
                value: 0
            },
            refractionRatio: {
                type: "f",
                value: .98
            },
            reflectivity: {
                type: "f",
                value: .5
            },
            uOffset: {
                type: "v2",
                value: new THREE.Vector2(0, 0)
            },
            uRepeat: {
                type: "v2",
                value: new THREE.Vector2(1, 1)
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1, 1, 1)
            }
        } ]),
        fragmentShader: [ "uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;", THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	gl_FragColor = vec4( vec3( 1.0 ), opacity );\n	vec3 specularTex = vec3( 1.0 );\n	vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n	normalTex.xy *= uNormalScale;\n	normalTex = normalize( normalTex );\n	if( enableDiffuse ) {\n		#ifdef GAMMA_INPUT\n			vec4 texelColor = texture2D( tDiffuse, vUv );\n			texelColor.xyz *= texelColor.xyz;\n			gl_FragColor = gl_FragColor * texelColor;\n		#else\n			gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n		#endif\n	}\n	if( enableAO ) {\n		#ifdef GAMMA_INPUT\n			vec4 aoColor = texture2D( tAO, vUv );\n			aoColor.xyz *= aoColor.xyz;\n			gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n		#else\n			gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n		#endif\n	}", THREE.ShaderChunk.alphatest_fragment, "	if( enableSpecular )\n		specularTex = texture2D( tSpecular, vUv ).xyz;\n	mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n	vec3 finalNormal = tsb * normalTex;\n	#ifdef FLIP_SIDED\n		finalNormal = -finalNormal;\n	#endif\n	vec3 normal = normalize( finalNormal );\n	vec3 viewPosition = normalize( vViewPosition );\n	#if MAX_POINT_LIGHTS > 0\n		vec3 pointDiffuse = vec3( 0.0 );\n		vec3 pointSpecular = vec3( 0.0 );\n		for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n			vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n			vec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n			float pointDistance = 1.0;\n			if ( pointLightDistance[ i ] > 0.0 )\n				pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n			pointVector = normalize( pointVector );\n			#ifdef WRAP_AROUND\n				float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n				float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n				vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n			#else\n				float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n			#endif\n			pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n			vec3 pointHalfVector = normalize( pointVector + viewPosition );\n			float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n			float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\n			pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n		}\n	#endif\n	#if MAX_SPOT_LIGHTS > 0\n		vec3 spotDiffuse = vec3( 0.0 );\n		vec3 spotSpecular = vec3( 0.0 );\n		for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n			vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n			vec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n			float spotDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n			spotVector = normalize( spotVector );\n			float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n			if ( spotEffect > spotLightAngleCos[ i ] ) {\n				spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n				#ifdef WRAP_AROUND\n					float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n					float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n					vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n				#else\n					float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n				#endif\n				spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n				vec3 spotHalfVector = normalize( spotVector + viewPosition );\n				float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n				float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n				float specularNormalization = ( shininess + 2.0 ) / 8.0;\n				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\n				spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n			}\n		}\n	#endif\n	#if MAX_DIR_LIGHTS > 0\n		vec3 dirDiffuse = vec3( 0.0 );\n		vec3 dirSpecular = vec3( 0.0 );\n		for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n			vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n			vec3 dirVector = normalize( lDirection.xyz );\n			#ifdef WRAP_AROUND\n				float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n				float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n				vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n			#else\n				float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n			#endif\n			dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n			vec3 dirHalfVector = normalize( dirVector + viewPosition );\n			float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n			float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n			dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n		}\n	#endif\n	#if MAX_HEMI_LIGHTS > 0\n		vec3 hemiDiffuse = vec3( 0.0 );\n		vec3 hemiSpecular = vec3( 0.0 );\n		for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n			vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n			vec3 lVector = normalize( lDirection.xyz );\n			float dotProduct = dot( normal, lVector );\n			float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n			vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n			hemiDiffuse += diffuse * hemiColor;\n			vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n			float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n			float hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n			vec3 lVectorGround = -lVector;\n			vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n			float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n			float hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n			float dotProductGround = dot( normal, lVectorGround );\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n			vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n			vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n			hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n		}\n	#endif\n	vec3 totalDiffuse = vec3( 0.0 );\n	vec3 totalSpecular = vec3( 0.0 );\n	#if MAX_DIR_LIGHTS > 0\n		totalDiffuse += dirDiffuse;\n		totalSpecular += dirSpecular;\n	#endif\n	#if MAX_HEMI_LIGHTS > 0\n		totalDiffuse += hemiDiffuse;\n		totalSpecular += hemiSpecular;\n	#endif\n	#if MAX_POINT_LIGHTS > 0\n		totalDiffuse += pointDiffuse;\n		totalSpecular += pointSpecular;\n	#endif\n	#if MAX_SPOT_LIGHTS > 0\n		totalDiffuse += spotDiffuse;\n		totalSpecular += spotSpecular;\n	#endif\n	#ifdef METAL\n		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n	#else\n		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n	#endif\n	if ( enableReflection ) {\n		vec3 vReflect;\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		if ( useRefract ) {\n			vReflect = refract( cameraToVertex, normal, refractionRatio );\n		} else {\n			vReflect = reflect( cameraToVertex, normal );\n		}\n		vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n		#ifdef GAMMA_INPUT\n			cubeColor.xyz *= cubeColor.xyz;\n		#endif\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n	}", THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}" ].join("\n"),
        vertexShader: [ "attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n	uniform sampler2D tDisplacement;\n	uniform float uDisplacementScale;\n	uniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;", THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, "	#ifdef USE_SKINNING\n		vNormal = normalize( normalMatrix * skinnedNormal.xyz );\n		vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n		vTangent = normalize( normalMatrix * skinnedTangent.xyz );\n	#else\n		vNormal = normalize( normalMatrix * normal );\n		vTangent = normalize( normalMatrix * tangent.xyz );\n	#endif\n	vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n	vUv = uv * uRepeat + uOffset;\n	vec3 displacedPosition;\n	#ifdef VERTEX_TEXTURES\n		if ( enableDisplacement ) {\n			vec3 dv = texture2D( tDisplacement, uv ).xyz;\n			float df = uDisplacementScale * dv.x + uDisplacementBias;\n			displacedPosition = position + normalize( normal ) * df;\n		} else {\n			#ifdef USE_SKINNING\n				vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n				vec4 skinned = vec4( 0.0 );\n				skinned += boneMatX * skinVertex * skinWeight.x;\n				skinned += boneMatY * skinVertex * skinWeight.y;\n				skinned += boneMatZ * skinVertex * skinWeight.z;\n				skinned += boneMatW * skinVertex * skinWeight.w;\n				skinned  = bindMatrixInverse * skinned;\n				displacedPosition = skinned.xyz;\n			#else\n				displacedPosition = position;\n			#endif\n		}\n	#else\n		#ifdef USE_SKINNING\n			vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n			vec4 skinned = vec4( 0.0 );\n			skinned += boneMatX * skinVertex * skinWeight.x;\n			skinned += boneMatY * skinVertex * skinWeight.y;\n			skinned += boneMatZ * skinVertex * skinWeight.z;\n			skinned += boneMatW * skinVertex * skinWeight.w;\n			skinned  = bindMatrixInverse * skinned;\n			displacedPosition = skinned.xyz;\n		#else\n			displacedPosition = position;\n		#endif\n	#endif\n	vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n	vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, "	vWorldPosition = worldPosition.xyz;\n	vViewPosition = -mvPosition.xyz;\n	#ifdef USE_SHADOWMAP\n		for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n			vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n		}\n	#endif\n}" ].join("\n")
    },
    cube: {
        uniforms: {
            tCube: {
                type: "t",
                value: null
            },
            tFlip: {
                type: "f",
                value: -1
            }
        },
        vertexShader: [ "varying vec3 vWorldPosition;", THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {\n	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n	vWorldPosition = worldPosition.xyz;\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", THREE.ShaderChunk.logdepthbuf_vertex, "}" ].join("\n"),
        fragmentShader: [ "uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );", THREE.ShaderChunk.logdepthbuf_fragment, "}" ].join("\n")
    },
    depthRGBA: {
        uniforms: {},
        vertexShader: [ THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}" ].join("\n"),
        fragmentShader: [ THREE.ShaderChunk.logdepthbuf_pars_fragment, "vec4 pack_depth( const in float depth ) {\n	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n	res -= res.xxyz * bit_mask;\n	return res;\n}\nvoid main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	#ifdef USE_LOGDEPTHBUF_EXT\n		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n	#else\n		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n	#endif\n}" ].join("\n")
    }
};

THREE.WebGLRenderer = function(e) {
    function t(e, t) {
        var n = e.vertices.length, r = t.material;
        if (r.attributes) {
            void 0 === e.__webglCustomAttributesList && (e.__webglCustomAttributesList = []);
            for (var i in r.attributes) {
                var o = r.attributes[i];
                if (!o.__webglInitialized || o.createUniqueBuffers) {
                    o.__webglInitialized = !0;
                    var a = 1;
                    "v2" === o.type ? a = 2 : "v3" === o.type ? a = 3 : "v4" === o.type ? a = 4 : "c" === o.type && (a = 3);
                    o.size = a;
                    o.array = new Float32Array(n * a);
                    o.buffer = $t.createBuffer();
                    o.buffer.belongsToAttribute = i;
                    o.needsUpdate = !0;
                }
                e.__webglCustomAttributesList.push(o);
            }
        }
    }
    function n(e, t) {
        var n = t.geometry, a = e.faces3, s = 3 * a.length, c = 1 * a.length, l = 3 * a.length, a = r(t, e), u = o(a), h = i(a), f = a.vertexColors ? a.vertexColors : !1;
        e.__vertexArray = new Float32Array(3 * s);
        h && (e.__normalArray = new Float32Array(3 * s));
        n.hasTangents && (e.__tangentArray = new Float32Array(4 * s));
        f && (e.__colorArray = new Float32Array(3 * s));
        u && (0 < n.faceVertexUvs.length && (e.__uvArray = new Float32Array(2 * s)), 1 < n.faceVertexUvs.length && (e.__uv2Array = new Float32Array(2 * s)));
        t.geometry.skinWeights.length && t.geometry.skinIndices.length && (e.__skinIndexArray = new Float32Array(4 * s), 
        e.__skinWeightArray = new Float32Array(4 * s));
        n = null !== Ut && 21845 < c ? Uint32Array : Uint16Array;
        e.__typeArray = n;
        e.__faceArray = new n(3 * c);
        e.__lineArray = new n(2 * l);
        if (e.numMorphTargets) for (e.__morphTargetsArrays = [], n = 0, u = e.numMorphTargets; n < u; n++) e.__morphTargetsArrays.push(new Float32Array(3 * s));
        if (e.numMorphNormals) for (e.__morphNormalsArrays = [], n = 0, u = e.numMorphNormals; n < u; n++) e.__morphNormalsArrays.push(new Float32Array(3 * s));
        e.__webglFaceCount = 3 * c;
        e.__webglLineCount = 2 * l;
        if (a.attributes) {
            void 0 === e.__webglCustomAttributesList && (e.__webglCustomAttributesList = []);
            for (var p in a.attributes) {
                var c = a.attributes[p], l = {}, d;
                for (d in c) l[d] = c[d];
                if (!l.__webglInitialized || l.createUniqueBuffers) l.__webglInitialized = !0, n = 1, 
                "v2" === l.type ? n = 2 : "v3" === l.type ? n = 3 : "v4" === l.type ? n = 4 : "c" === l.type && (n = 3), 
                l.size = n, l.array = new Float32Array(s * n), l.buffer = $t.createBuffer(), l.buffer.belongsToAttribute = p, 
                c.needsUpdate = !0, l.__original = c;
                e.__webglCustomAttributesList.push(l);
            }
        }
        e.__inittedArrays = !0;
    }
    function r(e, t) {
        return e.material instanceof THREE.MeshFaceMaterial ? e.material.materials[t.materialIndex] : e.material;
    }
    function i(e) {
        return e instanceof THREE.MeshBasicMaterial && !e.envMap || e instanceof THREE.MeshDepthMaterial ? !1 : e && void 0 !== e.shading && e.shading === THREE.SmoothShading ? THREE.SmoothShading : THREE.FlatShading;
    }
    function o(e) {
        return e.map || e.lightMap || e.bumpMap || e.normalMap || e.specularMap || e.alphaMap || e instanceof THREE.ShaderMaterial ? !0 : !1;
    }
    function a(e) {
        for (var t in e.attributes) {
            var n = "index" === t ? $t.ELEMENT_ARRAY_BUFFER : $t.ARRAY_BUFFER, r = e.attributes[t];
            r.buffer = $t.createBuffer();
            $t.bindBuffer(n, r.buffer);
            $t.bufferData(n, r.array, $t.STATIC_DRAW);
        }
    }
    function s(e, t, n, r) {
        for (var i in t) {
            var o = t[i], a = n[i];
            if (0 <= o) if (a) {
                var s = a.itemSize;
                $t.bindBuffer($t.ARRAY_BUFFER, a.buffer);
                l(o);
                $t.vertexAttribPointer(o, s, $t.FLOAT, !1, 0, r * s * 4);
            } else e.defaultAttributeValues && (2 === e.defaultAttributeValues[i].length ? $t.vertexAttrib2fv(o, e.defaultAttributeValues[i]) : 3 === e.defaultAttributeValues[i].length && $t.vertexAttrib3fv(o, e.defaultAttributeValues[i]));
        }
        u();
    }
    function c() {
        for (var e = 0, t = _t.length; e < t; e++) _t[e] = 0;
    }
    function l(e) {
        _t[e] = 1;
        0 === bt[e] && ($t.enableVertexAttribArray(e), bt[e] = 1);
    }
    function u() {
        for (var e = 0, t = bt.length; e < t; e++) bt[e] !== _t[e] && ($t.disableVertexAttribArray(e), 
        bt[e] = 0);
    }
    function h(e, t) {
        return e.z !== t.z ? t.z - e.z : e.id - t.id;
    }
    function f(e, t) {
        return e.z !== t.z ? e.z - t.z : e.id - t.id;
    }
    function p(e, t) {
        return t[0] - e[0];
    }
    function d(e, t, s) {
        if (!1 !== t.visible) {
            var c = e.__webglObjects[t.id];
            if (c && (!1 === t.frustumCulled || !0 === wt.intersectsObject(t))) {
                var l = t.geometry, u, h, f;
                if (l instanceof THREE.BufferGeometry) {
                    var m = $t.DYNAMIC_DRAW, E = l.attributes, v, g;
                    for (v in E) g = E[v], g.needsUpdate && ("index" === v ? ($t.bindBuffer($t.ELEMENT_ARRAY_BUFFER, g.buffer), 
                    $t.bufferData($t.ELEMENT_ARRAY_BUFFER, g.array, m)) : ($t.bindBuffer($t.ARRAY_BUFFER, g.buffer), 
                    $t.bufferData($t.ARRAY_BUFFER, g.array, m)), g.needsUpdate = !1);
                } else if (t instanceof THREE.Mesh) {
                    if (l.buffersNeedUpdate || l.groupsNeedUpdate) l instanceof THREE.BufferGeometry ? a(l) : t instanceof THREE.Mesh && y(e, t, l);
                    for (var T = 0, _ = l.geometryGroupsList.length; T < _; T++) if (u = l.geometryGroupsList[T], 
                    f = r(t, u), (l.buffersNeedUpdate || l.groupsNeedUpdate) && n(u, t), h = f.attributes && x(f), 
                    l.verticesNeedUpdate || l.morphTargetsNeedUpdate || l.elementsNeedUpdate || l.uvsNeedUpdate || l.normalsNeedUpdate || l.colorsNeedUpdate || l.tangentsNeedUpdate || h) {
                        var b = u, w = t, H = $t.DYNAMIC_DRAW, S = !l.dynamic, M = f;
                        if (b.__inittedArrays) {
                            var C = i(M), A = M.vertexColors ? M.vertexColors : !1, P = o(M), k = C === THREE.SmoothShading, L = void 0, F = void 0, D = void 0, U = void 0, V = void 0, O = void 0, z = void 0, $ = void 0, B = void 0, j = void 0, N = void 0, I = void 0, G = void 0, W = void 0, X = void 0, q = void 0, Q = void 0, J = void 0, et = void 0, tt = void 0, nt = void 0, rt = void 0, it = void 0, ot = void 0, at = void 0, st = void 0, ct = void 0, lt = void 0, ut = void 0, ht = void 0, ft = void 0, pt = void 0, dt = void 0, mt = void 0, Et = void 0, vt = void 0, gt = void 0, yt = void 0, Tt = void 0, xt = void 0, Rt = 0, _t = 0, bt = 0, Ct = 0, At = 0, Pt = 0, kt = 0, Lt = 0, Ft = 0, Dt = 0, Ut = 0, Vt = 0, Ot = void 0, zt = b.__vertexArray, Bt = b.__uvArray, jt = b.__uv2Array, Nt = b.__normalArray, It = b.__tangentArray, Gt = b.__colorArray, Wt = b.__skinIndexArray, Xt = b.__skinWeightArray, qt = b.__morphTargetsArrays, Yt = b.__morphNormalsArrays, Kt = b.__webglCustomAttributesList, Zt = void 0, Qt = b.__faceArray, Jt = b.__lineArray, en = w.geometry, tn = en.elementsNeedUpdate, nn = en.uvsNeedUpdate, rn = en.normalsNeedUpdate, on = en.tangentsNeedUpdate, an = en.colorsNeedUpdate, sn = en.morphTargetsNeedUpdate, cn = en.vertices, ln = b.faces3, un = en.faces, hn = en.faceVertexUvs[0], fn = en.faceVertexUvs[1], pn = en.skinIndices, dn = en.skinWeights, mn = en.morphTargets, En = en.morphNormals;
                            if (en.verticesNeedUpdate) {
                                L = 0;
                                for (F = ln.length; L < F; L++) U = un[ln[L]], I = cn[U.a], G = cn[U.b], W = cn[U.c], 
                                zt[_t] = I.x, zt[_t + 1] = I.y, zt[_t + 2] = I.z, zt[_t + 3] = G.x, zt[_t + 4] = G.y, 
                                zt[_t + 5] = G.z, zt[_t + 6] = W.x, zt[_t + 7] = W.y, zt[_t + 8] = W.z, _t += 9;
                                $t.bindBuffer($t.ARRAY_BUFFER, b.__webglVertexBuffer);
                                $t.bufferData($t.ARRAY_BUFFER, zt, H);
                            }
                            if (sn) for (Et = 0, vt = mn.length; Et < vt; Et++) {
                                L = Ut = 0;
                                for (F = ln.length; L < F; L++) Tt = ln[L], U = un[Tt], I = mn[Et].vertices[U.a], 
                                G = mn[Et].vertices[U.b], W = mn[Et].vertices[U.c], gt = qt[Et], gt[Ut] = I.x, gt[Ut + 1] = I.y, 
                                gt[Ut + 2] = I.z, gt[Ut + 3] = G.x, gt[Ut + 4] = G.y, gt[Ut + 5] = G.z, gt[Ut + 6] = W.x, 
                                gt[Ut + 7] = W.y, gt[Ut + 8] = W.z, M.morphNormals && (k ? (xt = En[Et].vertexNormals[Tt], 
                                J = xt.a, et = xt.b, tt = xt.c) : tt = et = J = En[Et].faceNormals[Tt], yt = Yt[Et], 
                                yt[Ut] = J.x, yt[Ut + 1] = J.y, yt[Ut + 2] = J.z, yt[Ut + 3] = et.x, yt[Ut + 4] = et.y, 
                                yt[Ut + 5] = et.z, yt[Ut + 6] = tt.x, yt[Ut + 7] = tt.y, yt[Ut + 8] = tt.z), Ut += 9;
                                $t.bindBuffer($t.ARRAY_BUFFER, b.__webglMorphTargetsBuffers[Et]);
                                $t.bufferData($t.ARRAY_BUFFER, qt[Et], H);
                                M.morphNormals && ($t.bindBuffer($t.ARRAY_BUFFER, b.__webglMorphNormalsBuffers[Et]), 
                                $t.bufferData($t.ARRAY_BUFFER, Yt[Et], H));
                            }
                            if (dn.length) {
                                L = 0;
                                for (F = ln.length; L < F; L++) U = un[ln[L]], ot = dn[U.a], at = dn[U.b], st = dn[U.c], 
                                Xt[Dt] = ot.x, Xt[Dt + 1] = ot.y, Xt[Dt + 2] = ot.z, Xt[Dt + 3] = ot.w, Xt[Dt + 4] = at.x, 
                                Xt[Dt + 5] = at.y, Xt[Dt + 6] = at.z, Xt[Dt + 7] = at.w, Xt[Dt + 8] = st.x, Xt[Dt + 9] = st.y, 
                                Xt[Dt + 10] = st.z, Xt[Dt + 11] = st.w, ct = pn[U.a], lt = pn[U.b], ut = pn[U.c], 
                                Wt[Dt] = ct.x, Wt[Dt + 1] = ct.y, Wt[Dt + 2] = ct.z, Wt[Dt + 3] = ct.w, Wt[Dt + 4] = lt.x, 
                                Wt[Dt + 5] = lt.y, Wt[Dt + 6] = lt.z, Wt[Dt + 7] = lt.w, Wt[Dt + 8] = ut.x, Wt[Dt + 9] = ut.y, 
                                Wt[Dt + 10] = ut.z, Wt[Dt + 11] = ut.w, Dt += 12;
                                0 < Dt && ($t.bindBuffer($t.ARRAY_BUFFER, b.__webglSkinIndicesBuffer), $t.bufferData($t.ARRAY_BUFFER, Wt, H), 
                                $t.bindBuffer($t.ARRAY_BUFFER, b.__webglSkinWeightsBuffer), $t.bufferData($t.ARRAY_BUFFER, Xt, H));
                            }
                            if (an && A) {
                                L = 0;
                                for (F = ln.length; L < F; L++) U = un[ln[L]], z = U.vertexColors, $ = U.color, 
                                3 === z.length && A === THREE.VertexColors ? (nt = z[0], rt = z[1], it = z[2]) : it = rt = nt = $, 
                                Gt[Ft] = nt.r, Gt[Ft + 1] = nt.g, Gt[Ft + 2] = nt.b, Gt[Ft + 3] = rt.r, Gt[Ft + 4] = rt.g, 
                                Gt[Ft + 5] = rt.b, Gt[Ft + 6] = it.r, Gt[Ft + 7] = it.g, Gt[Ft + 8] = it.b, Ft += 9;
                                0 < Ft && ($t.bindBuffer($t.ARRAY_BUFFER, b.__webglColorBuffer), $t.bufferData($t.ARRAY_BUFFER, Gt, H));
                            }
                            if (on && en.hasTangents) {
                                L = 0;
                                for (F = ln.length; L < F; L++) U = un[ln[L]], B = U.vertexTangents, X = B[0], q = B[1], 
                                Q = B[2], It[kt] = X.x, It[kt + 1] = X.y, It[kt + 2] = X.z, It[kt + 3] = X.w, It[kt + 4] = q.x, 
                                It[kt + 5] = q.y, It[kt + 6] = q.z, It[kt + 7] = q.w, It[kt + 8] = Q.x, It[kt + 9] = Q.y, 
                                It[kt + 10] = Q.z, It[kt + 11] = Q.w, kt += 12;
                                $t.bindBuffer($t.ARRAY_BUFFER, b.__webglTangentBuffer);
                                $t.bufferData($t.ARRAY_BUFFER, It, H);
                            }
                            if (rn && C) {
                                L = 0;
                                for (F = ln.length; L < F; L++) if (U = un[ln[L]], V = U.vertexNormals, O = U.normal, 
                                3 === V.length && k) for (ht = 0; 3 > ht; ht++) pt = V[ht], Nt[Pt] = pt.x, Nt[Pt + 1] = pt.y, 
                                Nt[Pt + 2] = pt.z, Pt += 3; else for (ht = 0; 3 > ht; ht++) Nt[Pt] = O.x, Nt[Pt + 1] = O.y, 
                                Nt[Pt + 2] = O.z, Pt += 3;
                                $t.bindBuffer($t.ARRAY_BUFFER, b.__webglNormalBuffer);
                                $t.bufferData($t.ARRAY_BUFFER, Nt, H);
                            }
                            if (nn && hn && P) {
                                L = 0;
                                for (F = ln.length; L < F; L++) if (D = ln[L], j = hn[D], void 0 !== j) for (ht = 0; 3 > ht; ht++) dt = j[ht], 
                                Bt[bt] = dt.x, Bt[bt + 1] = dt.y, bt += 2;
                                0 < bt && ($t.bindBuffer($t.ARRAY_BUFFER, b.__webglUVBuffer), $t.bufferData($t.ARRAY_BUFFER, Bt, H));
                            }
                            if (nn && fn && P) {
                                L = 0;
                                for (F = ln.length; L < F; L++) if (D = ln[L], N = fn[D], void 0 !== N) for (ht = 0; 3 > ht; ht++) mt = N[ht], 
                                jt[Ct] = mt.x, jt[Ct + 1] = mt.y, Ct += 2;
                                0 < Ct && ($t.bindBuffer($t.ARRAY_BUFFER, b.__webglUV2Buffer), $t.bufferData($t.ARRAY_BUFFER, jt, H));
                            }
                            if (tn) {
                                L = 0;
                                for (F = ln.length; L < F; L++) Qt[At] = Rt, Qt[At + 1] = Rt + 1, Qt[At + 2] = Rt + 2, 
                                At += 3, Jt[Lt] = Rt, Jt[Lt + 1] = Rt + 1, Jt[Lt + 2] = Rt, Jt[Lt + 3] = Rt + 2, 
                                Jt[Lt + 4] = Rt + 1, Jt[Lt + 5] = Rt + 2, Lt += 6, Rt += 3;
                                $t.bindBuffer($t.ELEMENT_ARRAY_BUFFER, b.__webglFaceBuffer);
                                $t.bufferData($t.ELEMENT_ARRAY_BUFFER, Qt, H);
                                $t.bindBuffer($t.ELEMENT_ARRAY_BUFFER, b.__webglLineBuffer);
                                $t.bufferData($t.ELEMENT_ARRAY_BUFFER, Jt, H);
                            }
                            if (Kt) for (ht = 0, ft = Kt.length; ht < ft; ht++) if (Zt = Kt[ht], Zt.__original.needsUpdate) {
                                Vt = 0;
                                if (1 === Zt.size) if (void 0 === Zt.boundTo || "vertices" === Zt.boundTo) for (L = 0, 
                                F = ln.length; L < F; L++) U = un[ln[L]], Zt.array[Vt] = Zt.value[U.a], Zt.array[Vt + 1] = Zt.value[U.b], 
                                Zt.array[Vt + 2] = Zt.value[U.c], Vt += 3; else {
                                    if ("faces" === Zt.boundTo) for (L = 0, F = ln.length; L < F; L++) Ot = Zt.value[ln[L]], 
                                    Zt.array[Vt] = Ot, Zt.array[Vt + 1] = Ot, Zt.array[Vt + 2] = Ot, Vt += 3;
                                } else if (2 === Zt.size) if (void 0 === Zt.boundTo || "vertices" === Zt.boundTo) for (L = 0, 
                                F = ln.length; L < F; L++) U = un[ln[L]], I = Zt.value[U.a], G = Zt.value[U.b], 
                                W = Zt.value[U.c], Zt.array[Vt] = I.x, Zt.array[Vt + 1] = I.y, Zt.array[Vt + 2] = G.x, 
                                Zt.array[Vt + 3] = G.y, Zt.array[Vt + 4] = W.x, Zt.array[Vt + 5] = W.y, Vt += 6; else {
                                    if ("faces" === Zt.boundTo) for (L = 0, F = ln.length; L < F; L++) W = G = I = Ot = Zt.value[ln[L]], 
                                    Zt.array[Vt] = I.x, Zt.array[Vt + 1] = I.y, Zt.array[Vt + 2] = G.x, Zt.array[Vt + 3] = G.y, 
                                    Zt.array[Vt + 4] = W.x, Zt.array[Vt + 5] = W.y, Vt += 6;
                                } else if (3 === Zt.size) {
                                    var vn;
                                    vn = "c" === Zt.type ? [ "r", "g", "b" ] : [ "x", "y", "z" ];
                                    if (void 0 === Zt.boundTo || "vertices" === Zt.boundTo) for (L = 0, F = ln.length; L < F; L++) U = un[ln[L]], 
                                    I = Zt.value[U.a], G = Zt.value[U.b], W = Zt.value[U.c], Zt.array[Vt] = I[vn[0]], 
                                    Zt.array[Vt + 1] = I[vn[1]], Zt.array[Vt + 2] = I[vn[2]], Zt.array[Vt + 3] = G[vn[0]], 
                                    Zt.array[Vt + 4] = G[vn[1]], Zt.array[Vt + 5] = G[vn[2]], Zt.array[Vt + 6] = W[vn[0]], 
                                    Zt.array[Vt + 7] = W[vn[1]], Zt.array[Vt + 8] = W[vn[2]], Vt += 9; else if ("faces" === Zt.boundTo) for (L = 0, 
                                    F = ln.length; L < F; L++) W = G = I = Ot = Zt.value[ln[L]], Zt.array[Vt] = I[vn[0]], 
                                    Zt.array[Vt + 1] = I[vn[1]], Zt.array[Vt + 2] = I[vn[2]], Zt.array[Vt + 3] = G[vn[0]], 
                                    Zt.array[Vt + 4] = G[vn[1]], Zt.array[Vt + 5] = G[vn[2]], Zt.array[Vt + 6] = W[vn[0]], 
                                    Zt.array[Vt + 7] = W[vn[1]], Zt.array[Vt + 8] = W[vn[2]], Vt += 9; else if ("faceVertices" === Zt.boundTo) for (L = 0, 
                                    F = ln.length; L < F; L++) Ot = Zt.value[ln[L]], I = Ot[0], G = Ot[1], W = Ot[2], 
                                    Zt.array[Vt] = I[vn[0]], Zt.array[Vt + 1] = I[vn[1]], Zt.array[Vt + 2] = I[vn[2]], 
                                    Zt.array[Vt + 3] = G[vn[0]], Zt.array[Vt + 4] = G[vn[1]], Zt.array[Vt + 5] = G[vn[2]], 
                                    Zt.array[Vt + 6] = W[vn[0]], Zt.array[Vt + 7] = W[vn[1]], Zt.array[Vt + 8] = W[vn[2]], 
                                    Vt += 9;
                                } else if (4 === Zt.size) if (void 0 === Zt.boundTo || "vertices" === Zt.boundTo) for (L = 0, 
                                F = ln.length; L < F; L++) U = un[ln[L]], I = Zt.value[U.a], G = Zt.value[U.b], 
                                W = Zt.value[U.c], Zt.array[Vt] = I.x, Zt.array[Vt + 1] = I.y, Zt.array[Vt + 2] = I.z, 
                                Zt.array[Vt + 3] = I.w, Zt.array[Vt + 4] = G.x, Zt.array[Vt + 5] = G.y, Zt.array[Vt + 6] = G.z, 
                                Zt.array[Vt + 7] = G.w, Zt.array[Vt + 8] = W.x, Zt.array[Vt + 9] = W.y, Zt.array[Vt + 10] = W.z, 
                                Zt.array[Vt + 11] = W.w, Vt += 12; else if ("faces" === Zt.boundTo) for (L = 0, 
                                F = ln.length; L < F; L++) W = G = I = Ot = Zt.value[ln[L]], Zt.array[Vt] = I.x, 
                                Zt.array[Vt + 1] = I.y, Zt.array[Vt + 2] = I.z, Zt.array[Vt + 3] = I.w, Zt.array[Vt + 4] = G.x, 
                                Zt.array[Vt + 5] = G.y, Zt.array[Vt + 6] = G.z, Zt.array[Vt + 7] = G.w, Zt.array[Vt + 8] = W.x, 
                                Zt.array[Vt + 9] = W.y, Zt.array[Vt + 10] = W.z, Zt.array[Vt + 11] = W.w, Vt += 12; else if ("faceVertices" === Zt.boundTo) for (L = 0, 
                                F = ln.length; L < F; L++) Ot = Zt.value[ln[L]], I = Ot[0], G = Ot[1], W = Ot[2], 
                                Zt.array[Vt] = I.x, Zt.array[Vt + 1] = I.y, Zt.array[Vt + 2] = I.z, Zt.array[Vt + 3] = I.w, 
                                Zt.array[Vt + 4] = G.x, Zt.array[Vt + 5] = G.y, Zt.array[Vt + 6] = G.z, Zt.array[Vt + 7] = G.w, 
                                Zt.array[Vt + 8] = W.x, Zt.array[Vt + 9] = W.y, Zt.array[Vt + 10] = W.z, Zt.array[Vt + 11] = W.w, 
                                Vt += 12;
                                $t.bindBuffer($t.ARRAY_BUFFER, Zt.buffer);
                                $t.bufferData($t.ARRAY_BUFFER, Zt.array, H);
                            }
                            S && (delete b.__inittedArrays, delete b.__colorArray, delete b.__normalArray, delete b.__tangentArray, 
                            delete b.__uvArray, delete b.__uv2Array, delete b.__faceArray, delete b.__vertexArray, 
                            delete b.__lineArray, delete b.__skinIndexArray, delete b.__skinWeightArray);
                        }
                    }
                    l.verticesNeedUpdate = !1;
                    l.morphTargetsNeedUpdate = !1;
                    l.elementsNeedUpdate = !1;
                    l.uvsNeedUpdate = !1;
                    l.normalsNeedUpdate = !1;
                    l.colorsNeedUpdate = !1;
                    l.tangentsNeedUpdate = !1;
                    l.buffersNeedUpdate = !1;
                    f.attributes && R(f);
                } else if (t instanceof THREE.Line) {
                    f = r(t, l);
                    h = f.attributes && x(f);
                    if (l.verticesNeedUpdate || l.colorsNeedUpdate || l.lineDistancesNeedUpdate || h) {
                        var gn = $t.DYNAMIC_DRAW, yn, Tn, xn, Rn, _n, bn, wn = l.vertices, Hn = l.colors, Sn = l.lineDistances, Mn = wn.length, Cn = Hn.length, An = Sn.length, Pn = l.__vertexArray, $n = l.__colorArray, kn = l.__lineDistanceArray, Ln = l.colorsNeedUpdate, Fn = l.lineDistancesNeedUpdate, Dn = l.__webglCustomAttributesList, Un, Vn, On, zn, Bn, jn;
                        if (l.verticesNeedUpdate) {
                            for (yn = 0; yn < Mn; yn++) Rn = wn[yn], _n = 3 * yn, Pn[_n] = Rn.x, Pn[_n + 1] = Rn.y, 
                            Pn[_n + 2] = Rn.z;
                            $t.bindBuffer($t.ARRAY_BUFFER, l.__webglVertexBuffer);
                            $t.bufferData($t.ARRAY_BUFFER, Pn, gn);
                        }
                        if (Ln) {
                            for (Tn = 0; Tn < Cn; Tn++) bn = Hn[Tn], _n = 3 * Tn, $n[_n] = bn.r, $n[_n + 1] = bn.g, 
                            $n[_n + 2] = bn.b;
                            $t.bindBuffer($t.ARRAY_BUFFER, l.__webglColorBuffer);
                            $t.bufferData($t.ARRAY_BUFFER, $n, gn);
                        }
                        if (Fn) {
                            for (xn = 0; xn < An; xn++) kn[xn] = Sn[xn];
                            $t.bindBuffer($t.ARRAY_BUFFER, l.__webglLineDistanceBuffer);
                            $t.bufferData($t.ARRAY_BUFFER, kn, gn);
                        }
                        if (Dn) for (Un = 0, Vn = Dn.length; Un < Vn; Un++) if (jn = Dn[Un], jn.needsUpdate && (void 0 === jn.boundTo || "vertices" === jn.boundTo)) {
                            _n = 0;
                            zn = jn.value.length;
                            if (1 === jn.size) for (On = 0; On < zn; On++) jn.array[On] = jn.value[On]; else if (2 === jn.size) for (On = 0; On < zn; On++) Bn = jn.value[On], 
                            jn.array[_n] = Bn.x, jn.array[_n + 1] = Bn.y, _n += 2; else if (3 === jn.size) if ("c" === jn.type) for (On = 0; On < zn; On++) Bn = jn.value[On], 
                            jn.array[_n] = Bn.r, jn.array[_n + 1] = Bn.g, jn.array[_n + 2] = Bn.b, _n += 3; else for (On = 0; On < zn; On++) Bn = jn.value[On], 
                            jn.array[_n] = Bn.x, jn.array[_n + 1] = Bn.y, jn.array[_n + 2] = Bn.z, _n += 3; else if (4 === jn.size) for (On = 0; On < zn; On++) Bn = jn.value[On], 
                            jn.array[_n] = Bn.x, jn.array[_n + 1] = Bn.y, jn.array[_n + 2] = Bn.z, jn.array[_n + 3] = Bn.w, 
                            _n += 4;
                            $t.bindBuffer($t.ARRAY_BUFFER, jn.buffer);
                            $t.bufferData($t.ARRAY_BUFFER, jn.array, gn);
                        }
                    }
                    l.verticesNeedUpdate = !1;
                    l.colorsNeedUpdate = !1;
                    l.lineDistancesNeedUpdate = !1;
                    f.attributes && R(f);
                } else if (t instanceof THREE.PointCloud) {
                    f = r(t, l);
                    h = f.attributes && x(f);
                    if (l.verticesNeedUpdate || l.colorsNeedUpdate || t.sortParticles || h) {
                        var Nn = $t.DYNAMIC_DRAW, In, Gn, Wn, Xn, qn, Yn, Kn = l.vertices, Zn = Kn.length, Qn = l.colors, Jn = Qn.length, er = l.__vertexArray, tr = l.__colorArray, nr = l.__sortArray, rr = l.verticesNeedUpdate, ir = l.colorsNeedUpdate, or = l.__webglCustomAttributesList, ar, sr, cr, lr, ur, hr;
                        if (t.sortParticles) {
                            St.copy(Ht);
                            St.multiply(t.matrixWorld);
                            for (In = 0; In < Zn; In++) Wn = Kn[In], Mt.copy(Wn), Mt.applyProjection(St), nr[In] = [ Mt.z, In ];
                            nr.sort(p);
                            for (In = 0; In < Zn; In++) Wn = Kn[nr[In][1]], Xn = 3 * In, er[Xn] = Wn.x, er[Xn + 1] = Wn.y, 
                            er[Xn + 2] = Wn.z;
                            for (Gn = 0; Gn < Jn; Gn++) Xn = 3 * Gn, Yn = Qn[nr[Gn][1]], tr[Xn] = Yn.r, tr[Xn + 1] = Yn.g, 
                            tr[Xn + 2] = Yn.b;
                            if (or) for (ar = 0, sr = or.length; ar < sr; ar++) if (hr = or[ar], void 0 === hr.boundTo || "vertices" === hr.boundTo) if (Xn = 0, 
                            lr = hr.value.length, 1 === hr.size) for (cr = 0; cr < lr; cr++) qn = nr[cr][1], 
                            hr.array[cr] = hr.value[qn]; else if (2 === hr.size) for (cr = 0; cr < lr; cr++) qn = nr[cr][1], 
                            ur = hr.value[qn], hr.array[Xn] = ur.x, hr.array[Xn + 1] = ur.y, Xn += 2; else if (3 === hr.size) if ("c" === hr.type) for (cr = 0; cr < lr; cr++) qn = nr[cr][1], 
                            ur = hr.value[qn], hr.array[Xn] = ur.r, hr.array[Xn + 1] = ur.g, hr.array[Xn + 2] = ur.b, 
                            Xn += 3; else for (cr = 0; cr < lr; cr++) qn = nr[cr][1], ur = hr.value[qn], hr.array[Xn] = ur.x, 
                            hr.array[Xn + 1] = ur.y, hr.array[Xn + 2] = ur.z, Xn += 3; else if (4 === hr.size) for (cr = 0; cr < lr; cr++) qn = nr[cr][1], 
                            ur = hr.value[qn], hr.array[Xn] = ur.x, hr.array[Xn + 1] = ur.y, hr.array[Xn + 2] = ur.z, 
                            hr.array[Xn + 3] = ur.w, Xn += 4;
                        } else {
                            if (rr) for (In = 0; In < Zn; In++) Wn = Kn[In], Xn = 3 * In, er[Xn] = Wn.x, er[Xn + 1] = Wn.y, 
                            er[Xn + 2] = Wn.z;
                            if (ir) for (Gn = 0; Gn < Jn; Gn++) Yn = Qn[Gn], Xn = 3 * Gn, tr[Xn] = Yn.r, tr[Xn + 1] = Yn.g, 
                            tr[Xn + 2] = Yn.b;
                            if (or) for (ar = 0, sr = or.length; ar < sr; ar++) if (hr = or[ar], hr.needsUpdate && (void 0 === hr.boundTo || "vertices" === hr.boundTo)) if (lr = hr.value.length, 
                            Xn = 0, 1 === hr.size) for (cr = 0; cr < lr; cr++) hr.array[cr] = hr.value[cr]; else if (2 === hr.size) for (cr = 0; cr < lr; cr++) ur = hr.value[cr], 
                            hr.array[Xn] = ur.x, hr.array[Xn + 1] = ur.y, Xn += 2; else if (3 === hr.size) if ("c" === hr.type) for (cr = 0; cr < lr; cr++) ur = hr.value[cr], 
                            hr.array[Xn] = ur.r, hr.array[Xn + 1] = ur.g, hr.array[Xn + 2] = ur.b, Xn += 3; else for (cr = 0; cr < lr; cr++) ur = hr.value[cr], 
                            hr.array[Xn] = ur.x, hr.array[Xn + 1] = ur.y, hr.array[Xn + 2] = ur.z, Xn += 3; else if (4 === hr.size) for (cr = 0; cr < lr; cr++) ur = hr.value[cr], 
                            hr.array[Xn] = ur.x, hr.array[Xn + 1] = ur.y, hr.array[Xn + 2] = ur.z, hr.array[Xn + 3] = ur.w, 
                            Xn += 4;
                        }
                        if (rr || t.sortParticles) $t.bindBuffer($t.ARRAY_BUFFER, l.__webglVertexBuffer), 
                        $t.bufferData($t.ARRAY_BUFFER, er, Nn);
                        if (ir || t.sortParticles) $t.bindBuffer($t.ARRAY_BUFFER, l.__webglColorBuffer), 
                        $t.bufferData($t.ARRAY_BUFFER, tr, Nn);
                        if (or) for (ar = 0, sr = or.length; ar < sr; ar++) if (hr = or[ar], hr.needsUpdate || t.sortParticles) $t.bindBuffer($t.ARRAY_BUFFER, hr.buffer), 
                        $t.bufferData($t.ARRAY_BUFFER, hr.array, Nn);
                    }
                    l.verticesNeedUpdate = !1;
                    l.colorsNeedUpdate = !1;
                    f.attributes && R(f);
                }
                for (var fr = 0, pr = c.length; fr < pr; fr++) {
                    var dr = c[fr], mr = dr, Er = mr.object, vr = mr.buffer, gr = Er.geometry, yr = Er.material;
                    yr instanceof THREE.MeshFaceMaterial ? (yr = yr.materials[gr instanceof THREE.BufferGeometry ? 0 : vr.materialIndex], 
                    yr.transparent ? (mr.material = yr, K.push(mr)) : (mr.material = yr, Y.push(mr))) : yr && (yr.transparent ? (mr.material = yr, 
                    K.push(mr)) : (mr.material = yr, Y.push(mr)));
                    dr.render = !0;
                    !0 === Z.sortObjects && (null !== t.renderDepth ? dr.z = t.renderDepth : (Mt.setFromMatrixPosition(t.matrixWorld), 
                    Mt.applyProjection(Ht), dr.z = Mt.z));
                }
            }
            fr = 0;
            for (pr = t.children.length; fr < pr; fr++) d(e, t.children[fr], s);
        }
    }
    function m(e, t, n) {
        if (0 !== e.length) for (var r = 0, i = e.length; r < i; r++) rt = J = null, tt = nt = at = ot = ft = ht = st = -1, 
        At = !0, e[r].render(t, n, xt, Rt), rt = J = null, tt = nt = at = ot = ft = ht = st = -1, 
        At = !0;
    }
    function E(e, t, n, r, i, o) {
        for (var a, s, c, l = e.length - 1; -1 !== l; l--) {
            a = e[l];
            s = a.object;
            c = a.buffer;
            S(s, t);
            if (o) a = o; else {
                a = a.material;
                if (!a) continue;
                i && Z.setBlending(a.blending, a.blendEquation, a.blendSrc, a.blendDst);
                Z.setDepthTest(a.depthTest);
                Z.setDepthWrite(a.depthWrite);
                P(a.polygonOffset, a.polygonOffsetFactor, a.polygonOffsetUnits);
            }
            Z.setMaterialFaces(a);
            c instanceof THREE.BufferGeometry ? Z.renderBufferDirect(t, n, r, a, c, s) : Z.renderBuffer(t, n, r, a, c, s);
        }
    }
    function v(e, t, n, r, i, o, a) {
        for (var s, c, l = 0, u = e.length; l < u; l++) if (s = e[l], c = s.object, c.visible) {
            if (a) s = a; else {
                s = s[t];
                if (!s) continue;
                o && Z.setBlending(s.blending, s.blendEquation, s.blendSrc, s.blendDst);
                Z.setDepthTest(s.depthTest);
                Z.setDepthWrite(s.depthWrite);
                P(s.polygonOffset, s.polygonOffsetFactor, s.polygonOffsetUnits);
            }
            Z.renderImmediateObject(n, r, i, s, c);
        }
    }
    function g(e) {
        var t = e.object.material;
        t.transparent ? (e.transparent = t, e.opaque = null) : (e.opaque = t, e.transparent = null);
    }
    function y(e, t, r) {
        var i, o = !1;
        i = t.material;
        if (void 0 === r.geometryGroups || r.groupsNeedUpdate) delete e.__webglObjects[t.id], 
        r.makeGroups(i instanceof THREE.MeshFaceMaterial, Ut ? 4294967296 : 65535), r.groupsNeedUpdate = !1;
        for (var a = 0, s = r.geometryGroupsList.length; a < s; a++) {
            i = r.geometryGroupsList[a];
            if (i.__webglVertexBuffer) o = !1; else {
                o = i;
                o.__webglVertexBuffer = $t.createBuffer();
                o.__webglNormalBuffer = $t.createBuffer();
                o.__webglTangentBuffer = $t.createBuffer();
                o.__webglColorBuffer = $t.createBuffer();
                o.__webglUVBuffer = $t.createBuffer();
                o.__webglUV2Buffer = $t.createBuffer();
                o.__webglSkinIndicesBuffer = $t.createBuffer();
                o.__webglSkinWeightsBuffer = $t.createBuffer();
                o.__webglFaceBuffer = $t.createBuffer();
                o.__webglLineBuffer = $t.createBuffer();
                var c = void 0, l = void 0;
                if (o.numMorphTargets) for (o.__webglMorphTargetsBuffers = [], c = 0, l = o.numMorphTargets; c < l; c++) o.__webglMorphTargetsBuffers.push($t.createBuffer());
                if (o.numMorphNormals) for (o.__webglMorphNormalsBuffers = [], c = 0, l = o.numMorphNormals; c < l; c++) o.__webglMorphNormalsBuffers.push($t.createBuffer());
                Z.info.memory.geometries++;
                n(i, t);
                r.verticesNeedUpdate = !0;
                r.morphTargetsNeedUpdate = !0;
                r.elementsNeedUpdate = !0;
                r.uvsNeedUpdate = !0;
                r.normalsNeedUpdate = !0;
                r.tangentsNeedUpdate = !0;
                o = r.colorsNeedUpdate = !0;
            }
            (o || void 0 === t.__webglActive) && T(e.__webglObjects, i, t);
        }
        t.__webglActive = !0;
    }
    function T(e, t, n) {
        var r = n.id;
        e[r] = e[r] || [];
        e[r].push({
            id: r,
            buffer: t,
            object: n,
            material: null,
            z: 0
        });
    }
    function x(e) {
        for (var t in e.attributes) if (e.attributes[t].needsUpdate) return !0;
        return !1;
    }
    function R(e) {
        for (var t in e.attributes) e.attributes[t].needsUpdate = !1;
    }
    function _(e, t) {
        if (e instanceof THREE.Mesh || e instanceof THREE.PointCloud || e instanceof THREE.Line) delete t.__webglObjects[e.id]; else if (e instanceof THREE.ImmediateRenderObject || e.immediateRenderCallback) for (var n = t.__webglObjectsImmediate, r = n.length - 1; 0 <= r; r--) n[r].object === e && n.splice(r, 1);
        delete e.__webglActive;
    }
    function b(e, t, n, r, i) {
        it = 0;
        r.needsUpdate && (r.program && tn(r), Z.initMaterial(r, t, n, i), r.needsUpdate = !1);
        r.morphTargets && !i.__webglMorphTargetInfluences && (i.__webglMorphTargetInfluences = new Float32Array(Z.maxMorphTargets));
        var o = !1, a = !1, s = !1, c = r.program, l = c.uniforms, u = r.__webglShader.uniforms;
        c.id !== J && ($t.useProgram(c.program), J = c.id, s = a = o = !0);
        r.id !== tt && (-1 === tt && (s = !0), tt = r.id, a = !0);
        if (o || e !== rt) $t.uniformMatrix4fv(l.projectionMatrix, !1, e.projectionMatrix.elements), 
        W && $t.uniform1f(l.logDepthBufFC, 2 / (Math.log(e.far + 1) / Math.LN2)), e !== rt && (rt = e), 
        (r instanceof THREE.ShaderMaterial || r instanceof THREE.MeshPhongMaterial || r.envMap) && null !== l.cameraPosition && (Mt.setFromMatrixPosition(e.matrixWorld), 
        $t.uniform3f(l.cameraPosition, Mt.x, Mt.y, Mt.z)), (r instanceof THREE.MeshPhongMaterial || r instanceof THREE.MeshLambertMaterial || r instanceof THREE.ShaderMaterial || r.skinning) && null !== l.viewMatrix && $t.uniformMatrix4fv(l.viewMatrix, !1, e.matrixWorldInverse.elements);
        r.skinning && (i.bindMatrix && null !== l.bindMatrix && $t.uniformMatrix4fv(l.bindMatrix, !1, i.bindMatrix.elements), 
        i.bindMatrixInverse && null !== l.bindMatrixInverse && $t.uniformMatrix4fv(l.bindMatrixInverse, !1, i.bindMatrixInverse.elements), 
        Nt && i.skeleton && i.skeleton.useVertexTexture ? (null !== l.boneTexture && (o = H(), 
        $t.uniform1i(l.boneTexture, o), Z.setTexture(i.skeleton.boneTexture, o)), null !== l.boneTextureWidth && $t.uniform1i(l.boneTextureWidth, i.skeleton.boneTextureWidth), 
        null !== l.boneTextureHeight && $t.uniform1i(l.boneTextureHeight, i.skeleton.boneTextureHeight)) : i.skeleton && i.skeleton.boneMatrices && null !== l.boneGlobalMatrices && $t.uniformMatrix4fv(l.boneGlobalMatrices, !1, i.skeleton.boneMatrices));
        if (a) {
            n && r.fog && (u.fogColor.value = n.color, n instanceof THREE.Fog ? (u.fogNear.value = n.near, 
            u.fogFar.value = n.far) : n instanceof THREE.FogExp2 && (u.fogDensity.value = n.density));
            if (r instanceof THREE.MeshPhongMaterial || r instanceof THREE.MeshLambertMaterial || r.lights) {
                if (At) {
                    var s = !0, h, f = o = 0, p = 0, d, m, E, v = Pt, g = v.directional.colors, y = v.directional.positions, T = v.point.colors, x = v.point.positions, R = v.point.distances, _ = v.spot.colors, b = v.spot.positions, S = v.spot.distances, A = v.spot.directions, P = v.spot.anglesCos, L = v.spot.exponents, F = v.hemi.skyColors, D = v.hemi.groundColors, O = v.hemi.positions, z = 0, B = 0, j = 0, $ = 0, N = 0, I = 0, G = 0, X = 0, q = h = 0;
                    n = E = q = 0;
                    for (a = t.length; n < a; n++) h = t[n], h.onlyShadow || (d = h.color, m = h.intensity, 
                    E = h.distance, h instanceof THREE.AmbientLight ? h.visible && (Z.gammaInput ? (o += d.r * d.r, 
                    f += d.g * d.g, p += d.b * d.b) : (o += d.r, f += d.g, p += d.b)) : h instanceof THREE.DirectionalLight ? (N += 1, 
                    h.visible && (Ct.setFromMatrixPosition(h.matrixWorld), Mt.setFromMatrixPosition(h.target.matrixWorld), 
                    Ct.sub(Mt), Ct.normalize(), h = 3 * z, y[h] = Ct.x, y[h + 1] = Ct.y, y[h + 2] = Ct.z, 
                    Z.gammaInput ? M(g, h, d, m * m) : C(g, h, d, m), z += 1)) : h instanceof THREE.PointLight ? (I += 1, 
                    h.visible && (q = 3 * B, Z.gammaInput ? M(T, q, d, m * m) : C(T, q, d, m), Mt.setFromMatrixPosition(h.matrixWorld), 
                    x[q] = Mt.x, x[q + 1] = Mt.y, x[q + 2] = Mt.z, R[B] = E, B += 1)) : h instanceof THREE.SpotLight ? (G += 1, 
                    h.visible && (q = 3 * j, Z.gammaInput ? M(_, q, d, m * m) : C(_, q, d, m), Mt.setFromMatrixPosition(h.matrixWorld), 
                    b[q] = Mt.x, b[q + 1] = Mt.y, b[q + 2] = Mt.z, S[j] = E, Ct.copy(Mt), Mt.setFromMatrixPosition(h.target.matrixWorld), 
                    Ct.sub(Mt), Ct.normalize(), A[q] = Ct.x, A[q + 1] = Ct.y, A[q + 2] = Ct.z, P[j] = Math.cos(h.angle), 
                    L[j] = h.exponent, j += 1)) : h instanceof THREE.HemisphereLight && (X += 1, h.visible && (Ct.setFromMatrixPosition(h.matrixWorld), 
                    Ct.normalize(), E = 3 * $, O[E] = Ct.x, O[E + 1] = Ct.y, O[E + 2] = Ct.z, d = h.color, 
                    h = h.groundColor, Z.gammaInput ? (m *= m, M(F, E, d, m), M(D, E, h, m)) : (C(F, E, d, m), 
                    C(D, E, h, m)), $ += 1)));
                    n = 3 * z;
                    for (a = Math.max(g.length, 3 * N); n < a; n++) g[n] = 0;
                    n = 3 * B;
                    for (a = Math.max(T.length, 3 * I); n < a; n++) T[n] = 0;
                    n = 3 * j;
                    for (a = Math.max(_.length, 3 * G); n < a; n++) _[n] = 0;
                    n = 3 * $;
                    for (a = Math.max(F.length, 3 * X); n < a; n++) F[n] = 0;
                    n = 3 * $;
                    for (a = Math.max(D.length, 3 * X); n < a; n++) D[n] = 0;
                    v.directional.length = z;
                    v.point.length = B;
                    v.spot.length = j;
                    v.hemi.length = $;
                    v.ambient[0] = o;
                    v.ambient[1] = f;
                    v.ambient[2] = p;
                    At = !1;
                }
                s ? (s = Pt, u.ambientLightColor.value = s.ambient, u.directionalLightColor.value = s.directional.colors, 
                u.directionalLightDirection.value = s.directional.positions, u.pointLightColor.value = s.point.colors, 
                u.pointLightPosition.value = s.point.positions, u.pointLightDistance.value = s.point.distances, 
                u.spotLightColor.value = s.spot.colors, u.spotLightPosition.value = s.spot.positions, 
                u.spotLightDistance.value = s.spot.distances, u.spotLightDirection.value = s.spot.directions, 
                u.spotLightAngleCos.value = s.spot.anglesCos, u.spotLightExponent.value = s.spot.exponents, 
                u.hemisphereLightSkyColor.value = s.hemi.skyColors, u.hemisphereLightGroundColor.value = s.hemi.groundColors, 
                u.hemisphereLightDirection.value = s.hemi.positions, w(u, !0)) : w(u, !1);
            }
            if (r instanceof THREE.MeshBasicMaterial || r instanceof THREE.MeshLambertMaterial || r instanceof THREE.MeshPhongMaterial) {
                u.opacity.value = r.opacity;
                Z.gammaInput ? u.diffuse.value.copyGammaToLinear(r.color) : u.diffuse.value = r.color;
                u.map.value = r.map;
                u.lightMap.value = r.lightMap;
                u.specularMap.value = r.specularMap;
                u.alphaMap.value = r.alphaMap;
                r.bumpMap && (u.bumpMap.value = r.bumpMap, u.bumpScale.value = r.bumpScale);
                r.normalMap && (u.normalMap.value = r.normalMap, u.normalScale.value.copy(r.normalScale));
                var Y;
                r.map ? Y = r.map : r.specularMap ? Y = r.specularMap : r.normalMap ? Y = r.normalMap : r.bumpMap ? Y = r.bumpMap : r.alphaMap && (Y = r.alphaMap);
                void 0 !== Y && (s = Y.offset, Y = Y.repeat, u.offsetRepeat.value.set(s.x, s.y, Y.x, Y.y));
                u.envMap.value = r.envMap;
                u.flipEnvMap.value = r.envMap instanceof THREE.WebGLRenderTargetCube ? 1 : -1;
                u.reflectivity.value = r.reflectivity;
                u.refractionRatio.value = r.refractionRatio;
                u.combine.value = r.combine;
                u.useRefract.value = r.envMap && r.envMap.mapping instanceof THREE.CubeRefractionMapping;
            }
            r instanceof THREE.LineBasicMaterial ? (u.diffuse.value = r.color, u.opacity.value = r.opacity) : r instanceof THREE.LineDashedMaterial ? (u.diffuse.value = r.color, 
            u.opacity.value = r.opacity, u.dashSize.value = r.dashSize, u.totalSize.value = r.dashSize + r.gapSize, 
            u.scale.value = r.scale) : r instanceof THREE.PointCloudMaterial ? (u.psColor.value = r.color, 
            u.opacity.value = r.opacity, u.size.value = r.size, u.scale.value = V.height / 2, 
            u.map.value = r.map) : r instanceof THREE.MeshPhongMaterial ? (u.shininess.value = r.shininess, 
            Z.gammaInput ? (u.ambient.value.copyGammaToLinear(r.ambient), u.emissive.value.copyGammaToLinear(r.emissive), 
            u.specular.value.copyGammaToLinear(r.specular)) : (u.ambient.value = r.ambient, 
            u.emissive.value = r.emissive, u.specular.value = r.specular), r.wrapAround && u.wrapRGB.value.copy(r.wrapRGB)) : r instanceof THREE.MeshLambertMaterial ? (Z.gammaInput ? (u.ambient.value.copyGammaToLinear(r.ambient), 
            u.emissive.value.copyGammaToLinear(r.emissive)) : (u.ambient.value = r.ambient, 
            u.emissive.value = r.emissive), r.wrapAround && u.wrapRGB.value.copy(r.wrapRGB)) : r instanceof THREE.MeshDepthMaterial ? (u.mNear.value = e.near, 
            u.mFar.value = e.far, u.opacity.value = r.opacity) : r instanceof THREE.MeshNormalMaterial && (u.opacity.value = r.opacity);
            if (i.receiveShadow && !r._shadowPass && u.shadowMatrix) for (Y = e = 0, s = t.length; Y < s; Y++) n = t[Y], 
            n.castShadow && (n instanceof THREE.SpotLight || n instanceof THREE.DirectionalLight && !n.shadowCascade) && (u.shadowMap.value[e] = n.shadowMap, 
            u.shadowMapSize.value[e] = n.shadowMapSize, u.shadowMatrix.value[e] = n.shadowMatrix, 
            u.shadowDarkness.value[e] = n.shadowDarkness, u.shadowBias.value[e] = n.shadowBias, 
            e++);
            t = r.uniformsList;
            r = 0;
            for (u = t.length; r < u; r++) if (e = t[r][0], !1 !== e.needsUpdate) switch (n = e.type, 
            s = e.value, Y = t[r][1], n) {
              case "1i":
                $t.uniform1i(Y, s);
                break;

              case "1f":
                $t.uniform1f(Y, s);
                break;

              case "2f":
                $t.uniform2f(Y, s[0], s[1]);
                break;

              case "3f":
                $t.uniform3f(Y, s[0], s[1], s[2]);
                break;

              case "4f":
                $t.uniform4f(Y, s[0], s[1], s[2], s[3]);
                break;

              case "1iv":
                $t.uniform1iv(Y, s);
                break;

              case "3iv":
                $t.uniform3iv(Y, s);
                break;

              case "1fv":
                $t.uniform1fv(Y, s);
                break;

              case "2fv":
                $t.uniform2fv(Y, s);
                break;

              case "3fv":
                $t.uniform3fv(Y, s);
                break;

              case "4fv":
                $t.uniform4fv(Y, s);
                break;

              case "Matrix3fv":
                $t.uniformMatrix3fv(Y, !1, s);
                break;

              case "Matrix4fv":
                $t.uniformMatrix4fv(Y, !1, s);
                break;

              case "i":
                $t.uniform1i(Y, s);
                break;

              case "f":
                $t.uniform1f(Y, s);
                break;

              case "v2":
                $t.uniform2f(Y, s.x, s.y);
                break;

              case "v3":
                $t.uniform3f(Y, s.x, s.y, s.z);
                break;

              case "v4":
                $t.uniform4f(Y, s.x, s.y, s.z, s.w);
                break;

              case "c":
                $t.uniform3f(Y, s.r, s.g, s.b);
                break;

              case "iv1":
                $t.uniform1iv(Y, s);
                break;

              case "iv":
                $t.uniform3iv(Y, s);
                break;

              case "fv1":
                $t.uniform1fv(Y, s);
                break;

              case "fv":
                $t.uniform3fv(Y, s);
                break;

              case "v2v":
                void 0 === e._array && (e._array = new Float32Array(2 * s.length));
                n = 0;
                for (a = s.length; n < a; n++) o = 2 * n, e._array[o] = s[n].x, e._array[o + 1] = s[n].y;
                $t.uniform2fv(Y, e._array);
                break;

              case "v3v":
                void 0 === e._array && (e._array = new Float32Array(3 * s.length));
                n = 0;
                for (a = s.length; n < a; n++) o = 3 * n, e._array[o] = s[n].x, e._array[o + 1] = s[n].y, 
                e._array[o + 2] = s[n].z;
                $t.uniform3fv(Y, e._array);
                break;

              case "v4v":
                void 0 === e._array && (e._array = new Float32Array(4 * s.length));
                n = 0;
                for (a = s.length; n < a; n++) o = 4 * n, e._array[o] = s[n].x, e._array[o + 1] = s[n].y, 
                e._array[o + 2] = s[n].z, e._array[o + 3] = s[n].w;
                $t.uniform4fv(Y, e._array);
                break;

              case "m3":
                $t.uniformMatrix3fv(Y, !1, s.elements);
                break;

              case "m3v":
                void 0 === e._array && (e._array = new Float32Array(9 * s.length));
                n = 0;
                for (a = s.length; n < a; n++) s[n].flattenToArrayOffset(e._array, 9 * n);
                $t.uniformMatrix3fv(Y, !1, e._array);
                break;

              case "m4":
                $t.uniformMatrix4fv(Y, !1, s.elements);
                break;

              case "m4v":
                void 0 === e._array && (e._array = new Float32Array(16 * s.length));
                n = 0;
                for (a = s.length; n < a; n++) s[n].flattenToArrayOffset(e._array, 16 * n);
                $t.uniformMatrix4fv(Y, !1, e._array);
                break;

              case "t":
                o = s;
                s = H();
                $t.uniform1i(Y, s);
                if (!o) continue;
                if (o instanceof THREE.CubeTexture || o.image instanceof Array && 6 === o.image.length) {
                    if (e = o, Y = s, 6 === e.image.length) if (e.needsUpdate) {
                        e.image.__webglTextureCube || (e.addEventListener("dispose", Zt), e.image.__webglTextureCube = $t.createTexture(), 
                        Z.info.memory.textures++);
                        $t.activeTexture($t.TEXTURE0 + Y);
                        $t.bindTexture($t.TEXTURE_CUBE_MAP, e.image.__webglTextureCube);
                        $t.pixelStorei($t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                        Y = e instanceof THREE.CompressedTexture;
                        s = [];
                        for (n = 0; 6 > n; n++) Z.autoScaleCubemaps && !Y ? (a = s, o = n, f = e.image[n], 
                        v = zt, f.width <= v && f.height <= v || (g = Math.max(f.width, f.height), p = Math.floor(f.width * v / g), 
                        v = Math.floor(f.height * v / g), g = document.createElement("canvas"), g.width = p, 
                        g.height = v, g.getContext("2d").drawImage(f, 0, 0, f.width, f.height, 0, 0, p, v), 
                        f = g), a[o] = f) : s[n] = e.image[n];
                        n = s[0];
                        a = THREE.Math.isPowerOfTwo(n.width) && THREE.Math.isPowerOfTwo(n.height);
                        o = U(e.format);
                        f = U(e.type);
                        k($t.TEXTURE_CUBE_MAP, e, a);
                        for (n = 0; 6 > n; n++) if (Y) for (v = s[n].mipmaps, g = 0, y = v.length; g < y; g++) p = v[g], 
                        e.format !== THREE.RGBAFormat ? $t.compressedTexImage2D($t.TEXTURE_CUBE_MAP_POSITIVE_X + n, g, o, p.width, p.height, 0, p.data) : $t.texImage2D($t.TEXTURE_CUBE_MAP_POSITIVE_X + n, g, o, p.width, p.height, 0, o, f, p.data); else $t.texImage2D($t.TEXTURE_CUBE_MAP_POSITIVE_X + n, 0, o, o, f, s[n]);
                        e.generateMipmaps && a && $t.generateMipmap($t.TEXTURE_CUBE_MAP);
                        e.needsUpdate = !1;
                        if (e.onUpdate) e.onUpdate();
                    } else $t.activeTexture($t.TEXTURE0 + Y), $t.bindTexture($t.TEXTURE_CUBE_MAP, e.image.__webglTextureCube);
                } else o instanceof THREE.WebGLRenderTargetCube ? (e = o, $t.activeTexture($t.TEXTURE0 + s), 
                $t.bindTexture($t.TEXTURE_CUBE_MAP, e.__webglTexture)) : Z.setTexture(o, s);
                break;

              case "tv":
                void 0 === e._array && (e._array = []);
                n = 0;
                for (a = e.value.length; n < a; n++) e._array[n] = H();
                $t.uniform1iv(Y, e._array);
                n = 0;
                for (a = e.value.length; n < a; n++) o = e.value[n], s = e._array[n], o && Z.setTexture(o, s);
                break;

              default:
                console.warn("THREE.WebGLRenderer: Unknown uniform type: " + n);
            }
        }
        $t.uniformMatrix4fv(l.modelViewMatrix, !1, i._modelViewMatrix.elements);
        l.normalMatrix && $t.uniformMatrix3fv(l.normalMatrix, !1, i._normalMatrix.elements);
        null !== l.modelMatrix && $t.uniformMatrix4fv(l.modelMatrix, !1, i.matrixWorld.elements);
        return c;
    }
    function w(e, t) {
        e.ambientLightColor.needsUpdate = t;
        e.directionalLightColor.needsUpdate = t;
        e.directionalLightDirection.needsUpdate = t;
        e.pointLightColor.needsUpdate = t;
        e.pointLightPosition.needsUpdate = t;
        e.pointLightDistance.needsUpdate = t;
        e.spotLightColor.needsUpdate = t;
        e.spotLightPosition.needsUpdate = t;
        e.spotLightDistance.needsUpdate = t;
        e.spotLightDirection.needsUpdate = t;
        e.spotLightAngleCos.needsUpdate = t;
        e.spotLightExponent.needsUpdate = t;
        e.hemisphereLightSkyColor.needsUpdate = t;
        e.hemisphereLightGroundColor.needsUpdate = t;
        e.hemisphereLightDirection.needsUpdate = t;
    }
    function H() {
        var e = it;
        e >= Vt && console.warn("WebGLRenderer: trying to use " + e + " texture units while this GPU supports only " + Vt);
        it += 1;
        return e;
    }
    function S(e, t) {
        e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse, e.matrixWorld);
        e._normalMatrix.getNormalMatrix(e._modelViewMatrix);
    }
    function M(e, t, n, r) {
        e[t] = n.r * n.r * r;
        e[t + 1] = n.g * n.g * r;
        e[t + 2] = n.b * n.b * r;
    }
    function C(e, t, n, r) {
        e[t] = n.r * r;
        e[t + 1] = n.g * r;
        e[t + 2] = n.b * r;
    }
    function A(e) {
        e !== Et && ($t.lineWidth(e), Et = e);
    }
    function P(e, t, n) {
        pt !== e && (e ? $t.enable($t.POLYGON_OFFSET_FILL) : $t.disable($t.POLYGON_OFFSET_FILL), 
        pt = e);
        !e || dt === t && mt === n || ($t.polygonOffset(t, n), dt = t, mt = n);
    }
    function k(e, t, n) {
        n ? ($t.texParameteri(e, $t.TEXTURE_WRAP_S, U(t.wrapS)), $t.texParameteri(e, $t.TEXTURE_WRAP_T, U(t.wrapT)), 
        $t.texParameteri(e, $t.TEXTURE_MAG_FILTER, U(t.magFilter)), $t.texParameteri(e, $t.TEXTURE_MIN_FILTER, U(t.minFilter))) : ($t.texParameteri(e, $t.TEXTURE_WRAP_S, $t.CLAMP_TO_EDGE), 
        $t.texParameteri(e, $t.TEXTURE_WRAP_T, $t.CLAMP_TO_EDGE), $t.texParameteri(e, $t.TEXTURE_MAG_FILTER, D(t.magFilter)), 
        $t.texParameteri(e, $t.TEXTURE_MIN_FILTER, D(t.minFilter)));
        Ft && t.type !== THREE.FloatType && (1 < t.anisotropy || t.__oldAnisotropy) && ($t.texParameterf(e, Ft.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(t.anisotropy, Bt)), 
        t.__oldAnisotropy = t.anisotropy);
    }
    function L(e, t) {
        $t.bindRenderbuffer($t.RENDERBUFFER, e);
        t.depthBuffer && !t.stencilBuffer ? ($t.renderbufferStorage($t.RENDERBUFFER, $t.DEPTH_COMPONENT16, t.width, t.height), 
        $t.framebufferRenderbuffer($t.FRAMEBUFFER, $t.DEPTH_ATTACHMENT, $t.RENDERBUFFER, e)) : t.depthBuffer && t.stencilBuffer ? ($t.renderbufferStorage($t.RENDERBUFFER, $t.DEPTH_STENCIL, t.width, t.height), 
        $t.framebufferRenderbuffer($t.FRAMEBUFFER, $t.DEPTH_STENCIL_ATTACHMENT, $t.RENDERBUFFER, e)) : $t.renderbufferStorage($t.RENDERBUFFER, $t.RGBA4, t.width, t.height);
    }
    function F(e) {
        e instanceof THREE.WebGLRenderTargetCube ? ($t.bindTexture($t.TEXTURE_CUBE_MAP, e.__webglTexture), 
        $t.generateMipmap($t.TEXTURE_CUBE_MAP), $t.bindTexture($t.TEXTURE_CUBE_MAP, null)) : ($t.bindTexture($t.TEXTURE_2D, e.__webglTexture), 
        $t.generateMipmap($t.TEXTURE_2D), $t.bindTexture($t.TEXTURE_2D, null));
    }
    function D(e) {
        return e === THREE.NearestFilter || e === THREE.NearestMipMapNearestFilter || e === THREE.NearestMipMapLinearFilter ? $t.NEAREST : $t.LINEAR;
    }
    function U(e) {
        if (e === THREE.RepeatWrapping) return $t.REPEAT;
        if (e === THREE.ClampToEdgeWrapping) return $t.CLAMP_TO_EDGE;
        if (e === THREE.MirroredRepeatWrapping) return $t.MIRRORED_REPEAT;
        if (e === THREE.NearestFilter) return $t.NEAREST;
        if (e === THREE.NearestMipMapNearestFilter) return $t.NEAREST_MIPMAP_NEAREST;
        if (e === THREE.NearestMipMapLinearFilter) return $t.NEAREST_MIPMAP_LINEAR;
        if (e === THREE.LinearFilter) return $t.LINEAR;
        if (e === THREE.LinearMipMapNearestFilter) return $t.LINEAR_MIPMAP_NEAREST;
        if (e === THREE.LinearMipMapLinearFilter) return $t.LINEAR_MIPMAP_LINEAR;
        if (e === THREE.UnsignedByteType) return $t.UNSIGNED_BYTE;
        if (e === THREE.UnsignedShort4444Type) return $t.UNSIGNED_SHORT_4_4_4_4;
        if (e === THREE.UnsignedShort5551Type) return $t.UNSIGNED_SHORT_5_5_5_1;
        if (e === THREE.UnsignedShort565Type) return $t.UNSIGNED_SHORT_5_6_5;
        if (e === THREE.ByteType) return $t.BYTE;
        if (e === THREE.ShortType) return $t.SHORT;
        if (e === THREE.UnsignedShortType) return $t.UNSIGNED_SHORT;
        if (e === THREE.IntType) return $t.INT;
        if (e === THREE.UnsignedIntType) return $t.UNSIGNED_INT;
        if (e === THREE.FloatType) return $t.FLOAT;
        if (e === THREE.AlphaFormat) return $t.ALPHA;
        if (e === THREE.RGBFormat) return $t.RGB;
        if (e === THREE.RGBAFormat) return $t.RGBA;
        if (e === THREE.LuminanceFormat) return $t.LUMINANCE;
        if (e === THREE.LuminanceAlphaFormat) return $t.LUMINANCE_ALPHA;
        if (e === THREE.AddEquation) return $t.FUNC_ADD;
        if (e === THREE.SubtractEquation) return $t.FUNC_SUBTRACT;
        if (e === THREE.ReverseSubtractEquation) return $t.FUNC_REVERSE_SUBTRACT;
        if (e === THREE.ZeroFactor) return $t.ZERO;
        if (e === THREE.OneFactor) return $t.ONE;
        if (e === THREE.SrcColorFactor) return $t.SRC_COLOR;
        if (e === THREE.OneMinusSrcColorFactor) return $t.ONE_MINUS_SRC_COLOR;
        if (e === THREE.SrcAlphaFactor) return $t.SRC_ALPHA;
        if (e === THREE.OneMinusSrcAlphaFactor) return $t.ONE_MINUS_SRC_ALPHA;
        if (e === THREE.DstAlphaFactor) return $t.DST_ALPHA;
        if (e === THREE.OneMinusDstAlphaFactor) return $t.ONE_MINUS_DST_ALPHA;
        if (e === THREE.DstColorFactor) return $t.DST_COLOR;
        if (e === THREE.OneMinusDstColorFactor) return $t.ONE_MINUS_DST_COLOR;
        if (e === THREE.SrcAlphaSaturateFactor) return $t.SRC_ALPHA_SATURATE;
        if (void 0 !== Dt) {
            if (e === THREE.RGB_S3TC_DXT1_Format) return Dt.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (e === THREE.RGBA_S3TC_DXT1_Format) return Dt.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (e === THREE.RGBA_S3TC_DXT3_Format) return Dt.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (e === THREE.RGBA_S3TC_DXT5_Format) return Dt.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        }
        return 0;
    }
    console.log("THREE.WebGLRenderer", THREE.REVISION);
    e = e || {};
    var V = void 0 !== e.canvas ? e.canvas : document.createElement("canvas"), O = void 0 !== e.context ? e.context : null, z = void 0 !== e.precision ? e.precision : "highp", B = void 0 !== e.alpha ? e.alpha : !1, j = void 0 !== e.depth ? e.depth : !0, $ = void 0 !== e.stencil ? e.stencil : !0, N = void 0 !== e.antialias ? e.antialias : !1, I = void 0 !== e.premultipliedAlpha ? e.premultipliedAlpha : !0, G = void 0 !== e.preserveDrawingBuffer ? e.preserveDrawingBuffer : !1, W = void 0 !== e.logarithmicDepthBuffer ? e.logarithmicDepthBuffer : !1, X = new THREE.Color(0), q = 0, Y = [], K = [];
    this.domElement = V;
    this.context = null;
    this.devicePixelRatio = void 0 !== e.devicePixelRatio ? e.devicePixelRatio : void 0 !== self.devicePixelRatio ? self.devicePixelRatio : 1;
    this.sortObjects = this.autoClearStencil = this.autoClearDepth = this.autoClearColor = this.autoClear = !0;
    this.shadowMapEnabled = this.gammaOutput = this.gammaInput = !1;
    this.shadowMapAutoUpdate = !0;
    this.shadowMapType = THREE.PCFShadowMap;
    this.shadowMapCullFace = THREE.CullFaceFront;
    this.shadowMapCascade = this.shadowMapDebug = !1;
    this.maxMorphTargets = 8;
    this.maxMorphNormals = 4;
    this.autoScaleCubemaps = !0;
    this.renderPluginsPre = [];
    this.renderPluginsPost = [];
    this.info = {
        memory: {
            programs: 0,
            geometries: 0,
            textures: 0
        },
        render: {
            calls: 0,
            vertices: 0,
            faces: 0,
            points: 0
        }
    };
    var Z = this, Q = [], J = null, et = null, tt = -1, nt = null, rt = null, it = 0, ot = -1, at = -1, st = -1, ct = -1, lt = -1, ut = -1, ht = -1, ft = -1, pt = null, dt = null, mt = null, Et = null, vt = 0, gt = 0, yt = V.width, Tt = V.height, xt = 0, Rt = 0, _t = new Uint8Array(16), bt = new Uint8Array(16), wt = new THREE.Frustum(), Ht = new THREE.Matrix4(), St = new THREE.Matrix4(), Mt = new THREE.Vector3(), Ct = new THREE.Vector3(), At = !0, Pt = {
        ambient: [ 0, 0, 0 ],
        directional: {
            length: 0,
            colors: [],
            positions: []
        },
        point: {
            length: 0,
            colors: [],
            positions: [],
            distances: []
        },
        spot: {
            length: 0,
            colors: [],
            positions: [],
            distances: [],
            directions: [],
            anglesCos: [],
            exponents: []
        },
        hemi: {
            length: 0,
            skyColors: [],
            groundColors: [],
            positions: []
        }
    }, $t, kt, Lt, Ft, Dt, Ut;
    (function() {
        try {
            var e = {
                alpha: B,
                depth: j,
                stencil: $,
                antialias: N,
                premultipliedAlpha: I,
                preserveDrawingBuffer: G
            };
            $t = O || V.getContext("webgl", e) || V.getContext("experimental-webgl", e);
            if (null === $t) throw "Error creating WebGL context.";
        } catch (t) {
            console.error(t);
        }
        kt = $t.getExtension("OES_texture_float");
        $t.getExtension("OES_texture_float_linear");
        Lt = $t.getExtension("OES_standard_derivatives");
        Ft = $t.getExtension("EXT_texture_filter_anisotropic") || $t.getExtension("MOZ_EXT_texture_filter_anisotropic") || $t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
        Dt = $t.getExtension("WEBGL_compressed_texture_s3tc") || $t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || $t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
        Ut = $t.getExtension("OES_element_index_uint");
        null === kt && console.log("THREE.WebGLRenderer: Float textures not supported.");
        null === Lt && console.log("THREE.WebGLRenderer: Standard derivatives not supported.");
        null === Ft && console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");
        null === Dt && console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");
        null === Ut && console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported.");
        void 0 === $t.getShaderPrecisionFormat && ($t.getShaderPrecisionFormat = function() {
            return {
                rangeMin: 1,
                rangeMax: 1,
                precision: 1
            };
        });
        W && $t.getExtension("EXT_frag_depth");
    })();
    $t.clearColor(0, 0, 0, 1);
    $t.clearDepth(1);
    $t.clearStencil(0);
    $t.enable($t.DEPTH_TEST);
    $t.depthFunc($t.LEQUAL);
    $t.frontFace($t.CCW);
    $t.cullFace($t.BACK);
    $t.enable($t.CULL_FACE);
    $t.enable($t.BLEND);
    $t.blendEquation($t.FUNC_ADD);
    $t.blendFunc($t.SRC_ALPHA, $t.ONE_MINUS_SRC_ALPHA);
    $t.viewport(vt, gt, yt, Tt);
    $t.clearColor(X.r, X.g, X.b, q);
    this.context = $t;
    var Vt = $t.getParameter($t.MAX_TEXTURE_IMAGE_UNITS), Ot = $t.getParameter($t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);
    $t.getParameter($t.MAX_TEXTURE_SIZE);
    var zt = $t.getParameter($t.MAX_CUBE_MAP_TEXTURE_SIZE), Bt = Ft ? $t.getParameter(Ft.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0, jt = 0 < Ot, Nt = jt && kt;
    Dt && $t.getParameter($t.COMPRESSED_TEXTURE_FORMATS);
    var It = $t.getShaderPrecisionFormat($t.VERTEX_SHADER, $t.HIGH_FLOAT), Gt = $t.getShaderPrecisionFormat($t.VERTEX_SHADER, $t.MEDIUM_FLOAT);
    $t.getShaderPrecisionFormat($t.VERTEX_SHADER, $t.LOW_FLOAT);
    var Wt = $t.getShaderPrecisionFormat($t.FRAGMENT_SHADER, $t.HIGH_FLOAT), Xt = $t.getShaderPrecisionFormat($t.FRAGMENT_SHADER, $t.MEDIUM_FLOAT);
    $t.getShaderPrecisionFormat($t.FRAGMENT_SHADER, $t.LOW_FLOAT);
    var qt = 0 < It.precision && 0 < Wt.precision, Yt = 0 < Gt.precision && 0 < Xt.precision;
    "highp" !== z || qt || (Yt ? (z = "mediump", console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")) : (z = "lowp", 
    console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp.")));
    "mediump" !== z || Yt || (z = "lowp", console.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));
    this.getContext = function() {
        return $t;
    };
    this.supportsVertexTextures = function() {
        return jt;
    };
    this.supportsFloatTextures = function() {
        return kt;
    };
    this.supportsStandardDerivatives = function() {
        return Lt;
    };
    this.supportsCompressedTextureS3TC = function() {
        return Dt;
    };
    this.getMaxAnisotropy = function() {
        return Bt;
    };
    this.getPrecision = function() {
        return z;
    };
    this.setSize = function(e, t, n) {
        V.width = e * this.devicePixelRatio;
        V.height = t * this.devicePixelRatio;
        !1 !== n && (V.style.width = e + "px", V.style.height = t + "px");
        this.setViewport(0, 0, e, t);
    };
    this.setViewport = function(e, t, n, r) {
        vt = e * this.devicePixelRatio;
        gt = t * this.devicePixelRatio;
        yt = n * this.devicePixelRatio;
        Tt = r * this.devicePixelRatio;
        $t.viewport(vt, gt, yt, Tt);
    };
    this.setScissor = function(e, t, n, r) {
        $t.scissor(e * this.devicePixelRatio, t * this.devicePixelRatio, n * this.devicePixelRatio, r * this.devicePixelRatio);
    };
    this.enableScissorTest = function(e) {
        e ? $t.enable($t.SCISSOR_TEST) : $t.disable($t.SCISSOR_TEST);
    };
    this.setClearColor = function(e, t) {
        X.set(e);
        q = void 0 !== t ? t : 1;
        $t.clearColor(X.r, X.g, X.b, q);
    };
    this.setClearColorHex = function(e, t) {
        console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");
        this.setClearColor(e, t);
    };
    this.getClearColor = function() {
        return X;
    };
    this.getClearAlpha = function() {
        return q;
    };
    this.clear = function(e, t, n) {
        var r = 0;
        if (void 0 === e || e) r |= $t.COLOR_BUFFER_BIT;
        if (void 0 === t || t) r |= $t.DEPTH_BUFFER_BIT;
        if (void 0 === n || n) r |= $t.STENCIL_BUFFER_BIT;
        $t.clear(r);
    };
    this.clearColor = function() {
        $t.clear($t.COLOR_BUFFER_BIT);
    };
    this.clearDepth = function() {
        $t.clear($t.DEPTH_BUFFER_BIT);
    };
    this.clearStencil = function() {
        $t.clear($t.STENCIL_BUFFER_BIT);
    };
    this.clearTarget = function(e, t, n, r) {
        this.setRenderTarget(e);
        this.clear(t, n, r);
    };
    this.addPostPlugin = function(e) {
        e.init(this);
        this.renderPluginsPost.push(e);
    };
    this.addPrePlugin = function(e) {
        e.init(this);
        this.renderPluginsPre.push(e);
    };
    this.updateShadowMap = function(e, t) {
        J = null;
        tt = nt = ft = ht = st = -1;
        At = !0;
        at = ot = -1;
        nn(e);
        this.shadowMapPlugin.update(e, t);
    };
    var Kt = function(e) {
        e = e.target;
        e.removeEventListener("dispose", Kt);
        e.__webglInit = void 0;
        if (e instanceof THREE.BufferGeometry) {
            e = e.attributes;
            for (var t in e) void 0 !== e[t].buffer && $t.deleteBuffer(e[t].buffer);
            Z.info.memory.geometries--;
        } else if (void 0 !== e.geometryGroups) {
            t = 0;
            for (var n = e.geometryGroupsList.length; t < n; t++) {
                var r = e.geometryGroupsList[t];
                if (void 0 !== r.numMorphTargets) for (var i = 0, o = r.numMorphTargets; i < o; i++) $t.deleteBuffer(r.__webglMorphTargetsBuffers[i]);
                if (void 0 !== r.numMorphNormals) for (i = 0, o = r.numMorphNormals; i < o; i++) $t.deleteBuffer(r.__webglMorphNormalsBuffers[i]);
                en(r);
            }
        } else en(e);
    }, Zt = function(e) {
        e = e.target;
        e.removeEventListener("dispose", Zt);
        e.image && e.image.__webglTextureCube ? $t.deleteTexture(e.image.__webglTextureCube) : e.__webglInit && (e.__webglInit = !1, 
        $t.deleteTexture(e.__webglTexture));
        Z.info.memory.textures--;
    }, Qt = function(e) {
        e = e.target;
        e.removeEventListener("dispose", Qt);
        if (e && e.__webglTexture) if ($t.deleteTexture(e.__webglTexture), e instanceof THREE.WebGLRenderTargetCube) for (var t = 0; 6 > t; t++) $t.deleteFramebuffer(e.__webglFramebuffer[t]), 
        $t.deleteRenderbuffer(e.__webglRenderbuffer[t]); else $t.deleteFramebuffer(e.__webglFramebuffer), 
        $t.deleteRenderbuffer(e.__webglRenderbuffer);
        Z.info.memory.textures--;
    }, Jt = function(e) {
        e = e.target;
        e.removeEventListener("dispose", Jt);
        tn(e);
    }, en = function(e) {
        void 0 !== e.__webglVertexBuffer && $t.deleteBuffer(e.__webglVertexBuffer);
        void 0 !== e.__webglNormalBuffer && $t.deleteBuffer(e.__webglNormalBuffer);
        void 0 !== e.__webglTangentBuffer && $t.deleteBuffer(e.__webglTangentBuffer);
        void 0 !== e.__webglColorBuffer && $t.deleteBuffer(e.__webglColorBuffer);
        void 0 !== e.__webglUVBuffer && $t.deleteBuffer(e.__webglUVBuffer);
        void 0 !== e.__webglUV2Buffer && $t.deleteBuffer(e.__webglUV2Buffer);
        void 0 !== e.__webglSkinIndicesBuffer && $t.deleteBuffer(e.__webglSkinIndicesBuffer);
        void 0 !== e.__webglSkinWeightsBuffer && $t.deleteBuffer(e.__webglSkinWeightsBuffer);
        void 0 !== e.__webglFaceBuffer && $t.deleteBuffer(e.__webglFaceBuffer);
        void 0 !== e.__webglLineBuffer && $t.deleteBuffer(e.__webglLineBuffer);
        void 0 !== e.__webglLineDistanceBuffer && $t.deleteBuffer(e.__webglLineDistanceBuffer);
        if (void 0 !== e.__webglCustomAttributesList) for (var t in e.__webglCustomAttributesList) $t.deleteBuffer(e.__webglCustomAttributesList[t].buffer);
        Z.info.memory.geometries--;
    }, tn = function(e) {
        var t = e.program.program;
        if (void 0 !== t) {
            e.program = void 0;
            var n, r, i = !1;
            e = 0;
            for (n = Q.length; e < n; e++) if (r = Q[e], r.program === t) {
                r.usedTimes--;
                0 === r.usedTimes && (i = !0);
                break;
            }
            if (!0 === i) {
                i = [];
                e = 0;
                for (n = Q.length; e < n; e++) r = Q[e], r.program !== t && i.push(r);
                Q = i;
                $t.deleteProgram(t);
                Z.info.memory.programs--;
            }
        }
    };
    this.renderBufferImmediate = function(e, t, n) {
        c();
        e.hasPositions && !e.__webglVertexBuffer && (e.__webglVertexBuffer = $t.createBuffer());
        e.hasNormals && !e.__webglNormalBuffer && (e.__webglNormalBuffer = $t.createBuffer());
        e.hasUvs && !e.__webglUvBuffer && (e.__webglUvBuffer = $t.createBuffer());
        e.hasColors && !e.__webglColorBuffer && (e.__webglColorBuffer = $t.createBuffer());
        e.hasPositions && ($t.bindBuffer($t.ARRAY_BUFFER, e.__webglVertexBuffer), $t.bufferData($t.ARRAY_BUFFER, e.positionArray, $t.DYNAMIC_DRAW), 
        l(t.attributes.position), $t.vertexAttribPointer(t.attributes.position, 3, $t.FLOAT, !1, 0, 0));
        if (e.hasNormals) {
            $t.bindBuffer($t.ARRAY_BUFFER, e.__webglNormalBuffer);
            if (n.shading === THREE.FlatShading) {
                var r, i, o, a, s, h, f, p, d, m, E, v = 3 * e.count;
                for (E = 0; E < v; E += 9) m = e.normalArray, r = m[E], i = m[E + 1], o = m[E + 2], 
                a = m[E + 3], h = m[E + 4], p = m[E + 5], s = m[E + 6], f = m[E + 7], d = m[E + 8], 
                r = (r + a + s) / 3, i = (i + h + f) / 3, o = (o + p + d) / 3, m[E] = r, m[E + 1] = i, 
                m[E + 2] = o, m[E + 3] = r, m[E + 4] = i, m[E + 5] = o, m[E + 6] = r, m[E + 7] = i, 
                m[E + 8] = o;
            }
            $t.bufferData($t.ARRAY_BUFFER, e.normalArray, $t.DYNAMIC_DRAW);
            l(t.attributes.normal);
            $t.vertexAttribPointer(t.attributes.normal, 3, $t.FLOAT, !1, 0, 0);
        }
        e.hasUvs && n.map && ($t.bindBuffer($t.ARRAY_BUFFER, e.__webglUvBuffer), $t.bufferData($t.ARRAY_BUFFER, e.uvArray, $t.DYNAMIC_DRAW), 
        l(t.attributes.uv), $t.vertexAttribPointer(t.attributes.uv, 2, $t.FLOAT, !1, 0, 0));
        e.hasColors && n.vertexColors !== THREE.NoColors && ($t.bindBuffer($t.ARRAY_BUFFER, e.__webglColorBuffer), 
        $t.bufferData($t.ARRAY_BUFFER, e.colorArray, $t.DYNAMIC_DRAW), l(t.attributes.color), 
        $t.vertexAttribPointer(t.attributes.color, 3, $t.FLOAT, !1, 0, 0));
        u();
        $t.drawArrays($t.TRIANGLES, 0, e.count);
        e.count = 0;
    };
    this.renderBufferDirect = function(e, t, n, r, i, o) {
        if (!1 !== r.visible) {
            var a = b(e, t, n, r, o);
            e = a.attributes;
            t = i.attributes;
            n = !1;
            a = 16777215 * i.id + 2 * a.id + (r.wireframe ? 1 : 0);
            a !== nt && (nt = a, n = !0);
            n && c();
            if (o instanceof THREE.Mesh) if (a = t.index) {
                var l, u;
                a.array instanceof Uint32Array ? (l = $t.UNSIGNED_INT, u = 4) : (l = $t.UNSIGNED_SHORT, 
                u = 2);
                i = i.offsets;
                if (0 === i.length) n && (s(r, e, t, 0), $t.bindBuffer($t.ELEMENT_ARRAY_BUFFER, a.buffer)), 
                $t.drawElements($t.TRIANGLES, a.array.length, l, 0), Z.info.render.calls++, Z.info.render.vertices += a.array.length, 
                Z.info.render.faces += a.array.length / 3; else {
                    n = !0;
                    for (var h = 0, f = i.length; h < f; h++) {
                        var p = i[h].index;
                        n && (s(r, e, t, p), $t.bindBuffer($t.ELEMENT_ARRAY_BUFFER, a.buffer));
                        $t.drawElements($t.TRIANGLES, i[h].count, l, i[h].start * u);
                        Z.info.render.calls++;
                        Z.info.render.vertices += i[h].count;
                        Z.info.render.faces += i[h].count / 3;
                    }
                }
            } else n && s(r, e, t, 0), r = i.attributes.position, $t.drawArrays($t.TRIANGLES, 0, r.array.length / 3), 
            Z.info.render.calls++, Z.info.render.vertices += r.array.length / 3, Z.info.render.faces += r.array.length / 9; else if (o instanceof THREE.PointCloud) n && s(r, e, t, 0), 
            r = t.position, $t.drawArrays($t.POINTS, 0, r.array.length / 3), Z.info.render.calls++, 
            Z.info.render.points += r.array.length / 3; else if (o instanceof THREE.Line) if (o = o.type === THREE.LineStrip ? $t.LINE_STRIP : $t.LINES, 
            A(r.linewidth), a = t.index) if (a.array instanceof Uint32Array ? (l = $t.UNSIGNED_INT, 
            u = 4) : (l = $t.UNSIGNED_SHORT, u = 2), i = i.offsets, 0 === i.length) n && (s(r, e, t, 0), 
            $t.bindBuffer($t.ELEMENT_ARRAY_BUFFER, a.buffer)), $t.drawElements(o, a.array.length, l, 0), 
            Z.info.render.calls++, Z.info.render.vertices += a.array.length; else for (1 < i.length && (n = !0), 
            h = 0, f = i.length; h < f; h++) p = i[h].index, n && (s(r, e, t, p), $t.bindBuffer($t.ELEMENT_ARRAY_BUFFER, a.buffer)), 
            $t.drawElements(o, i[h].count, l, i[h].start * u), Z.info.render.calls++, Z.info.render.vertices += i[h].count; else n && s(r, e, t, 0), 
            r = t.position, $t.drawArrays(o, 0, r.array.length / 3), Z.info.render.calls++, 
            Z.info.render.points += r.array.length / 3;
        }
    };
    this.renderBuffer = function(e, t, n, r, i, o) {
        if (!1 !== r.visible) {
            var a, s;
            n = b(e, t, n, r, o);
            t = n.attributes;
            e = !1;
            n = 16777215 * i.id + 2 * n.id + (r.wireframe ? 1 : 0);
            n !== nt && (nt = n, e = !0);
            e && c();
            if (!r.morphTargets && 0 <= t.position) e && ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglVertexBuffer), 
            l(t.position), $t.vertexAttribPointer(t.position, 3, $t.FLOAT, !1, 0, 0)); else if (o.morphTargetBase) {
                n = r.program.attributes;
                -1 !== o.morphTargetBase && 0 <= n.position ? ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglMorphTargetsBuffers[o.morphTargetBase]), 
                l(n.position), $t.vertexAttribPointer(n.position, 3, $t.FLOAT, !1, 0, 0)) : 0 <= n.position && ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglVertexBuffer), 
                l(n.position), $t.vertexAttribPointer(n.position, 3, $t.FLOAT, !1, 0, 0));
                if (o.morphTargetForcedOrder.length) {
                    var h = 0;
                    s = o.morphTargetForcedOrder;
                    for (a = o.morphTargetInfluences; h < r.numSupportedMorphTargets && h < s.length; ) 0 <= n["morphTarget" + h] && ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglMorphTargetsBuffers[s[h]]), 
                    l(n["morphTarget" + h]), $t.vertexAttribPointer(n["morphTarget" + h], 3, $t.FLOAT, !1, 0, 0)), 
                    0 <= n["morphNormal" + h] && r.morphNormals && ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglMorphNormalsBuffers[s[h]]), 
                    l(n["morphNormal" + h]), $t.vertexAttribPointer(n["morphNormal" + h], 3, $t.FLOAT, !1, 0, 0)), 
                    o.__webglMorphTargetInfluences[h] = a[s[h]], h++;
                } else {
                    s = [];
                    a = o.morphTargetInfluences;
                    var f, d = a.length;
                    for (f = 0; f < d; f++) h = a[f], 0 < h && s.push([ h, f ]);
                    s.length > r.numSupportedMorphTargets ? (s.sort(p), s.length = r.numSupportedMorphTargets) : s.length > r.numSupportedMorphNormals ? s.sort(p) : 0 === s.length && s.push([ 0, 0 ]);
                    for (h = 0; h < r.numSupportedMorphTargets; ) s[h] ? (f = s[h][1], 0 <= n["morphTarget" + h] && ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglMorphTargetsBuffers[f]), 
                    l(n["morphTarget" + h]), $t.vertexAttribPointer(n["morphTarget" + h], 3, $t.FLOAT, !1, 0, 0)), 
                    0 <= n["morphNormal" + h] && r.morphNormals && ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglMorphNormalsBuffers[f]), 
                    l(n["morphNormal" + h]), $t.vertexAttribPointer(n["morphNormal" + h], 3, $t.FLOAT, !1, 0, 0)), 
                    o.__webglMorphTargetInfluences[h] = a[f]) : o.__webglMorphTargetInfluences[h] = 0, 
                    h++;
                }
                null !== r.program.uniforms.morphTargetInfluences && $t.uniform1fv(r.program.uniforms.morphTargetInfluences, o.__webglMorphTargetInfluences);
            }
            if (e) {
                if (i.__webglCustomAttributesList) for (a = 0, s = i.__webglCustomAttributesList.length; a < s; a++) n = i.__webglCustomAttributesList[a], 
                0 <= t[n.buffer.belongsToAttribute] && ($t.bindBuffer($t.ARRAY_BUFFER, n.buffer), 
                l(t[n.buffer.belongsToAttribute]), $t.vertexAttribPointer(t[n.buffer.belongsToAttribute], n.size, $t.FLOAT, !1, 0, 0));
                0 <= t.color && (0 < o.geometry.colors.length || 0 < o.geometry.faces.length ? ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglColorBuffer), 
                l(t.color), $t.vertexAttribPointer(t.color, 3, $t.FLOAT, !1, 0, 0)) : r.defaultAttributeValues && $t.vertexAttrib3fv(t.color, r.defaultAttributeValues.color));
                0 <= t.normal && ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglNormalBuffer), l(t.normal), 
                $t.vertexAttribPointer(t.normal, 3, $t.FLOAT, !1, 0, 0));
                0 <= t.tangent && ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglTangentBuffer), l(t.tangent), 
                $t.vertexAttribPointer(t.tangent, 4, $t.FLOAT, !1, 0, 0));
                0 <= t.uv && (o.geometry.faceVertexUvs[0] ? ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglUVBuffer), 
                l(t.uv), $t.vertexAttribPointer(t.uv, 2, $t.FLOAT, !1, 0, 0)) : r.defaultAttributeValues && $t.vertexAttrib2fv(t.uv, r.defaultAttributeValues.uv));
                0 <= t.uv2 && (o.geometry.faceVertexUvs[1] ? ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglUV2Buffer), 
                l(t.uv2), $t.vertexAttribPointer(t.uv2, 2, $t.FLOAT, !1, 0, 0)) : r.defaultAttributeValues && $t.vertexAttrib2fv(t.uv2, r.defaultAttributeValues.uv2));
                r.skinning && 0 <= t.skinIndex && 0 <= t.skinWeight && ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglSkinIndicesBuffer), 
                l(t.skinIndex), $t.vertexAttribPointer(t.skinIndex, 4, $t.FLOAT, !1, 0, 0), $t.bindBuffer($t.ARRAY_BUFFER, i.__webglSkinWeightsBuffer), 
                l(t.skinWeight), $t.vertexAttribPointer(t.skinWeight, 4, $t.FLOAT, !1, 0, 0));
                0 <= t.lineDistance && ($t.bindBuffer($t.ARRAY_BUFFER, i.__webglLineDistanceBuffer), 
                l(t.lineDistance), $t.vertexAttribPointer(t.lineDistance, 1, $t.FLOAT, !1, 0, 0));
            }
            u();
            o instanceof THREE.Mesh ? (o = i.__typeArray === Uint32Array ? $t.UNSIGNED_INT : $t.UNSIGNED_SHORT, 
            r.wireframe ? (A(r.wireframeLinewidth), e && $t.bindBuffer($t.ELEMENT_ARRAY_BUFFER, i.__webglLineBuffer), 
            $t.drawElements($t.LINES, i.__webglLineCount, o, 0)) : (e && $t.bindBuffer($t.ELEMENT_ARRAY_BUFFER, i.__webglFaceBuffer), 
            $t.drawElements($t.TRIANGLES, i.__webglFaceCount, o, 0)), Z.info.render.calls++, 
            Z.info.render.vertices += i.__webglFaceCount, Z.info.render.faces += i.__webglFaceCount / 3) : o instanceof THREE.Line ? (o = o.type === THREE.LineStrip ? $t.LINE_STRIP : $t.LINES, 
            A(r.linewidth), $t.drawArrays(o, 0, i.__webglLineCount), Z.info.render.calls++) : o instanceof THREE.PointCloud && ($t.drawArrays($t.POINTS, 0, i.__webglParticleCount), 
            Z.info.render.calls++, Z.info.render.points += i.__webglParticleCount);
        }
    };
    this.render = function(e, t, n, r) {
        function i(e) {
            e instanceof THREE.SkinnedMesh && e.skeleton.update();
            for (var t = 0, n = e.children.length; t < n; t++) i(e.children[t]);
        }
        if (!1 === t instanceof THREE.Camera) console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."); else {
            var o, a, s, c, l = e.__lights, u = e.fog;
            tt = -1;
            rt = null;
            At = !0;
            !0 === e.autoUpdate && e.updateMatrixWorld();
            void 0 === t.parent && t.updateMatrixWorld();
            i(e);
            t.matrixWorldInverse.getInverse(t.matrixWorld);
            Ht.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse);
            wt.setFromMatrix(Ht);
            nn(e);
            Y.length = 0;
            K.length = 0;
            d(e, e, t);
            !0 === Z.sortObjects && (Y.sort(h), K.sort(f));
            m(this.renderPluginsPre, e, t);
            Z.info.render.calls = 0;
            Z.info.render.vertices = 0;
            Z.info.render.faces = 0;
            Z.info.render.points = 0;
            this.setRenderTarget(n);
            (this.autoClear || r) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);
            c = e.__webglObjectsImmediate;
            r = 0;
            for (o = c.length; r < o; r++) a = c[r], s = a.object, s.visible && (S(s, t), g(a));
            e.overrideMaterial ? (r = e.overrideMaterial, this.setBlending(r.blending, r.blendEquation, r.blendSrc, r.blendDst), 
            this.setDepthTest(r.depthTest), this.setDepthWrite(r.depthWrite), P(r.polygonOffset, r.polygonOffsetFactor, r.polygonOffsetUnits), 
            E(Y, t, l, u, !0, r), E(K, t, l, u, !0, r), v(e.__webglObjectsImmediate, "", t, l, u, !1, r)) : (r = null, 
            this.setBlending(THREE.NoBlending), E(Y, t, l, u, !1, r), v(e.__webglObjectsImmediate, "opaque", t, l, u, !1, r), 
            E(K, t, l, u, !0, r), v(e.__webglObjectsImmediate, "transparent", t, l, u, !0, r));
            m(this.renderPluginsPost, e, t);
            n && n.generateMipmaps && n.minFilter !== THREE.NearestFilter && n.minFilter !== THREE.LinearFilter && F(n);
            this.setDepthTest(!0);
            this.setDepthWrite(!0);
        }
    };
    this.renderImmediateObject = function(e, t, n, r, i) {
        var o = b(e, t, n, r, i);
        nt = -1;
        Z.setMaterialFaces(r);
        i.immediateRenderCallback ? i.immediateRenderCallback(o, $t, wt) : i.render(function(e) {
            Z.renderBufferImmediate(e, o, r);
        });
    };
    var nn = function(e) {
        e.__webglObjects || (e.__webglObjects = {}, e.__webglObjectsImmediate = []);
        for (;e.__objectsAdded.length; ) {
            var n = e.__objectsAdded[0], r = e, i = void 0, o = void 0;
            void 0 === n.__webglInit && (n.__webglInit = !0, n._modelViewMatrix = new THREE.Matrix4(), 
            n._normalMatrix = new THREE.Matrix3());
            i = n.geometry;
            if (void 0 !== i && void 0 === i.__webglInit) if (i.__webglInit = !0, i.addEventListener("dispose", Kt), 
            i instanceof THREE.BufferGeometry) a(i); else if (n instanceof THREE.Mesh) void 0 !== n.__webglActive && _(n, r), 
            y(r, n, i); else if (n instanceof THREE.Line) {
                if (!i.__webglVertexBuffer) {
                    o = i;
                    o.__webglVertexBuffer = $t.createBuffer();
                    o.__webglColorBuffer = $t.createBuffer();
                    o.__webglLineDistanceBuffer = $t.createBuffer();
                    Z.info.memory.geometries++;
                    var o = i, s = n, c = o.vertices.length;
                    o.__vertexArray = new Float32Array(3 * c);
                    o.__colorArray = new Float32Array(3 * c);
                    o.__lineDistanceArray = new Float32Array(1 * c);
                    o.__webglLineCount = c;
                    t(o, s);
                    i.verticesNeedUpdate = !0;
                    i.colorsNeedUpdate = !0;
                    i.lineDistancesNeedUpdate = !0;
                }
            } else n instanceof THREE.PointCloud && !i.__webglVertexBuffer && (o = i, o.__webglVertexBuffer = $t.createBuffer(), 
            o.__webglColorBuffer = $t.createBuffer(), Z.info.memory.geometries++, o = i, s = n, 
            c = o.vertices.length, o.__vertexArray = new Float32Array(3 * c), o.__colorArray = new Float32Array(3 * c), 
            o.__sortArray = [], o.__webglParticleCount = c, t(o, s), i.verticesNeedUpdate = !0, 
            i.colorsNeedUpdate = !0);
            if (void 0 === n.__webglActive) {
                if (n instanceof THREE.Mesh) if (i = n.geometry, i instanceof THREE.BufferGeometry) T(r.__webglObjects, i, n); else {
                    if (i instanceof THREE.Geometry) for (s = 0, c = i.geometryGroupsList.length; s < c; s++) o = i.geometryGroupsList[s], 
                    T(r.__webglObjects, o, n);
                } else n instanceof THREE.Line || n instanceof THREE.PointCloud ? (i = n.geometry, 
                T(r.__webglObjects, i, n)) : (n instanceof THREE.ImmediateRenderObject || n.immediateRenderCallback) && r.__webglObjectsImmediate.push({
                    id: null,
                    object: n,
                    opaque: null,
                    transparent: null,
                    z: 0
                });
                n.__webglActive = !0;
            }
            e.__objectsAdded.splice(0, 1);
        }
        for (;e.__objectsRemoved.length; ) _(e.__objectsRemoved[0], e), e.__objectsRemoved.splice(0, 1);
    };
    this.initMaterial = function(e, t, n, r) {
        var i, o, a, s;
        e.addEventListener("dispose", Jt);
        var c, l, u, h;
        e instanceof THREE.MeshDepthMaterial ? h = "depth" : e instanceof THREE.MeshNormalMaterial ? h = "normal" : e instanceof THREE.MeshBasicMaterial ? h = "basic" : e instanceof THREE.MeshLambertMaterial ? h = "lambert" : e instanceof THREE.MeshPhongMaterial ? h = "phong" : e instanceof THREE.LineBasicMaterial ? h = "basic" : e instanceof THREE.LineDashedMaterial ? h = "dashed" : e instanceof THREE.PointCloudMaterial && (h = "particle_basic");
        h ? (i = THREE.ShaderLib[h], e.__webglShader = {
            uniforms: THREE.UniformsUtils.clone(i.uniforms),
            vertexShader: i.vertexShader,
            fragmentShader: i.fragmentShader
        }) : e.__webglShader = {
            uniforms: e.uniforms,
            vertexShader: e.vertexShader,
            fragmentShader: e.fragmentShader
        };
        u = s = a = o = i = 0;
        for (var f = t.length; u < f; u++) {
            var p = t[u];
            p.onlyShadow || !1 === p.visible || (p instanceof THREE.DirectionalLight && i++, 
            p instanceof THREE.PointLight && o++, p instanceof THREE.SpotLight && a++, p instanceof THREE.HemisphereLight && s++);
        }
        f = u = 0;
        for (p = t.length; f < p; f++) {
            var d = t[f];
            d.castShadow && (d instanceof THREE.SpotLight && u++, d instanceof THREE.DirectionalLight && !d.shadowCascade && u++);
        }
        t = u;
        Nt && r && r.skeleton && r.skeleton.useVertexTexture ? u = 1024 : (u = $t.getParameter($t.MAX_VERTEX_UNIFORM_VECTORS), 
        u = Math.floor((u - 20) / 4), void 0 !== r && r instanceof THREE.SkinnedMesh && (u = Math.min(r.skeleton.bones.length, u), 
        u < r.skeleton.bones.length && console.warn("WebGLRenderer: too many bones - " + r.skeleton.bones.length + ", this GPU supports just " + u + " (try OpenGL instead of ANGLE)")));
        n = {
            precision: z,
            supportsVertexTextures: jt,
            map: !!e.map,
            envMap: !!e.envMap,
            lightMap: !!e.lightMap,
            bumpMap: !!e.bumpMap,
            normalMap: !!e.normalMap,
            specularMap: !!e.specularMap,
            alphaMap: !!e.alphaMap,
            vertexColors: e.vertexColors,
            fog: n,
            useFog: e.fog,
            fogExp: n instanceof THREE.FogExp2,
            sizeAttenuation: e.sizeAttenuation,
            logarithmicDepthBuffer: W,
            skinning: e.skinning,
            maxBones: u,
            useVertexTexture: Nt && r && r.skeleton && r.skeleton.useVertexTexture,
            morphTargets: e.morphTargets,
            morphNormals: e.morphNormals,
            maxMorphTargets: this.maxMorphTargets,
            maxMorphNormals: this.maxMorphNormals,
            maxDirLights: i,
            maxPointLights: o,
            maxSpotLights: a,
            maxHemiLights: s,
            maxShadows: t,
            shadowMapEnabled: this.shadowMapEnabled && r.receiveShadow && 0 < t,
            shadowMapType: this.shadowMapType,
            shadowMapDebug: this.shadowMapDebug,
            shadowMapCascade: this.shadowMapCascade,
            alphaTest: e.alphaTest,
            metal: e.metal,
            wrapAround: e.wrapAround,
            doubleSided: e.side === THREE.DoubleSide,
            flipSided: e.side === THREE.BackSide
        };
        r = [];
        h ? r.push(h) : (r.push(e.fragmentShader), r.push(e.vertexShader));
        for (var m in e.defines) r.push(m), r.push(e.defines[m]);
        for (l in n) r.push(l), r.push(n[l]);
        h = r.join();
        var E;
        l = 0;
        for (m = Q.length; l < m; l++) if (r = Q[l], r.code === h) {
            E = r;
            E.usedTimes++;
            break;
        }
        void 0 === E && (E = new THREE.WebGLProgram(this, h, e, n), Q.push(E), Z.info.memory.programs = Q.length);
        e.program = E;
        E = e.program.attributes;
        if (e.morphTargets) for (e.numSupportedMorphTargets = 0, m = "morphTarget", l = 0; l < this.maxMorphTargets; l++) h = m + l, 
        0 <= E[h] && e.numSupportedMorphTargets++;
        if (e.morphNormals) for (e.numSupportedMorphNormals = 0, m = "morphNormal", l = 0; l < this.maxMorphNormals; l++) h = m + l, 
        0 <= E[h] && e.numSupportedMorphNormals++;
        e.uniformsList = [];
        for (c in e.__webglShader.uniforms) (l = e.program.uniforms[c]) && e.uniformsList.push([ e.__webglShader.uniforms[c], l ]);
    };
    this.setFaceCulling = function(e, t) {
        e === THREE.CullFaceNone ? $t.disable($t.CULL_FACE) : (t === THREE.FrontFaceDirectionCW ? $t.frontFace($t.CW) : $t.frontFace($t.CCW), 
        e === THREE.CullFaceBack ? $t.cullFace($t.BACK) : e === THREE.CullFaceFront ? $t.cullFace($t.FRONT) : $t.cullFace($t.FRONT_AND_BACK), 
        $t.enable($t.CULL_FACE));
    };
    this.setMaterialFaces = function(e) {
        var t = e.side === THREE.DoubleSide;
        e = e.side === THREE.BackSide;
        ot !== t && (t ? $t.disable($t.CULL_FACE) : $t.enable($t.CULL_FACE), ot = t);
        at !== e && (e ? $t.frontFace($t.CW) : $t.frontFace($t.CCW), at = e);
    };
    this.setDepthTest = function(e) {
        ht !== e && (e ? $t.enable($t.DEPTH_TEST) : $t.disable($t.DEPTH_TEST), ht = e);
    };
    this.setDepthWrite = function(e) {
        ft !== e && ($t.depthMask(e), ft = e);
    };
    this.setBlending = function(e, t, n, r) {
        e !== st && (e === THREE.NoBlending ? $t.disable($t.BLEND) : e === THREE.AdditiveBlending ? ($t.enable($t.BLEND), 
        $t.blendEquation($t.FUNC_ADD), $t.blendFunc($t.SRC_ALPHA, $t.ONE)) : e === THREE.SubtractiveBlending ? ($t.enable($t.BLEND), 
        $t.blendEquation($t.FUNC_ADD), $t.blendFunc($t.ZERO, $t.ONE_MINUS_SRC_COLOR)) : e === THREE.MultiplyBlending ? ($t.enable($t.BLEND), 
        $t.blendEquation($t.FUNC_ADD), $t.blendFunc($t.ZERO, $t.SRC_COLOR)) : e === THREE.CustomBlending ? $t.enable($t.BLEND) : ($t.enable($t.BLEND), 
        $t.blendEquationSeparate($t.FUNC_ADD, $t.FUNC_ADD), $t.blendFuncSeparate($t.SRC_ALPHA, $t.ONE_MINUS_SRC_ALPHA, $t.ONE, $t.ONE_MINUS_SRC_ALPHA)), 
        st = e);
        if (e === THREE.CustomBlending) {
            if (t !== ct && ($t.blendEquation(U(t)), ct = t), n !== lt || r !== ut) $t.blendFunc(U(n), U(r)), 
            lt = n, ut = r;
        } else ut = lt = ct = null;
    };
    this.setTexture = function(e, t) {
        if (e.needsUpdate) {
            e.__webglInit || (e.__webglInit = !0, e.addEventListener("dispose", Zt), e.__webglTexture = $t.createTexture(), 
            Z.info.memory.textures++);
            $t.activeTexture($t.TEXTURE0 + t);
            $t.bindTexture($t.TEXTURE_2D, e.__webglTexture);
            $t.pixelStorei($t.UNPACK_FLIP_Y_WEBGL, e.flipY);
            $t.pixelStorei($t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, e.premultiplyAlpha);
            $t.pixelStorei($t.UNPACK_ALIGNMENT, e.unpackAlignment);
            var n = e.image, r = THREE.Math.isPowerOfTwo(n.width) && THREE.Math.isPowerOfTwo(n.height), i = U(e.format), o = U(e.type);
            k($t.TEXTURE_2D, e, r);
            var a = e.mipmaps;
            if (e instanceof THREE.DataTexture) if (0 < a.length && r) {
                for (var s = 0, c = a.length; s < c; s++) n = a[s], $t.texImage2D($t.TEXTURE_2D, s, i, n.width, n.height, 0, i, o, n.data);
                e.generateMipmaps = !1;
            } else $t.texImage2D($t.TEXTURE_2D, 0, i, n.width, n.height, 0, i, o, n.data); else if (e instanceof THREE.CompressedTexture) for (s = 0, 
            c = a.length; s < c; s++) n = a[s], e.format !== THREE.RGBAFormat ? $t.compressedTexImage2D($t.TEXTURE_2D, s, i, n.width, n.height, 0, n.data) : $t.texImage2D($t.TEXTURE_2D, s, i, n.width, n.height, 0, i, o, n.data); else if (0 < a.length && r) {
                s = 0;
                for (c = a.length; s < c; s++) n = a[s], $t.texImage2D($t.TEXTURE_2D, s, i, i, o, n);
                e.generateMipmaps = !1;
            } else $t.texImage2D($t.TEXTURE_2D, 0, i, i, o, e.image);
            e.generateMipmaps && r && $t.generateMipmap($t.TEXTURE_2D);
            e.needsUpdate = !1;
            if (e.onUpdate) e.onUpdate();
        } else $t.activeTexture($t.TEXTURE0 + t), $t.bindTexture($t.TEXTURE_2D, e.__webglTexture);
    };
    this.setRenderTarget = function(e) {
        var t = e instanceof THREE.WebGLRenderTargetCube;
        if (e && !e.__webglFramebuffer) {
            void 0 === e.depthBuffer && (e.depthBuffer = !0);
            void 0 === e.stencilBuffer && (e.stencilBuffer = !0);
            e.addEventListener("dispose", Qt);
            e.__webglTexture = $t.createTexture();
            Z.info.memory.textures++;
            var n = THREE.Math.isPowerOfTwo(e.width) && THREE.Math.isPowerOfTwo(e.height), r = U(e.format), i = U(e.type);
            if (t) {
                e.__webglFramebuffer = [];
                e.__webglRenderbuffer = [];
                $t.bindTexture($t.TEXTURE_CUBE_MAP, e.__webglTexture);
                k($t.TEXTURE_CUBE_MAP, e, n);
                for (var o = 0; 6 > o; o++) {
                    e.__webglFramebuffer[o] = $t.createFramebuffer();
                    e.__webglRenderbuffer[o] = $t.createRenderbuffer();
                    $t.texImage2D($t.TEXTURE_CUBE_MAP_POSITIVE_X + o, 0, r, e.width, e.height, 0, r, i, null);
                    var a = e, s = $t.TEXTURE_CUBE_MAP_POSITIVE_X + o;
                    $t.bindFramebuffer($t.FRAMEBUFFER, e.__webglFramebuffer[o]);
                    $t.framebufferTexture2D($t.FRAMEBUFFER, $t.COLOR_ATTACHMENT0, s, a.__webglTexture, 0);
                    L(e.__webglRenderbuffer[o], e);
                }
                n && $t.generateMipmap($t.TEXTURE_CUBE_MAP);
            } else e.__webglFramebuffer = $t.createFramebuffer(), e.__webglRenderbuffer = e.shareDepthFrom ? e.shareDepthFrom.__webglRenderbuffer : $t.createRenderbuffer(), 
            $t.bindTexture($t.TEXTURE_2D, e.__webglTexture), k($t.TEXTURE_2D, e, n), $t.texImage2D($t.TEXTURE_2D, 0, r, e.width, e.height, 0, r, i, null), 
            r = $t.TEXTURE_2D, $t.bindFramebuffer($t.FRAMEBUFFER, e.__webglFramebuffer), $t.framebufferTexture2D($t.FRAMEBUFFER, $t.COLOR_ATTACHMENT0, r, e.__webglTexture, 0), 
            e.shareDepthFrom ? e.depthBuffer && !e.stencilBuffer ? $t.framebufferRenderbuffer($t.FRAMEBUFFER, $t.DEPTH_ATTACHMENT, $t.RENDERBUFFER, e.__webglRenderbuffer) : e.depthBuffer && e.stencilBuffer && $t.framebufferRenderbuffer($t.FRAMEBUFFER, $t.DEPTH_STENCIL_ATTACHMENT, $t.RENDERBUFFER, e.__webglRenderbuffer) : L(e.__webglRenderbuffer, e), 
            n && $t.generateMipmap($t.TEXTURE_2D);
            t ? $t.bindTexture($t.TEXTURE_CUBE_MAP, null) : $t.bindTexture($t.TEXTURE_2D, null);
            $t.bindRenderbuffer($t.RENDERBUFFER, null);
            $t.bindFramebuffer($t.FRAMEBUFFER, null);
        }
        e ? (t = t ? e.__webglFramebuffer[e.activeCubeFace] : e.__webglFramebuffer, n = e.width, 
        e = e.height, i = r = 0) : (t = null, n = yt, e = Tt, r = vt, i = gt);
        t !== et && ($t.bindFramebuffer($t.FRAMEBUFFER, t), $t.viewport(r, i, n, e), et = t);
        xt = n;
        Rt = e;
    };
    this.shadowMapPlugin = new THREE.ShadowMapPlugin();
    this.addPrePlugin(this.shadowMapPlugin);
    this.addPostPlugin(new THREE.SpritePlugin());
    this.addPostPlugin(new THREE.LensFlarePlugin());
};

THREE.WebGLRenderTarget = function(e, t, n) {
    this.width = e;
    this.height = t;
    n = n || {};
    this.wrapS = void 0 !== n.wrapS ? n.wrapS : THREE.ClampToEdgeWrapping;
    this.wrapT = void 0 !== n.wrapT ? n.wrapT : THREE.ClampToEdgeWrapping;
    this.magFilter = void 0 !== n.magFilter ? n.magFilter : THREE.LinearFilter;
    this.minFilter = void 0 !== n.minFilter ? n.minFilter : THREE.LinearMipMapLinearFilter;
    this.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1;
    this.offset = new THREE.Vector2(0, 0);
    this.repeat = new THREE.Vector2(1, 1);
    this.format = void 0 !== n.format ? n.format : THREE.RGBAFormat;
    this.type = void 0 !== n.type ? n.type : THREE.UnsignedByteType;
    this.depthBuffer = void 0 !== n.depthBuffer ? n.depthBuffer : !0;
    this.stencilBuffer = void 0 !== n.stencilBuffer ? n.stencilBuffer : !0;
    this.generateMipmaps = !0;
    this.shareDepthFrom = null;
};

THREE.WebGLRenderTarget.prototype = {
    constructor: THREE.WebGLRenderTarget,
    setSize: function(e, t) {
        this.width = e;
        this.height = t;
    },
    clone: function() {
        var e = new THREE.WebGLRenderTarget(this.width, this.height);
        e.wrapS = this.wrapS;
        e.wrapT = this.wrapT;
        e.magFilter = this.magFilter;
        e.minFilter = this.minFilter;
        e.anisotropy = this.anisotropy;
        e.offset.copy(this.offset);
        e.repeat.copy(this.repeat);
        e.format = this.format;
        e.type = this.type;
        e.depthBuffer = this.depthBuffer;
        e.stencilBuffer = this.stencilBuffer;
        e.generateMipmaps = this.generateMipmaps;
        e.shareDepthFrom = this.shareDepthFrom;
        return e;
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};

THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);

THREE.WebGLRenderTargetCube = function(e, t, n) {
    THREE.WebGLRenderTarget.call(this, e, t, n);
    this.activeCubeFace = 0;
};

THREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype);

THREE.WebGLProgram = function() {
    var e = 0;
    return function(t, n, r, i) {
        var o = t.context, a = r.defines, s = r.__webglShader.uniforms, c = r.attributes, l = r.__webglShader.vertexShader, u = r.__webglShader.fragmentShader, h = r.index0AttributeName;
        void 0 === h && !0 === i.morphTargets && (h = "position");
        var f = "SHADOWMAP_TYPE_BASIC";
        i.shadowMapType === THREE.PCFShadowMap ? f = "SHADOWMAP_TYPE_PCF" : i.shadowMapType === THREE.PCFSoftShadowMap && (f = "SHADOWMAP_TYPE_PCF_SOFT");
        var p, d;
        p = [];
        for (var m in a) d = a[m], !1 !== d && (d = "#define " + m + " " + d, p.push(d));
        p = p.join("\n");
        a = o.createProgram();
        r instanceof THREE.RawShaderMaterial ? t = r = "" : (r = [ "precision " + i.precision + " float;", "precision " + i.precision + " int;", p, i.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", t.gammaInput ? "#define GAMMA_INPUT" : "", t.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define MAX_DIR_LIGHTS " + i.maxDirLights, "#define MAX_POINT_LIGHTS " + i.maxPointLights, "#define MAX_SPOT_LIGHTS " + i.maxSpotLights, "#define MAX_HEMI_LIGHTS " + i.maxHemiLights, "#define MAX_SHADOWS " + i.maxShadows, "#define MAX_BONES " + i.maxBones, i.map ? "#define USE_MAP" : "", i.envMap ? "#define USE_ENVMAP" : "", i.lightMap ? "#define USE_LIGHTMAP" : "", i.bumpMap ? "#define USE_BUMPMAP" : "", i.normalMap ? "#define USE_NORMALMAP" : "", i.specularMap ? "#define USE_SPECULARMAP" : "", i.alphaMap ? "#define USE_ALPHAMAP" : "", i.vertexColors ? "#define USE_COLOR" : "", i.skinning ? "#define USE_SKINNING" : "", i.useVertexTexture ? "#define BONE_TEXTURE" : "", i.morphTargets ? "#define USE_MORPHTARGETS" : "", i.morphNormals ? "#define USE_MORPHNORMALS" : "", i.wrapAround ? "#define WRAP_AROUND" : "", i.doubleSided ? "#define DOUBLE_SIDED" : "", i.flipSided ? "#define FLIP_SIDED" : "", i.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", i.shadowMapEnabled ? "#define " + f : "", i.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", i.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", i.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", i.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n	attribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n	attribute vec3 morphTarget0;\n	attribute vec3 morphTarget1;\n	attribute vec3 morphTarget2;\n	attribute vec3 morphTarget3;\n	#ifdef USE_MORPHNORMALS\n		attribute vec3 morphNormal0;\n		attribute vec3 morphNormal1;\n		attribute vec3 morphNormal2;\n		attribute vec3 morphNormal3;\n	#else\n		attribute vec3 morphTarget4;\n		attribute vec3 morphTarget5;\n		attribute vec3 morphTarget6;\n		attribute vec3 morphTarget7;\n	#endif\n#endif\n#ifdef USE_SKINNING\n	attribute vec4 skinIndex;\n	attribute vec4 skinWeight;\n#endif\n" ].join("\n"), 
        t = [ "precision " + i.precision + " float;", "precision " + i.precision + " int;", i.bumpMap || i.normalMap ? "#extension GL_OES_standard_derivatives : enable" : "", p, "#define MAX_DIR_LIGHTS " + i.maxDirLights, "#define MAX_POINT_LIGHTS " + i.maxPointLights, "#define MAX_SPOT_LIGHTS " + i.maxSpotLights, "#define MAX_HEMI_LIGHTS " + i.maxHemiLights, "#define MAX_SHADOWS " + i.maxShadows, i.alphaTest ? "#define ALPHATEST " + i.alphaTest : "", t.gammaInput ? "#define GAMMA_INPUT" : "", t.gammaOutput ? "#define GAMMA_OUTPUT" : "", i.useFog && i.fog ? "#define USE_FOG" : "", i.useFog && i.fogExp ? "#define FOG_EXP2" : "", i.map ? "#define USE_MAP" : "", i.envMap ? "#define USE_ENVMAP" : "", i.lightMap ? "#define USE_LIGHTMAP" : "", i.bumpMap ? "#define USE_BUMPMAP" : "", i.normalMap ? "#define USE_NORMALMAP" : "", i.specularMap ? "#define USE_SPECULARMAP" : "", i.alphaMap ? "#define USE_ALPHAMAP" : "", i.vertexColors ? "#define USE_COLOR" : "", i.metal ? "#define METAL" : "", i.wrapAround ? "#define WRAP_AROUND" : "", i.doubleSided ? "#define DOUBLE_SIDED" : "", i.flipSided ? "#define FLIP_SIDED" : "", i.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", i.shadowMapEnabled ? "#define " + f : "", i.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", i.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", i.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n" ].join("\n"));
        l = new THREE.WebGLShader(o, o.VERTEX_SHADER, r + l);
        u = new THREE.WebGLShader(o, o.FRAGMENT_SHADER, t + u);
        o.attachShader(a, l);
        o.attachShader(a, u);
        void 0 !== h && o.bindAttribLocation(a, 0, h);
        o.linkProgram(a);
        !1 === o.getProgramParameter(a, o.LINK_STATUS) && (console.error("THREE.WebGLProgram: Could not initialise shader."), 
        console.error("gl.VALIDATE_STATUS", o.getProgramParameter(a, o.VALIDATE_STATUS)), 
        console.error("gl.getError()", o.getError()));
        "" !== o.getProgramInfoLog(a) && console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", o.getProgramInfoLog(a));
        o.deleteShader(l);
        o.deleteShader(u);
        h = "viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" ");
        i.useVertexTexture ? (h.push("boneTexture"), h.push("boneTextureWidth"), h.push("boneTextureHeight")) : h.push("boneGlobalMatrices");
        i.logarithmicDepthBuffer && h.push("logDepthBufFC");
        for (var E in s) h.push(E);
        s = h;
        E = {};
        h = 0;
        for (t = s.length; h < t; h++) f = s[h], E[f] = o.getUniformLocation(a, f);
        this.uniforms = E;
        h = "position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");
        for (s = 0; s < i.maxMorphTargets; s++) h.push("morphTarget" + s);
        for (s = 0; s < i.maxMorphNormals; s++) h.push("morphNormal" + s);
        for (var v in c) h.push(v);
        i = h;
        c = {};
        v = 0;
        for (s = i.length; v < s; v++) E = i[v], c[E] = o.getAttribLocation(a, E);
        this.attributes = c;
        this.id = e++;
        this.code = n;
        this.usedTimes = 1;
        this.program = a;
        this.vertexShader = l;
        this.fragmentShader = u;
        return this;
    };
}();

THREE.WebGLShader = function() {
    var e = function(e) {
        e = e.split("\n");
        for (var t = 0; t < e.length; t++) e[t] = t + 1 + ": " + e[t];
        return e.join("\n");
    };
    return function(t, n, r) {
        n = t.createShader(n);
        t.shaderSource(n, r);
        t.compileShader(n);
        !1 === t.getShaderParameter(n, t.COMPILE_STATUS) && console.error("THREE.WebGLShader: Shader couldn't compile.");
        "" !== t.getShaderInfoLog(n) && (console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", t.getShaderInfoLog(n)), 
        console.warn(e(r)));
        return n;
    };
}();

THREE.RenderableVertex = function() {
    this.position = new THREE.Vector3();
    this.positionWorld = new THREE.Vector3();
    this.positionScreen = new THREE.Vector4();
    this.visible = !0;
};

THREE.RenderableVertex.prototype.copy = function(e) {
    this.positionWorld.copy(e.positionWorld);
    this.positionScreen.copy(e.positionScreen);
};

THREE.RenderableFace = function() {
    this.id = 0;
    this.v1 = new THREE.RenderableVertex();
    this.v2 = new THREE.RenderableVertex();
    this.v3 = new THREE.RenderableVertex();
    this.normalModel = new THREE.Vector3();
    this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];
    this.vertexNormalsLength = 0;
    this.color = new THREE.Color();
    this.material = null;
    this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];
    this.z = 0;
};

THREE.RenderableObject = function() {
    this.id = 0;
    this.object = null;
    this.z = 0;
};

THREE.RenderableSprite = function() {
    this.id = 0;
    this.object = null;
    this.rotation = this.z = this.y = this.x = 0;
    this.scale = new THREE.Vector2();
    this.material = null;
};

THREE.RenderableLine = function() {
    this.id = 0;
    this.v1 = new THREE.RenderableVertex();
    this.v2 = new THREE.RenderableVertex();
    this.vertexColors = [ new THREE.Color(), new THREE.Color() ];
    this.material = null;
    this.z = 0;
};

THREE.GeometryUtils = {
    merge: function(e, t, n) {
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
        var r;
        t instanceof THREE.Mesh && (t.matrixAutoUpdate && t.updateMatrix(), r = t.matrix, 
        t = t.geometry);
        e.merge(t, r, n);
    },
    center: function(e) {
        console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");
        return e.center();
    }
};

THREE.ImageUtils = {
    crossOrigin: void 0,
    loadTexture: function(e, t, n, r) {
        var i = new THREE.ImageLoader();
        i.crossOrigin = this.crossOrigin;
        var o = new THREE.Texture(void 0, t);
        i.load(e, function(e) {
            o.image = e;
            o.needsUpdate = !0;
            n && n(o);
        }, void 0, function(e) {
            r && r(e);
        });
        o.sourceFile = e;
        return o;
    },
    loadTextureCube: function(e, t, n, r) {
        var i = new THREE.ImageLoader();
        i.crossOrigin = this.crossOrigin;
        var o = new THREE.CubeTexture([], t);
        o.flipY = !1;
        var a = 0;
        t = function(t) {
            i.load(e[t], function(e) {
                o.images[t] = e;
                a += 1;
                6 === a && (o.needsUpdate = !0, n && n(o));
            });
        };
        r = 0;
        for (var s = e.length; r < s; ++r) t(r);
        return o;
    },
    loadCompressedTexture: function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
    },
    loadCompressedTextureCube: function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
    },
    getNormalMap: function(e, t) {
        var n = function(e) {
            var t = Math.sqrt(e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);
            return [ e[0] / t, e[1] / t, e[2] / t ];
        };
        t |= 1;
        var r = e.width, i = e.height, o = document.createElement("canvas");
        o.width = r;
        o.height = i;
        var a = o.getContext("2d");
        a.drawImage(e, 0, 0);
        for (var s = a.getImageData(0, 0, r, i).data, c = a.createImageData(r, i), l = c.data, u = 0; u < r; u++) for (var h = 0; h < i; h++) {
            var f = 0 > h - 1 ? 0 : h - 1, p = h + 1 > i - 1 ? i - 1 : h + 1, d = 0 > u - 1 ? 0 : u - 1, m = u + 1 > r - 1 ? r - 1 : u + 1, E = [], v = [ 0, 0, s[4 * (h * r + u)] / 255 * t ];
            E.push([ -1, 0, s[4 * (h * r + d)] / 255 * t ]);
            E.push([ -1, -1, s[4 * (f * r + d)] / 255 * t ]);
            E.push([ 0, -1, s[4 * (f * r + u)] / 255 * t ]);
            E.push([ 1, -1, s[4 * (f * r + m)] / 255 * t ]);
            E.push([ 1, 0, s[4 * (h * r + m)] / 255 * t ]);
            E.push([ 1, 1, s[4 * (p * r + m)] / 255 * t ]);
            E.push([ 0, 1, s[4 * (p * r + u)] / 255 * t ]);
            E.push([ -1, 1, s[4 * (p * r + d)] / 255 * t ]);
            f = [];
            d = E.length;
            for (p = 0; p < d; p++) {
                var m = E[p], g = E[(p + 1) % d], m = [ m[0] - v[0], m[1] - v[1], m[2] - v[2] ], g = [ g[0] - v[0], g[1] - v[1], g[2] - v[2] ];
                f.push(n([ m[1] * g[2] - m[2] * g[1], m[2] * g[0] - m[0] * g[2], m[0] * g[1] - m[1] * g[0] ]));
            }
            E = [ 0, 0, 0 ];
            for (p = 0; p < f.length; p++) E[0] += f[p][0], E[1] += f[p][1], E[2] += f[p][2];
            E[0] /= f.length;
            E[1] /= f.length;
            E[2] /= f.length;
            v = 4 * (h * r + u);
            l[v] = (E[0] + 1) / 2 * 255 | 0;
            l[v + 1] = (E[1] + 1) / 2 * 255 | 0;
            l[v + 2] = 255 * E[2] | 0;
            l[v + 3] = 255;
        }
        a.putImageData(c, 0, 0);
        return o;
    },
    generateDataTexture: function(e, t, n) {
        var r = e * t, i = new Uint8Array(3 * r), o = Math.floor(255 * n.r), a = Math.floor(255 * n.g);
        n = Math.floor(255 * n.b);
        for (var s = 0; s < r; s++) i[3 * s] = o, i[3 * s + 1] = a, i[3 * s + 2] = n;
        e = new THREE.DataTexture(i, e, t, THREE.RGBFormat);
        e.needsUpdate = !0;
        return e;
    }
};

THREE.SceneUtils = {
    createMultiMaterialObject: function(e, t) {
        for (var n = new THREE.Object3D(), r = 0, i = t.length; r < i; r++) n.add(new THREE.Mesh(e, t[r]));
        return n;
    },
    detach: function(e, t, n) {
        e.applyMatrix(t.matrixWorld);
        t.remove(e);
        n.add(e);
    },
    attach: function(e, t, n) {
        var r = new THREE.Matrix4();
        r.getInverse(n.matrixWorld);
        e.applyMatrix(r);
        t.remove(e);
        n.add(e);
    }
};

THREE.FontUtils = {
    faces: {},
    face: "helvetiker",
    weight: "normal",
    style: "normal",
    size: 150,
    divisions: 10,
    getFace: function() {
        try {
            return this.faces[this.face][this.weight][this.style];
        } catch (e) {
            throw "The font " + this.face + " with " + this.weight + " weight and " + this.style + " style is missing.";
        }
    },
    loadFace: function(e) {
        var t = e.familyName.toLowerCase();
        this.faces[t] = this.faces[t] || {};
        this.faces[t][e.cssFontWeight] = this.faces[t][e.cssFontWeight] || {};
        this.faces[t][e.cssFontWeight][e.cssFontStyle] = e;
        return this.faces[t][e.cssFontWeight][e.cssFontStyle] = e;
    },
    drawText: function(e) {
        var t = this.getFace(), n = this.size / t.resolution, r = 0, i = String(e).split(""), o = i.length, a = [];
        for (e = 0; e < o; e++) {
            var s = new THREE.Path(), s = this.extractGlyphPoints(i[e], t, n, r, s), r = r + s.offset;
            a.push(s.path);
        }
        return {
            paths: a,
            offset: r / 2
        };
    },
    extractGlyphPoints: function(e, t, n, r, i) {
        var o = [], a, s, c, l, u, h, f, p, d, m, E, v = t.glyphs[e] || t.glyphs["?"];
        if (v) {
            if (v.o) for (t = v._cachedOutline || (v._cachedOutline = v.o.split(" ")), l = t.length, 
            e = 0; e < l; ) switch (c = t[e++], c) {
              case "m":
                c = t[e++] * n + r;
                u = t[e++] * n;
                i.moveTo(c, u);
                break;

              case "l":
                c = t[e++] * n + r;
                u = t[e++] * n;
                i.lineTo(c, u);
                break;

              case "q":
                c = t[e++] * n + r;
                u = t[e++] * n;
                p = t[e++] * n + r;
                d = t[e++] * n;
                i.quadraticCurveTo(p, d, c, u);
                if (a = o[o.length - 1]) for (h = a.x, f = a.y, a = 1, s = this.divisions; a <= s; a++) {
                    var g = a / s;
                    THREE.Shape.Utils.b2(g, h, p, c);
                    THREE.Shape.Utils.b2(g, f, d, u);
                }
                break;

              case "b":
                if (c = t[e++] * n + r, u = t[e++] * n, p = t[e++] * n + r, d = t[e++] * n, m = t[e++] * n + r, 
                E = t[e++] * n, i.bezierCurveTo(p, d, m, E, c, u), a = o[o.length - 1]) for (h = a.x, 
                f = a.y, a = 1, s = this.divisions; a <= s; a++) g = a / s, THREE.Shape.Utils.b3(g, h, p, m, c), 
                THREE.Shape.Utils.b3(g, f, d, E, u);
            }
            return {
                offset: v.ha * n,
                path: i
            };
        }
    }
};

THREE.FontUtils.generateShapes = function(e, t) {
    t = t || {};
    var n = void 0 !== t.curveSegments ? t.curveSegments : 4, r = void 0 !== t.font ? t.font : "helvetiker", i = void 0 !== t.weight ? t.weight : "normal", o = void 0 !== t.style ? t.style : "normal";
    THREE.FontUtils.size = void 0 !== t.size ? t.size : 100;
    THREE.FontUtils.divisions = n;
    THREE.FontUtils.face = r;
    THREE.FontUtils.weight = i;
    THREE.FontUtils.style = o;
    n = THREE.FontUtils.drawText(e).paths;
    r = [];
    i = 0;
    for (o = n.length; i < o; i++) Array.prototype.push.apply(r, n[i].toShapes());
    return r;
};

(function(e) {
    var t = function(e) {
        for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++) n += e[r].x * e[i].y - e[i].x * e[r].y;
        return .5 * n;
    };
    e.Triangulate = function(e, n) {
        var r = e.length;
        if (3 > r) return null;
        var i = [], o = [], a = [], s, c, l;
        if (0 < t(e)) for (c = 0; c < r; c++) o[c] = c; else for (c = 0; c < r; c++) o[c] = r - 1 - c;
        var u = 2 * r;
        for (c = r - 1; 2 < r; ) {
            if (0 >= u--) {
                console.log("Warning, unable to triangulate polygon!");
                break;
            }
            s = c;
            r <= s && (s = 0);
            c = s + 1;
            r <= c && (c = 0);
            l = c + 1;
            r <= l && (l = 0);
            var h;
            e: {
                var f = h = void 0, p = void 0, d = void 0, m = void 0, E = void 0, v = void 0, g = void 0, y = void 0, f = e[o[s]].x, p = e[o[s]].y, d = e[o[c]].x, m = e[o[c]].y, E = e[o[l]].x, v = e[o[l]].y;
                if (1e-10 > (d - f) * (v - p) - (m - p) * (E - f)) h = !1; else {
                    var T = void 0, x = void 0, R = void 0, _ = void 0, b = void 0, w = void 0, H = void 0, S = void 0, M = void 0, C = void 0, M = S = H = y = g = void 0, T = E - d, x = v - m, R = f - E, _ = p - v, b = d - f, w = m - p;
                    for (h = 0; h < r; h++) if (g = e[o[h]].x, y = e[o[h]].y, !(g === f && y === p || g === d && y === m || g === E && y === v) && (H = g - f, 
                    S = y - p, M = g - d, C = y - m, g -= E, y -= v, M = T * C - x * M, H = b * S - w * H, 
                    S = R * y - _ * g, -1e-10 <= M && -1e-10 <= S && -1e-10 <= H)) {
                        h = !1;
                        break e;
                    }
                    h = !0;
                }
            }
            if (h) {
                i.push([ e[o[s]], e[o[c]], e[o[l]] ]);
                a.push([ o[s], o[c], o[l] ]);
                s = c;
                for (l = c + 1; l < r; s++, l++) o[s] = o[l];
                r--;
                u = 2 * r;
            }
        }
        return n ? a : i;
    };
    e.Triangulate.area = t;
    return e;
})(THREE.FontUtils);

self._typeface_js = {
    faces: THREE.FontUtils.faces,
    loadFace: THREE.FontUtils.loadFace
};

THREE.typeface_js = self._typeface_js;

THREE.Curve = function() {};

THREE.Curve.prototype.getPoint = function(e) {
    console.log("Warning, getPoint() not implemented!");
    return null;
};

THREE.Curve.prototype.getPointAt = function(e) {
    e = this.getUtoTmapping(e);
    return this.getPoint(e);
};

THREE.Curve.prototype.getPoints = function(e) {
    e || (e = 5);
    var t, n = [];
    for (t = 0; t <= e; t++) n.push(this.getPoint(t / e));
    return n;
};

THREE.Curve.prototype.getSpacedPoints = function(e) {
    e || (e = 5);
    var t, n = [];
    for (t = 0; t <= e; t++) n.push(this.getPointAt(t / e));
    return n;
};

THREE.Curve.prototype.getLength = function() {
    var e = this.getLengths();
    return e[e.length - 1];
};

THREE.Curve.prototype.getLengths = function(e) {
    e || (e = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200);
    if (this.cacheArcLengths && this.cacheArcLengths.length == e + 1 && !this.needsUpdate) return this.cacheArcLengths;
    this.needsUpdate = !1;
    var t = [], n, r = this.getPoint(0), i, o = 0;
    t.push(0);
    for (i = 1; i <= e; i++) n = this.getPoint(i / e), o += n.distanceTo(r), t.push(o), 
    r = n;
    return this.cacheArcLengths = t;
};

THREE.Curve.prototype.updateArcLengths = function() {
    this.needsUpdate = !0;
    this.getLengths();
};

THREE.Curve.prototype.getUtoTmapping = function(e, t) {
    var n = this.getLengths(), r = 0, i = n.length, o;
    o = t ? t : e * n[i - 1];
    for (var a = 0, s = i - 1, c; a <= s; ) if (r = Math.floor(a + (s - a) / 2), c = n[r] - o, 
    0 > c) a = r + 1; else if (0 < c) s = r - 1; else {
        s = r;
        break;
    }
    r = s;
    if (n[r] == o) return r / (i - 1);
    a = n[r];
    return n = (r + (o - a) / (n[r + 1] - a)) / (i - 1);
};

THREE.Curve.prototype.getTangent = function(e) {
    var t = e - 1e-4;
    e += 1e-4;
    0 > t && (t = 0);
    1 < e && (e = 1);
    t = this.getPoint(t);
    return this.getPoint(e).clone().sub(t).normalize();
};

THREE.Curve.prototype.getTangentAt = function(e) {
    e = this.getUtoTmapping(e);
    return this.getTangent(e);
};

THREE.Curve.Utils = {
    tangentQuadraticBezier: function(e, t, n, r) {
        return 2 * (1 - e) * (n - t) + 2 * e * (r - n);
    },
    tangentCubicBezier: function(e, t, n, r, i) {
        return -3 * t * (1 - e) * (1 - e) + 3 * n * (1 - e) * (1 - e) - 6 * e * n * (1 - e) + 6 * e * r * (1 - e) - 3 * e * e * r + 3 * e * e * i;
    },
    tangentSpline: function(e, t, n, r, i) {
        return 6 * e * e - 6 * e + (3 * e * e - 4 * e + 1) + (-6 * e * e + 6 * e) + (3 * e * e - 2 * e);
    },
    interpolate: function(e, t, n, r, i) {
        e = .5 * (n - e);
        r = .5 * (r - t);
        var o = i * i;
        return (2 * t - 2 * n + e + r) * i * o + (-3 * t + 3 * n - 2 * e - r) * o + e * i + t;
    }
};

THREE.Curve.create = function(e, t) {
    e.prototype = Object.create(THREE.Curve.prototype);
    e.prototype.getPoint = t;
    return e;
};

THREE.CurvePath = function() {
    this.curves = [];
    this.bends = [];
    this.autoClose = !1;
};

THREE.CurvePath.prototype = Object.create(THREE.Curve.prototype);

THREE.CurvePath.prototype.add = function(e) {
    this.curves.push(e);
};

THREE.CurvePath.prototype.checkConnection = function() {};

THREE.CurvePath.prototype.closePath = function() {
    var e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
    e.equals(t) || this.curves.push(new THREE.LineCurve(t, e));
};

THREE.CurvePath.prototype.getPoint = function(e) {
    var t = e * this.getLength(), n = this.getCurveLengths();
    for (e = 0; e < n.length; ) {
        if (n[e] >= t) return t = n[e] - t, e = this.curves[e], t = 1 - t / e.getLength(), 
        e.getPointAt(t);
        e++;
    }
    return null;
};

THREE.CurvePath.prototype.getLength = function() {
    var e = this.getCurveLengths();
    return e[e.length - 1];
};

THREE.CurvePath.prototype.getCurveLengths = function() {
    if (this.cacheLengths && this.cacheLengths.length == this.curves.length) return this.cacheLengths;
    var e = [], t = 0, n, r = this.curves.length;
    for (n = 0; n < r; n++) t += this.curves[n].getLength(), e.push(t);
    return this.cacheLengths = e;
};

THREE.CurvePath.prototype.getBoundingBox = function() {
    var e = this.getPoints(), t, n, r, i, o, a;
    t = n = Number.NEGATIVE_INFINITY;
    i = o = Number.POSITIVE_INFINITY;
    var s, c, l, u, h = e[0] instanceof THREE.Vector3;
    u = h ? new THREE.Vector3() : new THREE.Vector2();
    c = 0;
    for (l = e.length; c < l; c++) s = e[c], s.x > t ? t = s.x : s.x < i && (i = s.x), 
    s.y > n ? n = s.y : s.y < o && (o = s.y), h && (s.z > r ? r = s.z : s.z < a && (a = s.z)), 
    u.add(s);
    e = {
        minX: i,
        minY: o,
        maxX: t,
        maxY: n
    };
    h && (e.maxZ = r, e.minZ = a);
    return e;
};

THREE.CurvePath.prototype.createPointsGeometry = function(e) {
    e = this.getPoints(e, !0);
    return this.createGeometry(e);
};

THREE.CurvePath.prototype.createSpacedPointsGeometry = function(e) {
    e = this.getSpacedPoints(e, !0);
    return this.createGeometry(e);
};

THREE.CurvePath.prototype.createGeometry = function(e) {
    for (var t = new THREE.Geometry(), n = 0; n < e.length; n++) t.vertices.push(new THREE.Vector3(e[n].x, e[n].y, e[n].z || 0));
    return t;
};

THREE.CurvePath.prototype.addWrapPath = function(e) {
    this.bends.push(e);
};

THREE.CurvePath.prototype.getTransformedPoints = function(e, t) {
    var n = this.getPoints(e), r, i;
    t || (t = this.bends);
    r = 0;
    for (i = t.length; r < i; r++) n = this.getWrapPoints(n, t[r]);
    return n;
};

THREE.CurvePath.prototype.getTransformedSpacedPoints = function(e, t) {
    var n = this.getSpacedPoints(e), r, i;
    t || (t = this.bends);
    r = 0;
    for (i = t.length; r < i; r++) n = this.getWrapPoints(n, t[r]);
    return n;
};

THREE.CurvePath.prototype.getWrapPoints = function(e, t) {
    var n = this.getBoundingBox(), r, i, o, a, s, c;
    r = 0;
    for (i = e.length; r < i; r++) o = e[r], a = o.x, s = o.y, c = a / n.maxX, c = t.getUtoTmapping(c, a), 
    a = t.getPoint(c), c = t.getTangent(c), c.set(-c.y, c.x).multiplyScalar(s), o.x = a.x + c.x, 
    o.y = a.y + c.y;
    return e;
};

THREE.Gyroscope = function() {
    THREE.Object3D.call(this);
};

THREE.Gyroscope.prototype = Object.create(THREE.Object3D.prototype);

THREE.Gyroscope.prototype.updateMatrixWorld = function(e) {
    this.matrixAutoUpdate && this.updateMatrix();
    if (this.matrixWorldNeedsUpdate || e) this.parent ? (this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), 
    this.matrixWorld.decompose(this.translationWorld, this.quaternionWorld, this.scaleWorld), 
    this.matrix.decompose(this.translationObject, this.quaternionObject, this.scaleObject), 
    this.matrixWorld.compose(this.translationWorld, this.quaternionObject, this.scaleWorld)) : this.matrixWorld.copy(this.matrix), 
    this.matrixWorldNeedsUpdate = !1, e = !0;
    for (var t = 0, n = this.children.length; t < n; t++) this.children[t].updateMatrixWorld(e);
};

THREE.Gyroscope.prototype.translationWorld = new THREE.Vector3();

THREE.Gyroscope.prototype.translationObject = new THREE.Vector3();

THREE.Gyroscope.prototype.quaternionWorld = new THREE.Quaternion();

THREE.Gyroscope.prototype.quaternionObject = new THREE.Quaternion();

THREE.Gyroscope.prototype.scaleWorld = new THREE.Vector3();

THREE.Gyroscope.prototype.scaleObject = new THREE.Vector3();

THREE.Path = function(e) {
    THREE.CurvePath.call(this);
    this.actions = [];
    e && this.fromPoints(e);
};

THREE.Path.prototype = Object.create(THREE.CurvePath.prototype);

THREE.PathActions = {
    MOVE_TO: "moveTo",
    LINE_TO: "lineTo",
    QUADRATIC_CURVE_TO: "quadraticCurveTo",
    BEZIER_CURVE_TO: "bezierCurveTo",
    CSPLINE_THRU: "splineThru",
    ARC: "arc",
    ELLIPSE: "ellipse"
};

THREE.Path.prototype.fromPoints = function(e) {
    this.moveTo(e[0].x, e[0].y);
    for (var t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
};

THREE.Path.prototype.moveTo = function(e, t) {
    var n = Array.prototype.slice.call(arguments);
    this.actions.push({
        action: THREE.PathActions.MOVE_TO,
        args: n
    });
};

THREE.Path.prototype.lineTo = function(e, t) {
    var n = Array.prototype.slice.call(arguments), r = this.actions[this.actions.length - 1].args, r = new THREE.LineCurve(new THREE.Vector2(r[r.length - 2], r[r.length - 1]), new THREE.Vector2(e, t));
    this.curves.push(r);
    this.actions.push({
        action: THREE.PathActions.LINE_TO,
        args: n
    });
};

THREE.Path.prototype.quadraticCurveTo = function(e, t, n, r) {
    var i = Array.prototype.slice.call(arguments), o = this.actions[this.actions.length - 1].args, o = new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length - 2], o[o.length - 1]), new THREE.Vector2(e, t), new THREE.Vector2(n, r));
    this.curves.push(o);
    this.actions.push({
        action: THREE.PathActions.QUADRATIC_CURVE_TO,
        args: i
    });
};

THREE.Path.prototype.bezierCurveTo = function(e, t, n, r, i, o) {
    var a = Array.prototype.slice.call(arguments), s = this.actions[this.actions.length - 1].args, s = new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length - 2], s[s.length - 1]), new THREE.Vector2(e, t), new THREE.Vector2(n, r), new THREE.Vector2(i, o));
    this.curves.push(s);
    this.actions.push({
        action: THREE.PathActions.BEZIER_CURVE_TO,
        args: a
    });
};

THREE.Path.prototype.splineThru = function(e) {
    var t = Array.prototype.slice.call(arguments), n = this.actions[this.actions.length - 1].args, n = [ new THREE.Vector2(n[n.length - 2], n[n.length - 1]) ];
    Array.prototype.push.apply(n, e);
    n = new THREE.SplineCurve(n);
    this.curves.push(n);
    this.actions.push({
        action: THREE.PathActions.CSPLINE_THRU,
        args: t
    });
};

THREE.Path.prototype.arc = function(e, t, n, r, i, o) {
    var a = this.actions[this.actions.length - 1].args;
    this.absarc(e + a[a.length - 2], t + a[a.length - 1], n, r, i, o);
};

THREE.Path.prototype.absarc = function(e, t, n, r, i, o) {
    this.absellipse(e, t, n, n, r, i, o);
};

THREE.Path.prototype.ellipse = function(e, t, n, r, i, o, a) {
    var s = this.actions[this.actions.length - 1].args;
    this.absellipse(e + s[s.length - 2], t + s[s.length - 1], n, r, i, o, a);
};

THREE.Path.prototype.absellipse = function(e, t, n, r, i, o, a) {
    var s = Array.prototype.slice.call(arguments), c = new THREE.EllipseCurve(e, t, n, r, i, o, a);
    this.curves.push(c);
    c = c.getPoint(1);
    s.push(c.x);
    s.push(c.y);
    this.actions.push({
        action: THREE.PathActions.ELLIPSE,
        args: s
    });
};

THREE.Path.prototype.getSpacedPoints = function(e, t) {
    e || (e = 40);
    for (var n = [], r = 0; r < e; r++) n.push(this.getPoint(r / e));
    return n;
};

THREE.Path.prototype.getPoints = function(e, t) {
    if (this.useSpacedPoints) return console.log("tata"), this.getSpacedPoints(e, t);
    e = e || 12;
    var n = [], r, i, o, a, s, c, l, u, h, f, p, d, m;
    r = 0;
    for (i = this.actions.length; r < i; r++) switch (o = this.actions[r], a = o.action, 
    o = o.args, a) {
      case THREE.PathActions.MOVE_TO:
        n.push(new THREE.Vector2(o[0], o[1]));
        break;

      case THREE.PathActions.LINE_TO:
        n.push(new THREE.Vector2(o[0], o[1]));
        break;

      case THREE.PathActions.QUADRATIC_CURVE_TO:
        s = o[2];
        c = o[3];
        h = o[0];
        f = o[1];
        0 < n.length ? (a = n[n.length - 1], p = a.x, d = a.y) : (a = this.actions[r - 1].args, 
        p = a[a.length - 2], d = a[a.length - 1]);
        for (o = 1; o <= e; o++) m = o / e, a = THREE.Shape.Utils.b2(m, p, h, s), m = THREE.Shape.Utils.b2(m, d, f, c), 
        n.push(new THREE.Vector2(a, m));
        break;

      case THREE.PathActions.BEZIER_CURVE_TO:
        s = o[4];
        c = o[5];
        h = o[0];
        f = o[1];
        l = o[2];
        u = o[3];
        0 < n.length ? (a = n[n.length - 1], p = a.x, d = a.y) : (a = this.actions[r - 1].args, 
        p = a[a.length - 2], d = a[a.length - 1]);
        for (o = 1; o <= e; o++) m = o / e, a = THREE.Shape.Utils.b3(m, p, h, l, s), m = THREE.Shape.Utils.b3(m, d, f, u, c), 
        n.push(new THREE.Vector2(a, m));
        break;

      case THREE.PathActions.CSPLINE_THRU:
        a = this.actions[r - 1].args;
        m = [ new THREE.Vector2(a[a.length - 2], a[a.length - 1]) ];
        a = e * o[0].length;
        m = m.concat(o[0]);
        m = new THREE.SplineCurve(m);
        for (o = 1; o <= a; o++) n.push(m.getPointAt(o / a));
        break;

      case THREE.PathActions.ARC:
        s = o[0];
        c = o[1];
        f = o[2];
        l = o[3];
        a = o[4];
        h = !!o[5];
        p = a - l;
        d = 2 * e;
        for (o = 1; o <= d; o++) m = o / d, h || (m = 1 - m), m = l + m * p, a = s + f * Math.cos(m), 
        m = c + f * Math.sin(m), n.push(new THREE.Vector2(a, m));
        break;

      case THREE.PathActions.ELLIPSE:
        for (s = o[0], c = o[1], f = o[2], u = o[3], l = o[4], a = o[5], h = !!o[6], p = a - l, 
        d = 2 * e, o = 1; o <= d; o++) m = o / d, h || (m = 1 - m), m = l + m * p, a = s + f * Math.cos(m), 
        m = c + u * Math.sin(m), n.push(new THREE.Vector2(a, m));
    }
    r = n[n.length - 1];
    1e-10 > Math.abs(r.x - n[0].x) && 1e-10 > Math.abs(r.y - n[0].y) && n.splice(n.length - 1, 1);
    t && n.push(n[0]);
    return n;
};

THREE.Path.prototype.toShapes = function(e, t) {
    function n(e) {
        for (var t = [], n = 0, r = e.length; n < r; n++) {
            var i = e[n], o = new THREE.Shape();
            o.actions = i.actions;
            o.curves = i.curves;
            t.push(o);
        }
        return t;
    }
    function r(e, t) {
        for (var n = t.length, r = !1, i = n - 1, o = 0; o < n; i = o++) {
            var a = t[i], s = t[o], c = s.x - a.x, l = s.y - a.y;
            if (1e-10 < Math.abs(l)) {
                if (0 > l && (a = t[o], c = -c, s = t[i], l = -l), !(e.y < a.y || e.y > s.y)) if (e.y == a.y) {
                    if (e.x == a.x) return !0;
                } else {
                    i = l * (e.x - a.x) - c * (e.y - a.y);
                    if (0 == i) return !0;
                    0 > i || (r = !r);
                }
            } else if (e.y == a.y && (s.x <= e.x && e.x <= a.x || a.x <= e.x && e.x <= s.x)) return !0;
        }
        return r;
    }
    var i = function(e) {
        var t, n, r, i, o = [], a = new THREE.Path();
        t = 0;
        for (n = e.length; t < n; t++) r = e[t], i = r.args, r = r.action, r == THREE.PathActions.MOVE_TO && 0 != a.actions.length && (o.push(a), 
        a = new THREE.Path()), a[r].apply(a, i);
        0 != a.actions.length && o.push(a);
        return o;
    }(this.actions);
    if (0 == i.length) return [];
    if (!0 === t) return n(i);
    var o, a, s, c = [];
    if (1 == i.length) return a = i[0], s = new THREE.Shape(), s.actions = a.actions, 
    s.curves = a.curves, c.push(s), c;
    var l = !THREE.Shape.Utils.isClockWise(i[0].getPoints()), l = e ? !l : l;
    s = [];
    var u = [], h = [], f = 0, p;
    u[f] = void 0;
    h[f] = [];
    var d, m;
    d = 0;
    for (m = i.length; d < m; d++) a = i[d], p = a.getPoints(), o = THREE.Shape.Utils.isClockWise(p), 
    (o = e ? !o : o) ? (!l && u[f] && f++, u[f] = {
        s: new THREE.Shape(),
        p: p
    }, u[f].s.actions = a.actions, u[f].s.curves = a.curves, l && f++, h[f] = []) : h[f].push({
        h: a,
        p: p[0]
    });
    if (!u[0]) return n(i);
    if (1 < u.length) {
        d = !1;
        m = [];
        a = 0;
        for (i = u.length; a < i; a++) s[a] = [];
        a = 0;
        for (i = u.length; a < i; a++) for (o = h[a], l = 0; l < o.length; l++) {
            f = o[l];
            p = !0;
            for (var E = 0; E < u.length; E++) r(f.p, u[E].p) && (a != E && m.push({
                froms: a,
                tos: E,
                hole: l
            }), p ? (p = !1, s[E].push(f)) : d = !0);
            p && s[a].push(f);
        }
        0 < m.length && (d || (h = s));
    }
    d = 0;
    for (m = u.length; d < m; d++) for (s = u[d].s, c.push(s), a = h[d], i = 0, o = a.length; i < o; i++) s.holes.push(a[i].h);
    return c;
};

THREE.Shape = function() {
    THREE.Path.apply(this, arguments);
    this.holes = [];
};

THREE.Shape.prototype = Object.create(THREE.Path.prototype);

THREE.Shape.prototype.extrude = function(e) {
    return new THREE.ExtrudeGeometry(this, e);
};

THREE.Shape.prototype.makeGeometry = function(e) {
    return new THREE.ShapeGeometry(this, e);
};

THREE.Shape.prototype.getPointsHoles = function(e) {
    var t, n = this.holes.length, r = [];
    for (t = 0; t < n; t++) r[t] = this.holes[t].getTransformedPoints(e, this.bends);
    return r;
};

THREE.Shape.prototype.getSpacedPointsHoles = function(e) {
    var t, n = this.holes.length, r = [];
    for (t = 0; t < n; t++) r[t] = this.holes[t].getTransformedSpacedPoints(e, this.bends);
    return r;
};

THREE.Shape.prototype.extractAllPoints = function(e) {
    return {
        shape: this.getTransformedPoints(e),
        holes: this.getPointsHoles(e)
    };
};

THREE.Shape.prototype.extractPoints = function(e) {
    return this.useSpacedPoints ? this.extractAllSpacedPoints(e) : this.extractAllPoints(e);
};

THREE.Shape.prototype.extractAllSpacedPoints = function(e) {
    return {
        shape: this.getTransformedSpacedPoints(e),
        holes: this.getSpacedPointsHoles(e)
    };
};

THREE.Shape.Utils = {
    triangulateShape: function(e, t) {
        function n(e, t, n) {
            return e.x != t.x ? e.x < t.x ? e.x <= n.x && n.x <= t.x : t.x <= n.x && n.x <= e.x : e.y < t.y ? e.y <= n.y && n.y <= t.y : t.y <= n.y && n.y <= e.y;
        }
        function r(e, t, r, i, o) {
            var a = t.x - e.x, s = t.y - e.y, c = i.x - r.x, l = i.y - r.y, u = e.x - r.x, h = e.y - r.y, f = s * c - a * l, p = s * u - a * h;
            if (1e-10 < Math.abs(f)) {
                if (0 < f) {
                    if (0 > p || p > f) return [];
                    c = l * u - c * h;
                    if (0 > c || c > f) return [];
                } else {
                    if (0 < p || p < f) return [];
                    c = l * u - c * h;
                    if (0 < c || c < f) return [];
                }
                if (0 == c) return !o || 0 != p && p != f ? [ e ] : [];
                if (c == f) return !o || 0 != p && p != f ? [ t ] : [];
                if (0 == p) return [ r ];
                if (p == f) return [ i ];
                o = c / f;
                return [ {
                    x: e.x + o * a,
                    y: e.y + o * s
                } ];
            }
            if (0 != p || l * u != c * h) return [];
            s = 0 == a && 0 == s;
            c = 0 == c && 0 == l;
            if (s && c) return e.x != r.x || e.y != r.y ? [] : [ e ];
            if (s) return n(r, i, e) ? [ e ] : [];
            if (c) return n(e, t, r) ? [ r ] : [];
            0 != a ? (e.x < t.x ? (a = e, c = e.x, s = t, e = t.x) : (a = t, c = t.x, s = e, 
            e = e.x), r.x < i.x ? (t = r, f = r.x, l = i, r = i.x) : (t = i, f = i.x, l = r, 
            r = r.x)) : (e.y < t.y ? (a = e, c = e.y, s = t, e = t.y) : (a = t, c = t.y, s = e, 
            e = e.y), r.y < i.y ? (t = r, f = r.y, l = i, r = i.y) : (t = i, f = i.y, l = r, 
            r = r.y));
            return c <= f ? e < f ? [] : e == f ? o ? [] : [ t ] : e <= r ? [ t, s ] : [ t, l ] : c > r ? [] : c == r ? o ? [] : [ a ] : e <= r ? [ a, s ] : [ a, l ];
        }
        function i(e, t, n, r) {
            var i = t.x - e.x, o = t.y - e.y;
            t = n.x - e.x;
            n = n.y - e.y;
            var a = r.x - e.x;
            r = r.y - e.y;
            e = i * n - o * t;
            i = i * r - o * a;
            return 1e-10 < Math.abs(e) ? (t = a * n - r * t, 0 < e ? 0 <= i && 0 <= t : 0 <= i || 0 <= t) : 0 < i;
        }
        var o, a, s, c, l, u = {};
        s = e.concat();
        o = 0;
        for (a = t.length; o < a; o++) Array.prototype.push.apply(s, t[o]);
        o = 0;
        for (a = s.length; o < a; o++) l = s[o].x + ":" + s[o].y, void 0 !== u[l] && console.log("Duplicate point", l), 
        u[l] = o;
        o = function(e, t) {
            function n(e, t) {
                var n = s.length - 1, r = e - 1;
                0 > r && (r = n);
                var o = e + 1;
                o > n && (o = 0);
                n = i(s[e], s[r], s[o], c[t]);
                if (!n) return !1;
                n = c.length - 1;
                r = t - 1;
                0 > r && (r = n);
                o = t + 1;
                o > n && (o = 0);
                return (n = i(c[t], c[r], c[o], s[e])) ? !0 : !1;
            }
            function o(e, t) {
                var n, i;
                for (n = 0; n < s.length; n++) if (i = n + 1, i %= s.length, i = r(e, t, s[n], s[i], !0), 
                0 < i.length) return !0;
                return !1;
            }
            function a(e, n) {
                var i, o, a, s;
                for (i = 0; i < l.length; i++) for (o = t[l[i]], a = 0; a < o.length; a++) if (s = a + 1, 
                s %= o.length, s = r(e, n, o[a], o[s], !0), 0 < s.length) return !0;
                return !1;
            }
            var s = e.concat(), c, l = [], u, h, f, p, d, m = [], E, v, g, y = 0;
            for (u = t.length; y < u; y++) l.push(y);
            E = 0;
            for (var T = 2 * l.length; 0 < l.length; ) {
                T--;
                if (0 > T) {
                    console.log("Infinite Loop! Holes left:" + l.length + ", Probably Hole outside Shape!");
                    break;
                }
                for (h = E; h < s.length; h++) {
                    f = s[h];
                    u = -1;
                    for (y = 0; y < l.length; y++) if (p = l[y], d = f.x + ":" + f.y + ":" + p, void 0 === m[d]) {
                        c = t[p];
                        for (v = 0; v < c.length; v++) if (p = c[v], n(h, v) && !o(f, p) && !a(f, p)) {
                            u = v;
                            l.splice(y, 1);
                            E = s.slice(0, h + 1);
                            p = s.slice(h);
                            v = c.slice(u);
                            g = c.slice(0, u + 1);
                            s = E.concat(v).concat(g).concat(p);
                            E = h;
                            break;
                        }
                        if (0 <= u) break;
                        m[d] = !0;
                    }
                    if (0 <= u) break;
                }
            }
            return s;
        }(e, t);
        var h = THREE.FontUtils.Triangulate(o, !1);
        o = 0;
        for (a = h.length; o < a; o++) for (c = h[o], s = 0; 3 > s; s++) l = c[s].x + ":" + c[s].y, 
        l = u[l], void 0 !== l && (c[s] = l);
        return h.concat();
    },
    isClockWise: function(e) {
        return 0 > THREE.FontUtils.Triangulate.area(e);
    },
    b2p0: function(e, t) {
        var n = 1 - e;
        return n * n * t;
    },
    b2p1: function(e, t) {
        return 2 * (1 - e) * e * t;
    },
    b2p2: function(e, t) {
        return e * e * t;
    },
    b2: function(e, t, n, r) {
        return this.b2p0(e, t) + this.b2p1(e, n) + this.b2p2(e, r);
    },
    b3p0: function(e, t) {
        var n = 1 - e;
        return n * n * n * t;
    },
    b3p1: function(e, t) {
        var n = 1 - e;
        return 3 * n * n * e * t;
    },
    b3p2: function(e, t) {
        return 3 * (1 - e) * e * e * t;
    },
    b3p3: function(e, t) {
        return e * e * e * t;
    },
    b3: function(e, t, n, r, i) {
        return this.b3p0(e, t) + this.b3p1(e, n) + this.b3p2(e, r) + this.b3p3(e, i);
    }
};

THREE.LineCurve = function(e, t) {
    this.v1 = e;
    this.v2 = t;
};

THREE.LineCurve.prototype = Object.create(THREE.Curve.prototype);

THREE.LineCurve.prototype.getPoint = function(e) {
    var t = this.v2.clone().sub(this.v1);
    t.multiplyScalar(e).add(this.v1);
    return t;
};

THREE.LineCurve.prototype.getPointAt = function(e) {
    return this.getPoint(e);
};

THREE.LineCurve.prototype.getTangent = function(e) {
    return this.v2.clone().sub(this.v1).normalize();
};

THREE.QuadraticBezierCurve = function(e, t, n) {
    this.v0 = e;
    this.v1 = t;
    this.v2 = n;
};

THREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype);

THREE.QuadraticBezierCurve.prototype.getPoint = function(e) {
    var t;
    t = THREE.Shape.Utils.b2(e, this.v0.x, this.v1.x, this.v2.x);
    e = THREE.Shape.Utils.b2(e, this.v0.y, this.v1.y, this.v2.y);
    return new THREE.Vector2(t, e);
};

THREE.QuadraticBezierCurve.prototype.getTangent = function(e) {
    var t;
    t = THREE.Curve.Utils.tangentQuadraticBezier(e, this.v0.x, this.v1.x, this.v2.x);
    e = THREE.Curve.Utils.tangentQuadraticBezier(e, this.v0.y, this.v1.y, this.v2.y);
    t = new THREE.Vector2(t, e);
    t.normalize();
    return t;
};

THREE.CubicBezierCurve = function(e, t, n, r) {
    this.v0 = e;
    this.v1 = t;
    this.v2 = n;
    this.v3 = r;
};

THREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype);

THREE.CubicBezierCurve.prototype.getPoint = function(e) {
    var t;
    t = THREE.Shape.Utils.b3(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x);
    e = THREE.Shape.Utils.b3(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
    return new THREE.Vector2(t, e);
};

THREE.CubicBezierCurve.prototype.getTangent = function(e) {
    var t;
    t = THREE.Curve.Utils.tangentCubicBezier(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x);
    e = THREE.Curve.Utils.tangentCubicBezier(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
    t = new THREE.Vector2(t, e);
    t.normalize();
    return t;
};

THREE.SplineCurve = function(e) {
    this.points = void 0 == e ? [] : e;
};

THREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype);

THREE.SplineCurve.prototype.getPoint = function(e) {
    var t = new THREE.Vector2(), n = [], r = this.points, i;
    i = (r.length - 1) * e;
    e = Math.floor(i);
    i -= e;
    n[0] = 0 == e ? e : e - 1;
    n[1] = e;
    n[2] = e > r.length - 2 ? r.length - 1 : e + 1;
    n[3] = e > r.length - 3 ? r.length - 1 : e + 2;
    t.x = THREE.Curve.Utils.interpolate(r[n[0]].x, r[n[1]].x, r[n[2]].x, r[n[3]].x, i);
    t.y = THREE.Curve.Utils.interpolate(r[n[0]].y, r[n[1]].y, r[n[2]].y, r[n[3]].y, i);
    return t;
};

THREE.EllipseCurve = function(e, t, n, r, i, o, a) {
    this.aX = e;
    this.aY = t;
    this.xRadius = n;
    this.yRadius = r;
    this.aStartAngle = i;
    this.aEndAngle = o;
    this.aClockwise = a;
};

THREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype);

THREE.EllipseCurve.prototype.getPoint = function(e) {
    var t;
    t = this.aEndAngle - this.aStartAngle;
    0 > t && (t += 2 * Math.PI);
    t > 2 * Math.PI && (t -= 2 * Math.PI);
    t = !0 === this.aClockwise ? this.aEndAngle + (1 - e) * (2 * Math.PI - t) : this.aStartAngle + e * t;
    e = this.aX + this.xRadius * Math.cos(t);
    t = this.aY + this.yRadius * Math.sin(t);
    return new THREE.Vector2(e, t);
};

THREE.ArcCurve = function(e, t, n, r, i, o) {
    THREE.EllipseCurve.call(this, e, t, n, n, r, i, o);
};

THREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype);

THREE.LineCurve3 = THREE.Curve.create(function(e, t) {
    this.v1 = e;
    this.v2 = t;
}, function(e) {
    var t = new THREE.Vector3();
    t.subVectors(this.v2, this.v1);
    t.multiplyScalar(e);
    t.add(this.v1);
    return t;
});

THREE.QuadraticBezierCurve3 = THREE.Curve.create(function(e, t, n) {
    this.v0 = e;
    this.v1 = t;
    this.v2 = n;
}, function(e) {
    var t, n;
    t = THREE.Shape.Utils.b2(e, this.v0.x, this.v1.x, this.v2.x);
    n = THREE.Shape.Utils.b2(e, this.v0.y, this.v1.y, this.v2.y);
    e = THREE.Shape.Utils.b2(e, this.v0.z, this.v1.z, this.v2.z);
    return new THREE.Vector3(t, n, e);
});

THREE.CubicBezierCurve3 = THREE.Curve.create(function(e, t, n, r) {
    this.v0 = e;
    this.v1 = t;
    this.v2 = n;
    this.v3 = r;
}, function(e) {
    var t, n;
    t = THREE.Shape.Utils.b3(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x);
    n = THREE.Shape.Utils.b3(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
    e = THREE.Shape.Utils.b3(e, this.v0.z, this.v1.z, this.v2.z, this.v3.z);
    return new THREE.Vector3(t, n, e);
});

THREE.SplineCurve3 = THREE.Curve.create(function(e) {
    this.points = void 0 == e ? [] : e;
}, function(e) {
    var t = new THREE.Vector3(), n = [], r = this.points, i;
    e *= r.length - 1;
    i = Math.floor(e);
    e -= i;
    n[0] = 0 == i ? i : i - 1;
    n[1] = i;
    n[2] = i > r.length - 2 ? r.length - 1 : i + 1;
    n[3] = i > r.length - 3 ? r.length - 1 : i + 2;
    i = r[n[0]];
    var o = r[n[1]], a = r[n[2]], n = r[n[3]];
    t.x = THREE.Curve.Utils.interpolate(i.x, o.x, a.x, n.x, e);
    t.y = THREE.Curve.Utils.interpolate(i.y, o.y, a.y, n.y, e);
    t.z = THREE.Curve.Utils.interpolate(i.z, o.z, a.z, n.z, e);
    return t;
});

THREE.ClosedSplineCurve3 = THREE.Curve.create(function(e) {
    this.points = void 0 == e ? [] : e;
}, function(e) {
    var t = new THREE.Vector3(), n = [], r = this.points, i;
    i = (r.length - 0) * e;
    e = Math.floor(i);
    i -= e;
    e += 0 < e ? 0 : (Math.floor(Math.abs(e) / r.length) + 1) * r.length;
    n[0] = (e - 1) % r.length;
    n[1] = e % r.length;
    n[2] = (e + 1) % r.length;
    n[3] = (e + 2) % r.length;
    t.x = THREE.Curve.Utils.interpolate(r[n[0]].x, r[n[1]].x, r[n[2]].x, r[n[3]].x, i);
    t.y = THREE.Curve.Utils.interpolate(r[n[0]].y, r[n[1]].y, r[n[2]].y, r[n[3]].y, i);
    t.z = THREE.Curve.Utils.interpolate(r[n[0]].z, r[n[1]].z, r[n[2]].z, r[n[3]].z, i);
    return t;
});

THREE.AnimationHandler = {
    LINEAR: 0,
    CATMULLROM: 1,
    CATMULLROM_FORWARD: 2,
    add: function() {
        console.warn("THREE.AnimationHandler.add() has been deprecated.");
    },
    get: function() {
        console.warn("THREE.AnimationHandler.get() has been deprecated.");
    },
    remove: function() {
        console.warn("THREE.AnimationHandler.remove() has been deprecated.");
    },
    animations: [],
    init: function(e) {
        if (!0 !== e.initialized) {
            for (var t = 0; t < e.hierarchy.length; t++) {
                for (var n = 0; n < e.hierarchy[t].keys.length; n++) if (0 > e.hierarchy[t].keys[n].time && (e.hierarchy[t].keys[n].time = 0), 
                void 0 !== e.hierarchy[t].keys[n].rot && !(e.hierarchy[t].keys[n].rot instanceof THREE.Quaternion)) {
                    var r = e.hierarchy[t].keys[n].rot;
                    e.hierarchy[t].keys[n].rot = new THREE.Quaternion().fromArray(r);
                }
                if (e.hierarchy[t].keys.length && void 0 !== e.hierarchy[t].keys[0].morphTargets) {
                    r = {};
                    for (n = 0; n < e.hierarchy[t].keys.length; n++) for (var i = 0; i < e.hierarchy[t].keys[n].morphTargets.length; i++) {
                        var o = e.hierarchy[t].keys[n].morphTargets[i];
                        r[o] = -1;
                    }
                    e.hierarchy[t].usedMorphTargets = r;
                    for (n = 0; n < e.hierarchy[t].keys.length; n++) {
                        var a = {};
                        for (o in r) {
                            for (i = 0; i < e.hierarchy[t].keys[n].morphTargets.length; i++) if (e.hierarchy[t].keys[n].morphTargets[i] === o) {
                                a[o] = e.hierarchy[t].keys[n].morphTargetsInfluences[i];
                                break;
                            }
                            i === e.hierarchy[t].keys[n].morphTargets.length && (a[o] = 0);
                        }
                        e.hierarchy[t].keys[n].morphTargetsInfluences = a;
                    }
                }
                for (n = 1; n < e.hierarchy[t].keys.length; n++) e.hierarchy[t].keys[n].time === e.hierarchy[t].keys[n - 1].time && (e.hierarchy[t].keys.splice(n, 1), 
                n--);
                for (n = 0; n < e.hierarchy[t].keys.length; n++) e.hierarchy[t].keys[n].index = n;
            }
            e.initialized = !0;
            return e;
        }
    },
    parse: function(e) {
        var t = function(e, n) {
            n.push(e);
            for (var r = 0; r < e.children.length; r++) t(e.children[r], n);
        }, n = [];
        if (e instanceof THREE.SkinnedMesh) for (var r = 0; r < e.skeleton.bones.length; r++) n.push(e.skeleton.bones[r]); else t(e, n);
        return n;
    },
    play: function(e) {
        -1 === this.animations.indexOf(e) && this.animations.push(e);
    },
    stop: function(e) {
        e = this.animations.indexOf(e);
        -1 !== e && this.animations.splice(e, 1);
    },
    update: function(e) {
        for (var t = 0; t < this.animations.length; t++) this.animations[t].update(e);
    }
};

THREE.Animation = function(e, t) {
    this.root = e;
    this.data = THREE.AnimationHandler.init(t);
    this.hierarchy = THREE.AnimationHandler.parse(e);
    this.currentTime = 0;
    this.timeScale = 1;
    this.isPlaying = !1;
    this.loop = !0;
    this.weight = 0;
    this.interpolationType = THREE.AnimationHandler.LINEAR;
};

THREE.Animation.prototype.keyTypes = [ "pos", "rot", "scl" ];

THREE.Animation.prototype.play = function(e, t) {
    this.currentTime = void 0 !== e ? e : 0;
    this.weight = void 0 !== t ? t : 1;
    this.isPlaying = !0;
    this.reset();
    THREE.AnimationHandler.play(this);
};

THREE.Animation.prototype.stop = function() {
    this.isPlaying = !1;
    THREE.AnimationHandler.stop(this);
};

THREE.Animation.prototype.reset = function() {
    for (var e = 0, t = this.hierarchy.length; e < t; e++) {
        var n = this.hierarchy[e];
        n.matrixAutoUpdate = !0;
        void 0 === n.animationCache && (n.animationCache = {});
        void 0 === n.animationCache[this.data.name] && (n.animationCache[this.data.name] = {}, 
        n.animationCache[this.data.name].prevKey = {
            pos: 0,
            rot: 0,
            scl: 0
        }, n.animationCache[this.data.name].nextKey = {
            pos: 0,
            rot: 0,
            scl: 0
        }, n.animationCache[this.data.name].originalMatrix = n.matrix);
        for (var n = n.animationCache[this.data.name], r = 0; 3 > r; r++) {
            for (var i = this.keyTypes[r], o = this.data.hierarchy[e].keys[0], a = this.getNextKeyWith(i, e, 1); a.time < this.currentTime && a.index > o.index; ) o = a, 
            a = this.getNextKeyWith(i, e, a.index + 1);
            n.prevKey[i] = o;
            n.nextKey[i] = a;
        }
    }
};

THREE.Animation.prototype.update = function() {
    var e = [], t = new THREE.Vector3(), n = new THREE.Vector3(), r = new THREE.Quaternion(), i = function(e, t) {
        var n = [], r = [], i, a, s, c, l, u;
        i = (e.length - 1) * t;
        a = Math.floor(i);
        i -= a;
        n[0] = 0 === a ? a : a - 1;
        n[1] = a;
        n[2] = a > e.length - 2 ? a : a + 1;
        n[3] = a > e.length - 3 ? a : a + 2;
        a = e[n[0]];
        c = e[n[1]];
        l = e[n[2]];
        u = e[n[3]];
        n = i * i;
        s = i * n;
        r[0] = o(a[0], c[0], l[0], u[0], i, n, s);
        r[1] = o(a[1], c[1], l[1], u[1], i, n, s);
        r[2] = o(a[2], c[2], l[2], u[2], i, n, s);
        return r;
    }, o = function(e, t, n, r, i, o, a) {
        e = .5 * (n - e);
        r = .5 * (r - t);
        return (2 * (t - n) + e + r) * a + (-3 * (t - n) - 2 * e - r) * o + e * i + t;
    };
    return function(o) {
        if (!1 !== this.isPlaying && (this.currentTime += o * this.timeScale, 0 !== this.weight)) {
            o = this.data.length;
            if (!0 === this.loop && this.currentTime > o) this.currentTime %= o, this.reset(); else if (!1 === this.loop && this.currentTime > o) {
                this.stop();
                return;
            }
            o = 0;
            for (var a = this.hierarchy.length; o < a; o++) for (var s = this.hierarchy[o], c = s.animationCache[this.data.name], l = 0; 3 > l; l++) {
                var u = this.keyTypes[l], h = c.prevKey[u], f = c.nextKey[u];
                if (f.time <= this.currentTime) {
                    h = this.data.hierarchy[o].keys[0];
                    for (f = this.getNextKeyWith(u, o, 1); f.time < this.currentTime && f.index > h.index; ) h = f, 
                    f = this.getNextKeyWith(u, o, f.index + 1);
                    c.prevKey[u] = h;
                    c.nextKey[u] = f;
                }
                s.matrixAutoUpdate = !0;
                s.matrixWorldNeedsUpdate = !0;
                var p = (this.currentTime - h.time) / (f.time - h.time), d = h[u], m = f[u];
                0 > p && (p = 0);
                1 < p && (p = 1);
                if ("pos" === u) if (this.interpolationType === THREE.AnimationHandler.LINEAR) n.x = d[0] + (m[0] - d[0]) * p, 
                n.y = d[1] + (m[1] - d[1]) * p, n.z = d[2] + (m[2] - d[2]) * p, s instanceof THREE.Bone ? (h = this.weight / (this.weight + s.accumulatedPosWeight), 
                s.position.lerp(n, h), s.accumulatedPosWeight += this.weight) : s.position.copy(n); else {
                    if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) e[0] = this.getPrevKeyWith("pos", o, h.index - 1).pos, 
                    e[1] = d, e[2] = m, e[3] = this.getNextKeyWith("pos", o, f.index + 1).pos, p = .33 * p + .33, 
                    f = i(e, p), h = 1, s instanceof THREE.Bone && (h = this.weight / (this.weight + s.accumulatedPosWeight), 
                    s.accumulatedPosWeight += this.weight), u = s.position, u.x += (f[0] - u.x) * h, 
                    u.y += (f[1] - u.y) * h, u.z += (f[2] - u.z) * h, this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD && (p = i(e, 1.01 * p), 
                    t.set(p[0], p[1], p[2]), t.sub(u), t.y = 0, t.normalize(), p = Math.atan2(t.x, t.z), 
                    s.rotation.set(0, p, 0));
                } else "rot" === u ? (THREE.Quaternion.slerp(d, m, r, p), s instanceof THREE.Bone ? 0 === s.accumulatedRotWeight ? (s.quaternion.copy(r), 
                s.accumulatedRotWeight = this.weight) : (h = this.weight / (this.weight + s.accumulatedRotWeight), 
                THREE.Quaternion.slerp(s.quaternion, r, s.quaternion, h), s.accumulatedRotWeight += this.weight) : s.quaternion.copy(r)) : "scl" === u && (n.x = d[0] + (m[0] - d[0]) * p, 
                n.y = d[1] + (m[1] - d[1]) * p, n.z = d[2] + (m[2] - d[2]) * p, s instanceof THREE.Bone ? (h = this.weight / (this.weight + s.accumulatedSclWeight), 
                s.scale.lerp(n, h), s.accumulatedSclWeight += this.weight) : s.scale.copy(n));
            }
            return !0;
        }
    };
}();

THREE.Animation.prototype.getNextKeyWith = function(e, t, n) {
    var r = this.data.hierarchy[t].keys;
    for (n = this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ? n < r.length - 1 ? n : r.length - 1 : n % r.length; n < r.length; n++) if (void 0 !== r[n][e]) return r[n];
    return this.data.hierarchy[t].keys[0];
};

THREE.Animation.prototype.getPrevKeyWith = function(e, t, n) {
    var r = this.data.hierarchy[t].keys;
    for (n = this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ? 0 < n ? n : 0 : 0 <= n ? n : n + r.length; 0 <= n; n--) if (void 0 !== r[n][e]) return r[n];
    return this.data.hierarchy[t].keys[r.length - 1];
};

THREE.KeyFrameAnimation = function(e) {
    this.root = e.node;
    this.data = THREE.AnimationHandler.init(e);
    this.hierarchy = THREE.AnimationHandler.parse(this.root);
    this.currentTime = 0;
    this.timeScale = .001;
    this.isPlaying = !1;
    this.loop = this.isPaused = !0;
    e = 0;
    for (var t = this.hierarchy.length; e < t; e++) {
        var n = this.data.hierarchy[e].sids, r = this.hierarchy[e];
        if (this.data.hierarchy[e].keys.length && n) {
            for (var i = 0; i < n.length; i++) {
                var o = n[i], a = this.getNextKeyWith(o, e, 0);
                a && a.apply(o);
            }
            r.matrixAutoUpdate = !1;
            this.data.hierarchy[e].node.updateMatrix();
            r.matrixWorldNeedsUpdate = !0;
        }
    }
};

THREE.KeyFrameAnimation.prototype.play = function(e) {
    this.currentTime = void 0 !== e ? e : 0;
    if (!1 === this.isPlaying) {
        this.isPlaying = !0;
        var t = this.hierarchy.length, n, r;
        for (e = 0; e < t; e++) n = this.hierarchy[e], r = this.data.hierarchy[e], void 0 === r.animationCache && (r.animationCache = {}, 
        r.animationCache.prevKey = null, r.animationCache.nextKey = null, r.animationCache.originalMatrix = n.matrix), 
        n = this.data.hierarchy[e].keys, n.length && (r.animationCache.prevKey = n[0], r.animationCache.nextKey = n[1], 
        this.startTime = Math.min(n[0].time, this.startTime), this.endTime = Math.max(n[n.length - 1].time, this.endTime));
        this.update(0);
    }
    this.isPaused = !1;
    THREE.AnimationHandler.play(this);
};

THREE.KeyFrameAnimation.prototype.stop = function() {
    this.isPaused = this.isPlaying = !1;
    THREE.AnimationHandler.stop(this);
    for (var e = 0; e < this.data.hierarchy.length; e++) {
        var t = this.hierarchy[e], n = this.data.hierarchy[e];
        if (void 0 !== n.animationCache) {
            var r = n.animationCache.originalMatrix;
            r.copy(t.matrix);
            t.matrix = r;
            delete n.animationCache;
        }
    }
};

THREE.KeyFrameAnimation.prototype.update = function(e) {
    if (!1 !== this.isPlaying) {
        this.currentTime += e * this.timeScale;
        e = this.data.length;
        !0 === this.loop && this.currentTime > e && (this.currentTime %= e);
        this.currentTime = Math.min(this.currentTime, e);
        e = 0;
        for (var t = this.hierarchy.length; e < t; e++) {
            var n = this.hierarchy[e], r = this.data.hierarchy[e], i = r.keys, r = r.animationCache;
            if (i.length) {
                var o = r.prevKey, a = r.nextKey;
                if (a.time <= this.currentTime) {
                    for (;a.time < this.currentTime && a.index > o.index; ) o = a, a = i[o.index + 1];
                    r.prevKey = o;
                    r.nextKey = a;
                }
                a.time >= this.currentTime ? o.interpolate(a, this.currentTime) : o.interpolate(a, a.time);
                this.data.hierarchy[e].node.updateMatrix();
                n.matrixWorldNeedsUpdate = !0;
            }
        }
    }
};

THREE.KeyFrameAnimation.prototype.getNextKeyWith = function(e, t, n) {
    t = this.data.hierarchy[t].keys;
    for (n %= t.length; n < t.length; n++) if (t[n].hasTarget(e)) return t[n];
    return t[0];
};

THREE.KeyFrameAnimation.prototype.getPrevKeyWith = function(e, t, n) {
    t = this.data.hierarchy[t].keys;
    for (n = 0 <= n ? n : n + t.length; 0 <= n; n--) if (t[n].hasTarget(e)) return t[n];
    return t[t.length - 1];
};

THREE.MorphAnimation = function(e) {
    this.mesh = e;
    this.frames = e.morphTargetInfluences.length;
    this.currentTime = 0;
    this.duration = 1e3;
    this.loop = !0;
    this.isPlaying = !1;
};

THREE.MorphAnimation.prototype = {
    play: function() {
        this.isPlaying = !0;
    },
    pause: function() {
        this.isPlaying = !1;
    },
    update: function() {
        var e = 0, t = 0;
        return function(n) {
            if (!1 !== this.isPlaying) {
                this.currentTime += n;
                !0 === this.loop && this.currentTime > this.duration && (this.currentTime %= this.duration);
                this.currentTime = Math.min(this.currentTime, this.duration);
                n = this.duration / this.frames;
                var r = Math.floor(this.currentTime / n);
                r != t && (this.mesh.morphTargetInfluences[e] = 0, this.mesh.morphTargetInfluences[t] = 1, 
                this.mesh.morphTargetInfluences[r] = 0, e = t, t = r);
                this.mesh.morphTargetInfluences[r] = this.currentTime % n / n;
                this.mesh.morphTargetInfluences[e] = 1 - this.mesh.morphTargetInfluences[r];
            }
        };
    }()
};

THREE.BoxGeometry = function(e, t, n, r, i, o) {
    function a(e, t, n, r, i, o, a, c) {
        var l, u = s.widthSegments, h = s.heightSegments, f = i / 2, p = o / 2, d = s.vertices.length;
        if ("x" === e && "y" === t || "y" === e && "x" === t) l = "z"; else if ("x" === e && "z" === t || "z" === e && "x" === t) l = "y", 
        h = s.depthSegments; else if ("z" === e && "y" === t || "y" === e && "z" === t) l = "x", 
        u = s.depthSegments;
        var m = u + 1, E = h + 1, v = i / u, g = o / h, y = new THREE.Vector3();
        y[l] = 0 < a ? 1 : -1;
        for (i = 0; i < E; i++) for (o = 0; o < m; o++) {
            var T = new THREE.Vector3();
            T[e] = (o * v - f) * n;
            T[t] = (i * g - p) * r;
            T[l] = a;
            s.vertices.push(T);
        }
        for (i = 0; i < h; i++) for (o = 0; o < u; o++) p = o + m * i, e = o + m * (i + 1), 
        t = o + 1 + m * (i + 1), n = o + 1 + m * i, r = new THREE.Vector2(o / u, 1 - i / h), 
        a = new THREE.Vector2(o / u, 1 - (i + 1) / h), l = new THREE.Vector2((o + 1) / u, 1 - (i + 1) / h), 
        f = new THREE.Vector2((o + 1) / u, 1 - i / h), p = new THREE.Face3(p + d, e + d, n + d), 
        p.normal.copy(y), p.vertexNormals.push(y.clone(), y.clone(), y.clone()), p.materialIndex = c, 
        s.faces.push(p), s.faceVertexUvs[0].push([ r, a, f ]), p = new THREE.Face3(e + d, t + d, n + d), 
        p.normal.copy(y), p.vertexNormals.push(y.clone(), y.clone(), y.clone()), p.materialIndex = c, 
        s.faces.push(p), s.faceVertexUvs[0].push([ a.clone(), l, f.clone() ]);
    }
    THREE.Geometry.call(this);
    this.parameters = {
        width: e,
        height: t,
        depth: n,
        widthSegments: r,
        heightSegments: i,
        depthSegments: o
    };
    this.widthSegments = r || 1;
    this.heightSegments = i || 1;
    this.depthSegments = o || 1;
    var s = this;
    r = e / 2;
    i = t / 2;
    o = n / 2;
    a("z", "y", -1, -1, n, t, r, 0);
    a("z", "y", 1, -1, n, t, -r, 1);
    a("x", "z", 1, 1, e, n, i, 2);
    a("x", "z", 1, -1, e, n, -i, 3);
    a("x", "y", 1, -1, e, t, o, 4);
    a("x", "y", -1, -1, e, t, -o, 5);
    this.mergeVertices();
};

THREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.CircleGeometry = function(e, t, n, r) {
    THREE.Geometry.call(this);
    this.parameters = {
        radius: e,
        segments: t,
        thetaStart: n,
        thetaLength: r
    };
    e = e || 50;
    t = void 0 !== t ? Math.max(3, t) : 8;
    n = void 0 !== n ? n : 0;
    r = void 0 !== r ? r : 2 * Math.PI;
    var i, o = [];
    i = new THREE.Vector3();
    var a = new THREE.Vector2(.5, .5);
    this.vertices.push(i);
    o.push(a);
    for (i = 0; i <= t; i++) {
        var s = new THREE.Vector3(), c = n + i / t * r;
        s.x = e * Math.cos(c);
        s.y = e * Math.sin(c);
        this.vertices.push(s);
        o.push(new THREE.Vector2((s.x / e + 1) / 2, (s.y / e + 1) / 2));
    }
    n = new THREE.Vector3(0, 0, 1);
    for (i = 1; i <= t; i++) this.faces.push(new THREE.Face3(i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ])), 
    this.faceVertexUvs[0].push([ o[i].clone(), o[i + 1].clone(), a.clone() ]);
    this.computeFaceNormals();
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), e);
};

THREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.CubeGeometry = function(e, t, n, r, i, o) {
    console.warn("THEE.CubeGeometry has been renamed to THREE.BoxGeometry.");
    return new THREE.BoxGeometry(e, t, n, r, i, o);
};

THREE.CylinderGeometry = function(e, t, n, r, i, o) {
    THREE.Geometry.call(this);
    this.parameters = {
        radiusTop: e,
        radiusBottom: t,
        height: n,
        radialSegments: r,
        heightSegments: i,
        openEnded: o
    };
    e = void 0 !== e ? e : 20;
    t = void 0 !== t ? t : 20;
    n = void 0 !== n ? n : 100;
    r = r || 8;
    i = i || 1;
    o = void 0 !== o ? o : !1;
    var a = n / 2, s, c, l = [], u = [];
    for (c = 0; c <= i; c++) {
        var h = [], f = [], p = c / i, d = p * (t - e) + e;
        for (s = 0; s <= r; s++) {
            var m = s / r, E = new THREE.Vector3();
            E.x = d * Math.sin(m * Math.PI * 2);
            E.y = -p * n + a;
            E.z = d * Math.cos(m * Math.PI * 2);
            this.vertices.push(E);
            h.push(this.vertices.length - 1);
            f.push(new THREE.Vector2(m, 1 - p));
        }
        l.push(h);
        u.push(f);
    }
    n = (t - e) / n;
    for (s = 0; s < r; s++) for (0 !== e ? (h = this.vertices[l[0][s]].clone(), f = this.vertices[l[0][s + 1]].clone()) : (h = this.vertices[l[1][s]].clone(), 
    f = this.vertices[l[1][s + 1]].clone()), h.setY(Math.sqrt(h.x * h.x + h.z * h.z) * n).normalize(), 
    f.setY(Math.sqrt(f.x * f.x + f.z * f.z) * n).normalize(), c = 0; c < i; c++) {
        var p = l[c][s], d = l[c + 1][s], m = l[c + 1][s + 1], E = l[c][s + 1], v = h.clone(), g = h.clone(), y = f.clone(), T = f.clone(), x = u[c][s].clone(), R = u[c + 1][s].clone(), _ = u[c + 1][s + 1].clone(), b = u[c][s + 1].clone();
        this.faces.push(new THREE.Face3(p, d, E, [ v, g, T ]));
        this.faceVertexUvs[0].push([ x, R, b ]);
        this.faces.push(new THREE.Face3(d, m, E, [ g.clone(), y, T.clone() ]));
        this.faceVertexUvs[0].push([ R.clone(), _, b.clone() ]);
    }
    if (!1 === o && 0 < e) for (this.vertices.push(new THREE.Vector3(0, a, 0)), s = 0; s < r; s++) p = l[0][s], 
    d = l[0][s + 1], m = this.vertices.length - 1, v = new THREE.Vector3(0, 1, 0), g = new THREE.Vector3(0, 1, 0), 
    y = new THREE.Vector3(0, 1, 0), x = u[0][s].clone(), R = u[0][s + 1].clone(), _ = new THREE.Vector2(R.x, 0), 
    this.faces.push(new THREE.Face3(p, d, m, [ v, g, y ])), this.faceVertexUvs[0].push([ x, R, _ ]);
    if (!1 === o && 0 < t) for (this.vertices.push(new THREE.Vector3(0, -a, 0)), s = 0; s < r; s++) p = l[c][s + 1], 
    d = l[c][s], m = this.vertices.length - 1, v = new THREE.Vector3(0, -1, 0), g = new THREE.Vector3(0, -1, 0), 
    y = new THREE.Vector3(0, -1, 0), x = u[c][s + 1].clone(), R = u[c][s].clone(), _ = new THREE.Vector2(R.x, 1), 
    this.faces.push(new THREE.Face3(p, d, m, [ v, g, y ])), this.faceVertexUvs[0].push([ x, R, _ ]);
    this.computeFaceNormals();
};

THREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.ExtrudeGeometry = function(e, t) {
    "undefined" !== typeof e && (THREE.Geometry.call(this), e = e instanceof Array ? e : [ e ], 
    this.addShapeList(e, t), this.computeFaceNormals());
};

THREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.ExtrudeGeometry.prototype.addShapeList = function(e, t) {
    for (var n = e.length, r = 0; r < n; r++) this.addShape(e[r], t);
};

THREE.ExtrudeGeometry.prototype.addShape = function(e, t) {
    function n(e, t, n) {
        t || console.log("die");
        return t.clone().multiplyScalar(n).add(e);
    }
    function r(e, t, n) {
        var r = THREE.Math.sign, i = 1, i = e.x - t.x, o = e.y - t.y, a = n.x - e.x, s = n.y - e.y, c = i * i + o * o;
        if (1e-10 < Math.abs(i * s - o * a)) {
            var l = Math.sqrt(c), r = Math.sqrt(a * a + s * s), c = t.x - o / l;
            t = t.y + i / l;
            a = ((n.x - s / r - c) * s - (n.y + a / r - t) * a) / (i * s - o * a);
            n = c + i * a - e.x;
            e = t + o * a - e.y;
            i = n * n + e * e;
            if (2 >= i) return new THREE.Vector2(n, e);
            i = Math.sqrt(i / 2);
        } else e = !1, 1e-10 < i ? 1e-10 < a && (e = !0) : -1e-10 > i ? -1e-10 > a && (e = !0) : r(o) == r(s) && (e = !0), 
        e ? (n = -o, e = i, i = Math.sqrt(c)) : (n = i, e = o, i = Math.sqrt(c / 2));
        return new THREE.Vector2(n / i, e / i);
    }
    function i(n, r) {
        var i, o;
        for (B = n.length; 0 <= --B; ) {
            i = B;
            o = B - 1;
            0 > o && (o = n.length - 1);
            for (var a = 0, s = p + 2 * u, a = 0; a < s; a++) {
                var c = V * a, l = V * (a + 1), h = r + i + c, c = r + o + c, f = r + o + l, l = r + i + l, d = n, m = a, E = s, v = i, T = o, h = h + M, c = c + M, f = f + M, l = l + M;
                S.faces.push(new THREE.Face3(h, c, l, null, null, g));
                S.faces.push(new THREE.Face3(c, f, l, null, null, g));
                h = y.generateSideWallUV(S, e, d, t, h, c, f, l, m, E, v, T);
                S.faceVertexUvs[0].push([ h[0], h[1], h[3] ]);
                S.faceVertexUvs[0].push([ h[1], h[2], h[3] ]);
            }
        }
    }
    function o(e, t, n) {
        S.vertices.push(new THREE.Vector3(e, t, n));
    }
    function a(n, r, i, o) {
        n += M;
        r += M;
        i += M;
        S.faces.push(new THREE.Face3(n, r, i, null, null, v));
        n = o ? y.generateBottomUV(S, e, t, n, r, i) : y.generateTopUV(S, e, t, n, r, i);
        S.faceVertexUvs[0].push(n);
    }
    var s = void 0 !== t.amount ? t.amount : 100, c = void 0 !== t.bevelThickness ? t.bevelThickness : 6, l = void 0 !== t.bevelSize ? t.bevelSize : c - 2, u = void 0 !== t.bevelSegments ? t.bevelSegments : 3, h = void 0 !== t.bevelEnabled ? t.bevelEnabled : !0, f = void 0 !== t.curveSegments ? t.curveSegments : 12, p = void 0 !== t.steps ? t.steps : 1, d = t.extrudePath, m, E = !1, v = t.material, g = t.extrudeMaterial, y = void 0 !== t.UVGenerator ? t.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator, T, x, R, _;
    d && (m = d.getSpacedPoints(p), E = !0, h = !1, T = void 0 !== t.frames ? t.frames : new THREE.TubeGeometry.FrenetFrames(d, p, !1), 
    x = new THREE.Vector3(), R = new THREE.Vector3(), _ = new THREE.Vector3());
    h || (l = c = u = 0);
    var b, w, H, S = this, M = this.vertices.length, d = e.extractPoints(f), f = d.shape, C = d.holes;
    if (d = !THREE.Shape.Utils.isClockWise(f)) {
        f = f.reverse();
        w = 0;
        for (H = C.length; w < H; w++) b = C[w], THREE.Shape.Utils.isClockWise(b) && (C[w] = b.reverse());
        d = !1;
    }
    var A = THREE.Shape.Utils.triangulateShape(f, C), P = f;
    w = 0;
    for (H = C.length; w < H; w++) b = C[w], f = f.concat(b);
    var k, L, F, D, U, V = f.length, O, z = A.length, d = [], B = 0;
    F = P.length;
    k = F - 1;
    for (L = B + 1; B < F; B++, k++, L++) k === F && (k = 0), L === F && (L = 0), d[B] = r(P[B], P[k], P[L]);
    var j = [], $, N = d.concat();
    w = 0;
    for (H = C.length; w < H; w++) {
        b = C[w];
        $ = [];
        B = 0;
        F = b.length;
        k = F - 1;
        for (L = B + 1; B < F; B++, k++, L++) k === F && (k = 0), L === F && (L = 0), $[B] = r(b[B], b[k], b[L]);
        j.push($);
        N = N.concat($);
    }
    for (k = 0; k < u; k++) {
        F = k / u;
        D = c * (1 - F);
        L = l * Math.sin(F * Math.PI / 2);
        B = 0;
        for (F = P.length; B < F; B++) U = n(P[B], d[B], L), o(U.x, U.y, -D);
        w = 0;
        for (H = C.length; w < H; w++) for (b = C[w], $ = j[w], B = 0, F = b.length; B < F; B++) U = n(b[B], $[B], L), 
        o(U.x, U.y, -D);
    }
    L = l;
    for (B = 0; B < V; B++) U = h ? n(f[B], N[B], L) : f[B], E ? (R.copy(T.normals[0]).multiplyScalar(U.x), 
    x.copy(T.binormals[0]).multiplyScalar(U.y), _.copy(m[0]).add(R).add(x), o(_.x, _.y, _.z)) : o(U.x, U.y, 0);
    for (F = 1; F <= p; F++) for (B = 0; B < V; B++) U = h ? n(f[B], N[B], L) : f[B], 
    E ? (R.copy(T.normals[F]).multiplyScalar(U.x), x.copy(T.binormals[F]).multiplyScalar(U.y), 
    _.copy(m[F]).add(R).add(x), o(_.x, _.y, _.z)) : o(U.x, U.y, s / p * F);
    for (k = u - 1; 0 <= k; k--) {
        F = k / u;
        D = c * (1 - F);
        L = l * Math.sin(F * Math.PI / 2);
        B = 0;
        for (F = P.length; B < F; B++) U = n(P[B], d[B], L), o(U.x, U.y, s + D);
        w = 0;
        for (H = C.length; w < H; w++) for (b = C[w], $ = j[w], B = 0, F = b.length; B < F; B++) U = n(b[B], $[B], L), 
        E ? o(U.x, U.y + m[p - 1].y, m[p - 1].x + D) : o(U.x, U.y, s + D);
    }
    (function() {
        if (h) {
            var e;
            e = 0 * V;
            for (B = 0; B < z; B++) O = A[B], a(O[2] + e, O[1] + e, O[0] + e, !0);
            e = p + 2 * u;
            e *= V;
            for (B = 0; B < z; B++) O = A[B], a(O[0] + e, O[1] + e, O[2] + e, !1);
        } else {
            for (B = 0; B < z; B++) O = A[B], a(O[2], O[1], O[0], !0);
            for (B = 0; B < z; B++) O = A[B], a(O[0] + V * p, O[1] + V * p, O[2] + V * p, !1);
        }
    })();
    (function() {
        var e = 0;
        i(P, e);
        e += P.length;
        w = 0;
        for (H = C.length; w < H; w++) b = C[w], i(b, e), e += b.length;
    })();
};

THREE.ExtrudeGeometry.WorldUVGenerator = {
    generateTopUV: function(e, t, n, r, i, o) {
        t = e.vertices[i].x;
        i = e.vertices[i].y;
        n = e.vertices[o].x;
        o = e.vertices[o].y;
        return [ new THREE.Vector2(e.vertices[r].x, e.vertices[r].y), new THREE.Vector2(t, i), new THREE.Vector2(n, o) ];
    },
    generateBottomUV: function(e, t, n, r, i, o) {
        return this.generateTopUV(e, t, n, r, i, o);
    },
    generateSideWallUV: function(e, t, n, r, i, o, a, s, c, l, u, h) {
        t = e.vertices[i].x;
        n = e.vertices[i].y;
        i = e.vertices[i].z;
        r = e.vertices[o].x;
        c = e.vertices[o].y;
        o = e.vertices[o].z;
        l = e.vertices[a].x;
        u = e.vertices[a].y;
        a = e.vertices[a].z;
        h = e.vertices[s].x;
        var f = e.vertices[s].y;
        e = e.vertices[s].z;
        return .01 > Math.abs(n - c) ? [ new THREE.Vector2(t, 1 - i), new THREE.Vector2(r, 1 - o), new THREE.Vector2(l, 1 - a), new THREE.Vector2(h, 1 - e) ] : [ new THREE.Vector2(n, 1 - i), new THREE.Vector2(c, 1 - o), new THREE.Vector2(u, 1 - a), new THREE.Vector2(f, 1 - e) ];
    }
};

THREE.ExtrudeGeometry.__v1 = new THREE.Vector2();

THREE.ExtrudeGeometry.__v2 = new THREE.Vector2();

THREE.ExtrudeGeometry.__v3 = new THREE.Vector2();

THREE.ExtrudeGeometry.__v4 = new THREE.Vector2();

THREE.ExtrudeGeometry.__v5 = new THREE.Vector2();

THREE.ExtrudeGeometry.__v6 = new THREE.Vector2();

THREE.ShapeGeometry = function(e, t) {
    THREE.Geometry.call(this);
    !1 === e instanceof Array && (e = [ e ]);
    this.addShapeList(e, t);
    this.computeFaceNormals();
};

THREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.ShapeGeometry.prototype.addShapeList = function(e, t) {
    for (var n = 0, r = e.length; n < r; n++) this.addShape(e[n], t);
    return this;
};

THREE.ShapeGeometry.prototype.addShape = function(e, t) {
    void 0 === t && (t = {});
    var n = t.material, r = void 0 === t.UVGenerator ? THREE.ExtrudeGeometry.WorldUVGenerator : t.UVGenerator, i, o, a, s = this.vertices.length;
    i = e.extractPoints(void 0 !== t.curveSegments ? t.curveSegments : 12);
    var c = i.shape, l = i.holes;
    if (!THREE.Shape.Utils.isClockWise(c)) for (c = c.reverse(), i = 0, o = l.length; i < o; i++) a = l[i], 
    THREE.Shape.Utils.isClockWise(a) && (l[i] = a.reverse());
    var u = THREE.Shape.Utils.triangulateShape(c, l);
    i = 0;
    for (o = l.length; i < o; i++) a = l[i], c = c.concat(a);
    l = c.length;
    o = u.length;
    for (i = 0; i < l; i++) a = c[i], this.vertices.push(new THREE.Vector3(a.x, a.y, 0));
    for (i = 0; i < o; i++) l = u[i], c = l[0] + s, a = l[1] + s, l = l[2] + s, this.faces.push(new THREE.Face3(c, a, l, null, null, n)), 
    this.faceVertexUvs[0].push(r.generateBottomUV(this, e, t, c, a, l));
};

THREE.LatheGeometry = function(e, t, n, r) {
    THREE.Geometry.call(this);
    t = t || 12;
    n = n || 0;
    r = r || 2 * Math.PI;
    for (var i = 1 / (e.length - 1), o = 1 / t, a = 0, s = t; a <= s; a++) for (var c = n + a * o * r, l = Math.cos(c), u = Math.sin(c), c = 0, h = e.length; c < h; c++) {
        var f = e[c], p = new THREE.Vector3();
        p.x = l * f.x - u * f.y;
        p.y = u * f.x + l * f.y;
        p.z = f.z;
        this.vertices.push(p);
    }
    n = e.length;
    a = 0;
    for (s = t; a < s; a++) for (c = 0, h = e.length - 1; c < h; c++) {
        t = u = c + n * a;
        r = u + n;
        var l = u + 1 + n, u = u + 1, f = a * o, p = c * i, d = f + o, m = p + i;
        this.faces.push(new THREE.Face3(t, r, u));
        this.faceVertexUvs[0].push([ new THREE.Vector2(f, p), new THREE.Vector2(d, p), new THREE.Vector2(f, m) ]);
        this.faces.push(new THREE.Face3(r, l, u));
        this.faceVertexUvs[0].push([ new THREE.Vector2(d, p), new THREE.Vector2(d, m), new THREE.Vector2(f, m) ]);
    }
    this.mergeVertices();
    this.computeFaceNormals();
    this.computeVertexNormals();
};

THREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.PlaneGeometry = function(e, t, n, r) {
    THREE.Geometry.call(this);
    this.parameters = {
        width: e,
        height: t,
        widthSegments: n,
        heightSegments: r
    };
    var i = e / 2, o = t / 2;
    n = n || 1;
    r = r || 1;
    var a = n + 1, s = r + 1, c = e / n, l = t / r, u = new THREE.Vector3(0, 0, 1);
    for (e = 0; e < s; e++) {
        var h = e * l - o;
        for (t = 0; t < a; t++) this.vertices.push(new THREE.Vector3(t * c - i, -h, 0));
    }
    for (e = 0; e < r; e++) for (t = 0; t < n; t++) {
        var f = t + a * e, i = t + a * (e + 1), o = t + 1 + a * (e + 1), s = t + 1 + a * e, c = new THREE.Vector2(t / n, 1 - e / r), l = new THREE.Vector2(t / n, 1 - (e + 1) / r), h = new THREE.Vector2((t + 1) / n, 1 - (e + 1) / r), p = new THREE.Vector2((t + 1) / n, 1 - e / r), f = new THREE.Face3(f, i, s);
        f.normal.copy(u);
        f.vertexNormals.push(u.clone(), u.clone(), u.clone());
        this.faces.push(f);
        this.faceVertexUvs[0].push([ c, l, p ]);
        f = new THREE.Face3(i, o, s);
        f.normal.copy(u);
        f.vertexNormals.push(u.clone(), u.clone(), u.clone());
        this.faces.push(f);
        this.faceVertexUvs[0].push([ l.clone(), h, p.clone() ]);
    }
};

THREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.RingGeometry = function(e, t, n, r, i, o) {
    THREE.Geometry.call(this);
    e = e || 0;
    t = t || 50;
    i = void 0 !== i ? i : 0;
    o = void 0 !== o ? o : 2 * Math.PI;
    n = void 0 !== n ? Math.max(3, n) : 8;
    r = void 0 !== r ? Math.max(1, r) : 8;
    var a, s = [], c = e, l = (t - e) / r;
    for (e = 0; e < r + 1; e++) {
        for (a = 0; a < n + 1; a++) {
            var u = new THREE.Vector3(), h = i + a / n * o;
            u.x = c * Math.cos(h);
            u.y = c * Math.sin(h);
            this.vertices.push(u);
            s.push(new THREE.Vector2((u.x / t + 1) / 2, (u.y / t + 1) / 2));
        }
        c += l;
    }
    t = new THREE.Vector3(0, 0, 1);
    for (e = 0; e < r; e++) for (i = e * (n + 1), a = 0; a < n; a++) o = h = a + i, 
    l = h + n + 1, u = h + n + 2, this.faces.push(new THREE.Face3(o, l, u, [ t.clone(), t.clone(), t.clone() ])), 
    this.faceVertexUvs[0].push([ s[o].clone(), s[l].clone(), s[u].clone() ]), o = h, 
    l = h + n + 2, u = h + 1, this.faces.push(new THREE.Face3(o, l, u, [ t.clone(), t.clone(), t.clone() ])), 
    this.faceVertexUvs[0].push([ s[o].clone(), s[l].clone(), s[u].clone() ]);
    this.computeFaceNormals();
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), c);
};

THREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.SphereGeometry = function(e, t, n, r, i, o, a) {
    THREE.Geometry.call(this);
    this.parameters = {
        radius: e,
        widthSegments: t,
        heightSegments: n,
        phiStart: r,
        phiLength: i,
        thetaStart: o,
        thetaLength: a
    };
    e = e || 50;
    t = Math.max(3, Math.floor(t) || 8);
    n = Math.max(2, Math.floor(n) || 6);
    r = void 0 !== r ? r : 0;
    i = void 0 !== i ? i : 2 * Math.PI;
    o = void 0 !== o ? o : 0;
    a = void 0 !== a ? a : Math.PI;
    var s, c, l = [], u = [];
    for (c = 0; c <= n; c++) {
        var h = [], f = [];
        for (s = 0; s <= t; s++) {
            var p = s / t, d = c / n, m = new THREE.Vector3();
            m.x = -e * Math.cos(r + p * i) * Math.sin(o + d * a);
            m.y = e * Math.cos(o + d * a);
            m.z = e * Math.sin(r + p * i) * Math.sin(o + d * a);
            this.vertices.push(m);
            h.push(this.vertices.length - 1);
            f.push(new THREE.Vector2(p, 1 - d));
        }
        l.push(h);
        u.push(f);
    }
    for (c = 0; c < n; c++) for (s = 0; s < t; s++) {
        r = l[c][s + 1];
        i = l[c][s];
        o = l[c + 1][s];
        a = l[c + 1][s + 1];
        var h = this.vertices[r].clone().normalize(), f = this.vertices[i].clone().normalize(), p = this.vertices[o].clone().normalize(), d = this.vertices[a].clone().normalize(), m = u[c][s + 1].clone(), E = u[c][s].clone(), v = u[c + 1][s].clone(), g = u[c + 1][s + 1].clone();
        Math.abs(this.vertices[r].y) === e ? (m.x = (m.x + E.x) / 2, this.faces.push(new THREE.Face3(r, o, a, [ h, p, d ])), 
        this.faceVertexUvs[0].push([ m, v, g ])) : Math.abs(this.vertices[o].y) === e ? (v.x = (v.x + g.x) / 2, 
        this.faces.push(new THREE.Face3(r, i, o, [ h, f, p ])), this.faceVertexUvs[0].push([ m, E, v ])) : (this.faces.push(new THREE.Face3(r, i, a, [ h, f, d ])), 
        this.faceVertexUvs[0].push([ m, E, g ]), this.faces.push(new THREE.Face3(i, o, a, [ f.clone(), p, d.clone() ])), 
        this.faceVertexUvs[0].push([ E.clone(), v, g.clone() ]));
    }
    this.computeFaceNormals();
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), e);
};

THREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.TextGeometry = function(e, t) {
    t = t || {};
    var n = THREE.FontUtils.generateShapes(e, t);
    t.amount = void 0 !== t.height ? t.height : 50;
    void 0 === t.bevelThickness && (t.bevelThickness = 10);
    void 0 === t.bevelSize && (t.bevelSize = 8);
    void 0 === t.bevelEnabled && (t.bevelEnabled = !1);
    THREE.ExtrudeGeometry.call(this, n, t);
};

THREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype);

THREE.TorusGeometry = function(e, t, n, r, i) {
    THREE.Geometry.call(this);
    this.parameters = {
        radius: e,
        tube: t,
        radialSegments: n,
        tubularSegments: r,
        arc: i
    };
    e = e || 100;
    t = t || 40;
    n = n || 8;
    r = r || 6;
    i = i || 2 * Math.PI;
    for (var o = new THREE.Vector3(), a = [], s = [], c = 0; c <= n; c++) for (var l = 0; l <= r; l++) {
        var u = l / r * i, h = c / n * Math.PI * 2;
        o.x = e * Math.cos(u);
        o.y = e * Math.sin(u);
        var f = new THREE.Vector3();
        f.x = (e + t * Math.cos(h)) * Math.cos(u);
        f.y = (e + t * Math.cos(h)) * Math.sin(u);
        f.z = t * Math.sin(h);
        this.vertices.push(f);
        a.push(new THREE.Vector2(l / r, c / n));
        s.push(f.clone().sub(o).normalize());
    }
    for (c = 1; c <= n; c++) for (l = 1; l <= r; l++) e = (r + 1) * c + l - 1, t = (r + 1) * (c - 1) + l - 1, 
    i = (r + 1) * (c - 1) + l, o = (r + 1) * c + l, u = new THREE.Face3(e, t, o, [ s[e].clone(), s[t].clone(), s[o].clone() ]), 
    this.faces.push(u), this.faceVertexUvs[0].push([ a[e].clone(), a[t].clone(), a[o].clone() ]), 
    u = new THREE.Face3(t, i, o, [ s[t].clone(), s[i].clone(), s[o].clone() ]), this.faces.push(u), 
    this.faceVertexUvs[0].push([ a[t].clone(), a[i].clone(), a[o].clone() ]);
    this.computeFaceNormals();
};

THREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.TorusKnotGeometry = function(e, t, n, r, i, o, a) {
    function s(e, t, n, r, i) {
        var o = Math.cos(e), a = Math.sin(e);
        e *= t / n;
        t = Math.cos(e);
        o *= r * (2 + t) * .5;
        a = r * (2 + t) * a * .5;
        r = i * r * Math.sin(e) * .5;
        return new THREE.Vector3(o, a, r);
    }
    THREE.Geometry.call(this);
    this.parameters = {
        radius: e,
        tube: t,
        radialSegments: n,
        tubularSegments: r,
        p: i,
        q: o,
        heightScale: a
    };
    e = e || 100;
    t = t || 40;
    n = n || 64;
    r = r || 8;
    i = i || 2;
    o = o || 3;
    a = a || 1;
    for (var c = Array(n), l = new THREE.Vector3(), u = new THREE.Vector3(), h = new THREE.Vector3(), f = 0; f < n; ++f) {
        c[f] = Array(r);
        var p = f / n * 2 * i * Math.PI, d = s(p, o, i, e, a), p = s(p + .01, o, i, e, a);
        l.subVectors(p, d);
        u.addVectors(p, d);
        h.crossVectors(l, u);
        u.crossVectors(h, l);
        h.normalize();
        u.normalize();
        for (p = 0; p < r; ++p) {
            var m = p / r * 2 * Math.PI, E = -t * Math.cos(m), m = t * Math.sin(m), v = new THREE.Vector3();
            v.x = d.x + E * u.x + m * h.x;
            v.y = d.y + E * u.y + m * h.y;
            v.z = d.z + E * u.z + m * h.z;
            c[f][p] = this.vertices.push(v) - 1;
        }
    }
    for (f = 0; f < n; ++f) for (p = 0; p < r; ++p) i = (f + 1) % n, o = (p + 1) % r, 
    e = c[f][p], t = c[i][p], i = c[i][o], o = c[f][o], a = new THREE.Vector2(f / n, p / r), 
    l = new THREE.Vector2((f + 1) / n, p / r), u = new THREE.Vector2((f + 1) / n, (p + 1) / r), 
    h = new THREE.Vector2(f / n, (p + 1) / r), this.faces.push(new THREE.Face3(e, t, o)), 
    this.faceVertexUvs[0].push([ a, l, h ]), this.faces.push(new THREE.Face3(t, i, o)), 
    this.faceVertexUvs[0].push([ l.clone(), u, h.clone() ]);
    this.computeFaceNormals();
    this.computeVertexNormals();
};

THREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.TubeGeometry = function(e, t, n, r, i) {
    THREE.Geometry.call(this);
    this.parameters = {
        path: e,
        segments: t,
        radius: n,
        radialSegments: r,
        closed: i
    };
    t = t || 64;
    n = n || 1;
    r = r || 8;
    i = i || !1;
    var o = [], a, s, c = t + 1, l, u, h, f, p = new THREE.Vector3(), d, m, E;
    d = new THREE.TubeGeometry.FrenetFrames(e, t, i);
    m = d.normals;
    E = d.binormals;
    this.tangents = d.tangents;
    this.normals = m;
    this.binormals = E;
    for (d = 0; d < c; d++) for (o[d] = [], l = d / (c - 1), f = e.getPointAt(l), a = m[d], 
    s = E[d], l = 0; l < r; l++) u = l / r * 2 * Math.PI, h = -n * Math.cos(u), u = n * Math.sin(u), 
    p.copy(f), p.x += h * a.x + u * s.x, p.y += h * a.y + u * s.y, p.z += h * a.z + u * s.z, 
    o[d][l] = this.vertices.push(new THREE.Vector3(p.x, p.y, p.z)) - 1;
    for (d = 0; d < t; d++) for (l = 0; l < r; l++) c = i ? (d + 1) % t : d + 1, p = (l + 1) % r, 
    e = o[d][l], n = o[c][l], c = o[c][p], p = o[d][p], m = new THREE.Vector2(d / t, l / r), 
    E = new THREE.Vector2((d + 1) / t, l / r), a = new THREE.Vector2((d + 1) / t, (l + 1) / r), 
    s = new THREE.Vector2(d / t, (l + 1) / r), this.faces.push(new THREE.Face3(e, n, p)), 
    this.faceVertexUvs[0].push([ m, E, s ]), this.faces.push(new THREE.Face3(n, c, p)), 
    this.faceVertexUvs[0].push([ E.clone(), a, s.clone() ]);
    this.computeFaceNormals();
    this.computeVertexNormals();
};

THREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.TubeGeometry.FrenetFrames = function(e, t, n) {
    new THREE.Vector3();
    var r = new THREE.Vector3();
    new THREE.Vector3();
    var i = [], o = [], a = [], s = new THREE.Vector3(), c = new THREE.Matrix4();
    t += 1;
    var l, u, h;
    this.tangents = i;
    this.normals = o;
    this.binormals = a;
    for (l = 0; l < t; l++) u = l / (t - 1), i[l] = e.getTangentAt(u), i[l].normalize();
    o[0] = new THREE.Vector3();
    a[0] = new THREE.Vector3();
    e = Number.MAX_VALUE;
    l = Math.abs(i[0].x);
    u = Math.abs(i[0].y);
    h = Math.abs(i[0].z);
    l <= e && (e = l, r.set(1, 0, 0));
    u <= e && (e = u, r.set(0, 1, 0));
    h <= e && r.set(0, 0, 1);
    s.crossVectors(i[0], r).normalize();
    o[0].crossVectors(i[0], s);
    a[0].crossVectors(i[0], o[0]);
    for (l = 1; l < t; l++) o[l] = o[l - 1].clone(), a[l] = a[l - 1].clone(), s.crossVectors(i[l - 1], i[l]), 
    1e-4 < s.length() && (s.normalize(), r = Math.acos(THREE.Math.clamp(i[l - 1].dot(i[l]), -1, 1)), 
    o[l].applyMatrix4(c.makeRotationAxis(s, r))), a[l].crossVectors(i[l], o[l]);
    if (n) for (r = Math.acos(THREE.Math.clamp(o[0].dot(o[t - 1]), -1, 1)), r /= t - 1, 
    0 < i[0].dot(s.crossVectors(o[0], o[t - 1])) && (r = -r), l = 1; l < t; l++) o[l].applyMatrix4(c.makeRotationAxis(i[l], r * l)), 
    a[l].crossVectors(i[l], o[l]);
};

THREE.PolyhedronGeometry = function(e, t, n, r) {
    function i(e) {
        var t = e.normalize().clone();
        t.index = c.vertices.push(t) - 1;
        var n = Math.atan2(e.z, -e.x) / 2 / Math.PI + .5;
        e = Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z)) / Math.PI + .5;
        t.uv = new THREE.Vector2(n, 1 - e);
        return t;
    }
    function o(e, t, n) {
        var r = new THREE.Face3(e.index, t.index, n.index, [ e.clone(), t.clone(), n.clone() ]);
        c.faces.push(r);
        E.copy(e).add(t).add(n).divideScalar(3);
        r = Math.atan2(E.z, -E.x);
        c.faceVertexUvs[0].push([ s(e.uv, e, r), s(t.uv, t, r), s(n.uv, n, r) ]);
    }
    function a(e, t) {
        var n = Math.pow(2, t);
        Math.pow(4, t);
        for (var r = i(c.vertices[e.a]), a = i(c.vertices[e.b]), s = i(c.vertices[e.c]), l = [], u = 0; u <= n; u++) {
            l[u] = [];
            for (var h = i(r.clone().lerp(s, u / n)), f = i(a.clone().lerp(s, u / n)), p = n - u, d = 0; d <= p; d++) l[u][d] = 0 == d && u == n ? h : i(h.clone().lerp(f, d / p));
        }
        for (u = 0; u < n; u++) for (d = 0; d < 2 * (n - u) - 1; d++) r = Math.floor(d / 2), 
        0 == d % 2 ? o(l[u][r + 1], l[u + 1][r], l[u][r]) : o(l[u][r + 1], l[u + 1][r + 1], l[u + 1][r]);
    }
    function s(e, t, n) {
        0 > n && 1 === e.x && (e = new THREE.Vector2(e.x - 1, e.y));
        0 === t.x && 0 === t.z && (e = new THREE.Vector2(n / 2 / Math.PI + .5, e.y));
        return e.clone();
    }
    THREE.Geometry.call(this);
    n = n || 1;
    r = r || 0;
    for (var c = this, l = 0, u = e.length; l < u; l += 3) i(new THREE.Vector3(e[l], e[l + 1], e[l + 2]));
    e = this.vertices;
    for (var h = [], f = l = 0, u = t.length; l < u; l += 3, f++) {
        var p = e[t[l]], d = e[t[l + 1]], m = e[t[l + 2]];
        h[f] = new THREE.Face3(p.index, d.index, m.index, [ p.clone(), d.clone(), m.clone() ]);
    }
    for (var E = new THREE.Vector3(), l = 0, u = h.length; l < u; l++) a(h[l], r);
    l = 0;
    for (u = this.faceVertexUvs[0].length; l < u; l++) t = this.faceVertexUvs[0][l], 
    r = t[0].x, e = t[1].x, h = t[2].x, f = Math.max(r, Math.max(e, h)), p = Math.min(r, Math.min(e, h)), 
    .9 < f && .1 > p && (.2 > r && (t[0].x += 1), .2 > e && (t[1].x += 1), .2 > h && (t[2].x += 1));
    l = 0;
    for (u = this.vertices.length; l < u; l++) this.vertices[l].multiplyScalar(n);
    this.mergeVertices();
    this.computeFaceNormals();
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), n);
};

THREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.IcosahedronGeometry = function(e, t) {
    this.parameters = {
        radius: e,
        detail: t
    };
    var n = (1 + Math.sqrt(5)) / 2;
    THREE.PolyhedronGeometry.call(this, [ -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1 ], [ 0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1 ], e, t);
};

THREE.IcosahedronGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.OctahedronGeometry = function(e, t) {
    this.parameters = {
        radius: e,
        detail: t
    };
    THREE.PolyhedronGeometry.call(this, [ 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1 ], [ 0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2 ], e, t);
};

THREE.OctahedronGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.TetrahedronGeometry = function(e, t) {
    THREE.PolyhedronGeometry.call(this, [ 1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1 ], [ 2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1 ], e, t);
};

THREE.TetrahedronGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.ParametricGeometry = function(e, t, n) {
    THREE.Geometry.call(this);
    var r = this.vertices, i = this.faces, o = this.faceVertexUvs[0], a, s, c, l, u = t + 1;
    for (a = 0; a <= n; a++) for (l = a / n, s = 0; s <= t; s++) c = s / t, c = e(c, l), 
    r.push(c);
    var h, f, p, d;
    for (a = 0; a < n; a++) for (s = 0; s < t; s++) e = a * u + s, r = a * u + s + 1, 
    l = (a + 1) * u + s + 1, c = (a + 1) * u + s, h = new THREE.Vector2(s / t, a / n), 
    f = new THREE.Vector2((s + 1) / t, a / n), p = new THREE.Vector2((s + 1) / t, (a + 1) / n), 
    d = new THREE.Vector2(s / t, (a + 1) / n), i.push(new THREE.Face3(e, r, c)), o.push([ h, f, d ]), 
    i.push(new THREE.Face3(r, l, c)), o.push([ f.clone(), p, d.clone() ]);
    this.computeFaceNormals();
    this.computeVertexNormals();
};

THREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype);

THREE.AxisHelper = function(e) {
    e = e || 1;
    var t = new Float32Array([ 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e ]), n = new Float32Array([ 1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1 ]);
    e = new THREE.BufferGeometry();
    e.addAttribute("position", new THREE.BufferAttribute(t, 3));
    e.addAttribute("color", new THREE.BufferAttribute(n, 3));
    t = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    });
    THREE.Line.call(this, e, t, THREE.LinePieces);
};

THREE.AxisHelper.prototype = Object.create(THREE.Line.prototype);

THREE.ArrowHelper = function() {
    var e = new THREE.Geometry();
    e.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0));
    var t = new THREE.CylinderGeometry(0, .5, 1, 5, 1);
    t.applyMatrix(new THREE.Matrix4().makeTranslation(0, -.5, 0));
    return function(n, r, i, o, a, s) {
        THREE.Object3D.call(this);
        void 0 === o && (o = 16776960);
        void 0 === i && (i = 1);
        void 0 === a && (a = .2 * i);
        void 0 === s && (s = .2 * a);
        this.position.copy(r);
        this.line = new THREE.Line(e, new THREE.LineBasicMaterial({
            color: o
        }));
        this.line.matrixAutoUpdate = !1;
        this.add(this.line);
        this.cone = new THREE.Mesh(t, new THREE.MeshBasicMaterial({
            color: o
        }));
        this.cone.matrixAutoUpdate = !1;
        this.add(this.cone);
        this.setDirection(n);
        this.setLength(i, a, s);
    };
}();

THREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype);

THREE.ArrowHelper.prototype.setDirection = function() {
    var e = new THREE.Vector3(), t;
    return function(n) {
        .99999 < n.y ? this.quaternion.set(0, 0, 0, 1) : -.99999 > n.y ? this.quaternion.set(1, 0, 0, 0) : (e.set(n.z, 0, -n.x).normalize(), 
        t = Math.acos(n.y), this.quaternion.setFromAxisAngle(e, t));
    };
}();

THREE.ArrowHelper.prototype.setLength = function(e, t, n) {
    void 0 === t && (t = .2 * e);
    void 0 === n && (n = .2 * t);
    this.line.scale.set(1, e, 1);
    this.line.updateMatrix();
    this.cone.scale.set(n, t, n);
    this.cone.position.y = e;
    this.cone.updateMatrix();
};

THREE.ArrowHelper.prototype.setColor = function(e) {
    this.line.material.color.set(e);
    this.cone.material.color.set(e);
};

THREE.BoxHelper = function(e) {
    var t = new THREE.BufferGeometry();
    t.addAttribute("position", new THREE.BufferAttribute(new Float32Array(72), 3));
    THREE.Line.call(this, t, new THREE.LineBasicMaterial({
        color: 16776960
    }), THREE.LinePieces);
    void 0 !== e && this.update(e);
};

THREE.BoxHelper.prototype = Object.create(THREE.Line.prototype);

THREE.BoxHelper.prototype.update = function(e) {
    var t = e.geometry;
    null === t.boundingBox && t.computeBoundingBox();
    var n = t.boundingBox.min, t = t.boundingBox.max, r = this.geometry.attributes.position.array;
    r[0] = t.x;
    r[1] = t.y;
    r[2] = t.z;
    r[3] = n.x;
    r[4] = t.y;
    r[5] = t.z;
    r[6] = n.x;
    r[7] = t.y;
    r[8] = t.z;
    r[9] = n.x;
    r[10] = n.y;
    r[11] = t.z;
    r[12] = n.x;
    r[13] = n.y;
    r[14] = t.z;
    r[15] = t.x;
    r[16] = n.y;
    r[17] = t.z;
    r[18] = t.x;
    r[19] = n.y;
    r[20] = t.z;
    r[21] = t.x;
    r[22] = t.y;
    r[23] = t.z;
    r[24] = t.x;
    r[25] = t.y;
    r[26] = n.z;
    r[27] = n.x;
    r[28] = t.y;
    r[29] = n.z;
    r[30] = n.x;
    r[31] = t.y;
    r[32] = n.z;
    r[33] = n.x;
    r[34] = n.y;
    r[35] = n.z;
    r[36] = n.x;
    r[37] = n.y;
    r[38] = n.z;
    r[39] = t.x;
    r[40] = n.y;
    r[41] = n.z;
    r[42] = t.x;
    r[43] = n.y;
    r[44] = n.z;
    r[45] = t.x;
    r[46] = t.y;
    r[47] = n.z;
    r[48] = t.x;
    r[49] = t.y;
    r[50] = t.z;
    r[51] = t.x;
    r[52] = t.y;
    r[53] = n.z;
    r[54] = n.x;
    r[55] = t.y;
    r[56] = t.z;
    r[57] = n.x;
    r[58] = t.y;
    r[59] = n.z;
    r[60] = n.x;
    r[61] = n.y;
    r[62] = t.z;
    r[63] = n.x;
    r[64] = n.y;
    r[65] = n.z;
    r[66] = t.x;
    r[67] = n.y;
    r[68] = t.z;
    r[69] = t.x;
    r[70] = n.y;
    r[71] = n.z;
    this.geometry.attributes.position.needsUpdate = !0;
    this.geometry.computeBoundingSphere();
    this.matrixAutoUpdate = !1;
    this.matrixWorld = e.matrixWorld;
};

THREE.BoundingBoxHelper = function(e, t) {
    var n = void 0 !== t ? t : 8947848;
    this.object = e;
    this.box = new THREE.Box3();
    THREE.Mesh.call(this, new THREE.BoxGeometry(1, 1, 1), new THREE.MeshBasicMaterial({
        color: n,
        wireframe: !0
    }));
};

THREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype);

THREE.BoundingBoxHelper.prototype.update = function() {
    this.box.setFromObject(this.object);
    this.box.size(this.scale);
    this.box.center(this.position);
};

THREE.CameraHelper = function(e) {
    function t(e, t, r) {
        n(e, r);
        n(t, r);
    }
    function n(e, t) {
        r.vertices.push(new THREE.Vector3());
        r.colors.push(new THREE.Color(t));
        void 0 === o[e] && (o[e] = []);
        o[e].push(r.vertices.length - 1);
    }
    var r = new THREE.Geometry(), i = new THREE.LineBasicMaterial({
        color: 16777215,
        vertexColors: THREE.FaceColors
    }), o = {};
    t("n1", "n2", 16755200);
    t("n2", "n4", 16755200);
    t("n4", "n3", 16755200);
    t("n3", "n1", 16755200);
    t("f1", "f2", 16755200);
    t("f2", "f4", 16755200);
    t("f4", "f3", 16755200);
    t("f3", "f1", 16755200);
    t("n1", "f1", 16755200);
    t("n2", "f2", 16755200);
    t("n3", "f3", 16755200);
    t("n4", "f4", 16755200);
    t("p", "n1", 16711680);
    t("p", "n2", 16711680);
    t("p", "n3", 16711680);
    t("p", "n4", 16711680);
    t("u1", "u2", 43775);
    t("u2", "u3", 43775);
    t("u3", "u1", 43775);
    t("c", "t", 16777215);
    t("p", "c", 3355443);
    t("cn1", "cn2", 3355443);
    t("cn3", "cn4", 3355443);
    t("cf1", "cf2", 3355443);
    t("cf3", "cf4", 3355443);
    THREE.Line.call(this, r, i, THREE.LinePieces);
    this.camera = e;
    this.matrixWorld = e.matrixWorld;
    this.matrixAutoUpdate = !1;
    this.pointMap = o;
    this.update();
};

THREE.CameraHelper.prototype = Object.create(THREE.Line.prototype);

THREE.CameraHelper.prototype.update = function() {
    var e = new THREE.Vector3(), t = new THREE.Camera(), n = new THREE.Projector();
    return function() {
        function r(r, o, a, s) {
            e.set(o, a, s);
            n.unprojectVector(e, t);
            r = i.pointMap[r];
            if (void 0 !== r) for (o = 0, a = r.length; o < a; o++) i.geometry.vertices[r[o]].copy(e);
        }
        var i = this;
        t.projectionMatrix.copy(this.camera.projectionMatrix);
        r("c", 0, 0, -1);
        r("t", 0, 0, 1);
        r("n1", -1, -1, -1);
        r("n2", 1, -1, -1);
        r("n3", -1, 1, -1);
        r("n4", 1, 1, -1);
        r("f1", -1, -1, 1);
        r("f2", 1, -1, 1);
        r("f3", -1, 1, 1);
        r("f4", 1, 1, 1);
        r("u1", .7, 1.1, -1);
        r("u2", -.7, 1.1, -1);
        r("u3", 0, 2, -1);
        r("cf1", -1, 0, 1);
        r("cf2", 1, 0, 1);
        r("cf3", 0, -1, 1);
        r("cf4", 0, 1, 1);
        r("cn1", -1, 0, -1);
        r("cn2", 1, 0, -1);
        r("cn3", 0, -1, -1);
        r("cn4", 0, 1, -1);
        this.geometry.verticesNeedUpdate = !0;
    };
}();

THREE.DirectionalLightHelper = function(e, t) {
    THREE.Object3D.call(this);
    this.light = e;
    this.light.updateMatrixWorld();
    this.matrixWorld = e.matrixWorld;
    this.matrixAutoUpdate = !1;
    t = t || 1;
    var n = new THREE.Geometry();
    n.vertices.push(new THREE.Vector3(-t, t, 0), new THREE.Vector3(t, t, 0), new THREE.Vector3(t, -t, 0), new THREE.Vector3(-t, -t, 0), new THREE.Vector3(-t, t, 0));
    var r = new THREE.LineBasicMaterial({
        fog: !1
    });
    r.color.copy(this.light.color).multiplyScalar(this.light.intensity);
    this.lightPlane = new THREE.Line(n, r);
    this.add(this.lightPlane);
    n = new THREE.Geometry();
    n.vertices.push(new THREE.Vector3(), new THREE.Vector3());
    r = new THREE.LineBasicMaterial({
        fog: !1
    });
    r.color.copy(this.light.color).multiplyScalar(this.light.intensity);
    this.targetLine = new THREE.Line(n, r);
    this.add(this.targetLine);
    this.update();
};

THREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype);

THREE.DirectionalLightHelper.prototype.dispose = function() {
    this.lightPlane.geometry.dispose();
    this.lightPlane.material.dispose();
    this.targetLine.geometry.dispose();
    this.targetLine.material.dispose();
};

THREE.DirectionalLightHelper.prototype.update = function() {
    var e = new THREE.Vector3(), t = new THREE.Vector3(), n = new THREE.Vector3();
    return function() {
        e.setFromMatrixPosition(this.light.matrixWorld);
        t.setFromMatrixPosition(this.light.target.matrixWorld);
        n.subVectors(t, e);
        this.lightPlane.lookAt(n);
        this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
        this.targetLine.geometry.vertices[1].copy(n);
        this.targetLine.geometry.verticesNeedUpdate = !0;
        this.targetLine.material.color.copy(this.lightPlane.material.color);
    };
}();

THREE.EdgesHelper = function(e, t) {
    var n = void 0 !== t ? t : 16777215, r = [ 0, 0 ], i = {}, o = function(e, t) {
        return e - t;
    }, a = [ "a", "b", "c" ], s = new THREE.BufferGeometry(), c = e.geometry.clone();
    c.mergeVertices();
    c.computeFaceNormals();
    for (var l = c.vertices, c = c.faces, u = 0, h = 0, f = c.length; h < f; h++) for (var p = c[h], d = 0; 3 > d; d++) {
        r[0] = p[a[d]];
        r[1] = p[a[(d + 1) % 3]];
        r.sort(o);
        var m = r.toString();
        void 0 === i[m] ? (i[m] = {
            vert1: r[0],
            vert2: r[1],
            face1: h,
            face2: void 0
        }, u++) : i[m].face2 = h;
    }
    s.addAttribute("position", new THREE.Float32Attribute(6 * u, 3));
    r = s.attributes.position.array;
    o = 0;
    for (m in i) if (a = i[m], void 0 === a.face2 || .9999 > c[a.face1].normal.dot(c[a.face2].normal)) u = l[a.vert1], 
    r[o++] = u.x, r[o++] = u.y, r[o++] = u.z, u = l[a.vert2], r[o++] = u.x, r[o++] = u.y, 
    r[o++] = u.z;
    THREE.Line.call(this, s, new THREE.LineBasicMaterial({
        color: n
    }), THREE.LinePieces);
    this.matrixAutoUpdate = !1;
    this.matrixWorld = e.matrixWorld;
};

THREE.EdgesHelper.prototype = Object.create(THREE.Line.prototype);

THREE.FaceNormalsHelper = function(e, t, n, r) {
    this.object = e;
    this.size = void 0 !== t ? t : 1;
    e = void 0 !== n ? n : 16776960;
    r = void 0 !== r ? r : 1;
    t = new THREE.Geometry();
    n = 0;
    for (var i = this.object.geometry.faces.length; n < i; n++) t.vertices.push(new THREE.Vector3(), new THREE.Vector3());
    THREE.Line.call(this, t, new THREE.LineBasicMaterial({
        color: e,
        linewidth: r
    }), THREE.LinePieces);
    this.matrixAutoUpdate = !1;
    this.normalMatrix = new THREE.Matrix3();
    this.update();
};

THREE.FaceNormalsHelper.prototype = Object.create(THREE.Line.prototype);

THREE.FaceNormalsHelper.prototype.update = function() {
    var e = this.geometry.vertices, t = this.object, n = t.geometry.vertices, r = t.geometry.faces, i = t.matrixWorld;
    t.updateMatrixWorld(!0);
    this.normalMatrix.getNormalMatrix(i);
    for (var o = t = 0, a = r.length; t < a; t++, o += 2) {
        var s = r[t];
        e[o].copy(n[s.a]).add(n[s.b]).add(n[s.c]).divideScalar(3).applyMatrix4(i);
        e[o + 1].copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[o]);
    }
    this.geometry.verticesNeedUpdate = !0;
    return this;
};

THREE.GridHelper = function(e, t) {
    var n = new THREE.Geometry(), r = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    });
    this.color1 = new THREE.Color(4473924);
    this.color2 = new THREE.Color(8947848);
    for (var i = -e; i <= e; i += t) {
        n.vertices.push(new THREE.Vector3(-e, 0, i), new THREE.Vector3(e, 0, i), new THREE.Vector3(i, 0, -e), new THREE.Vector3(i, 0, e));
        var o = 0 === i ? this.color1 : this.color2;
        n.colors.push(o, o, o, o);
    }
    THREE.Line.call(this, n, r, THREE.LinePieces);
};

THREE.GridHelper.prototype = Object.create(THREE.Line.prototype);

THREE.GridHelper.prototype.setColors = function(e, t) {
    this.color1.set(e);
    this.color2.set(t);
    this.geometry.colorsNeedUpdate = !0;
};

THREE.HemisphereLightHelper = function(e, t, n, r) {
    THREE.Object3D.call(this);
    this.light = e;
    this.light.updateMatrixWorld();
    this.matrixWorld = e.matrixWorld;
    this.matrixAutoUpdate = !1;
    this.colors = [ new THREE.Color(), new THREE.Color() ];
    e = new THREE.SphereGeometry(t, 4, 2);
    e.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI / 2));
    for (t = 0; 8 > t; t++) e.faces[t].color = this.colors[4 > t ? 0 : 1];
    t = new THREE.MeshBasicMaterial({
        vertexColors: THREE.FaceColors,
        wireframe: !0
    });
    this.lightSphere = new THREE.Mesh(e, t);
    this.add(this.lightSphere);
    this.update();
};

THREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype);

THREE.HemisphereLightHelper.prototype.dispose = function() {
    this.lightSphere.geometry.dispose();
    this.lightSphere.material.dispose();
};

THREE.HemisphereLightHelper.prototype.update = function() {
    var e = new THREE.Vector3();
    return function() {
        this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);
        this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);
        this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate());
        this.lightSphere.geometry.colorsNeedUpdate = !0;
    };
}();

THREE.PointLightHelper = function(e, t) {
    this.light = e;
    this.light.updateMatrixWorld();
    var n = new THREE.SphereGeometry(t, 4, 2), r = new THREE.MeshBasicMaterial({
        wireframe: !0,
        fog: !1
    });
    r.color.copy(this.light.color).multiplyScalar(this.light.intensity);
    THREE.Mesh.call(this, n, r);
    this.matrixWorld = this.light.matrixWorld;
    this.matrixAutoUpdate = !1;
};

THREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype);

THREE.PointLightHelper.prototype.dispose = function() {
    this.geometry.dispose();
    this.material.dispose();
};

THREE.PointLightHelper.prototype.update = function() {
    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
};

THREE.SkeletonHelper = function(e) {
    this.bones = this.getBoneList(e);
    for (var t = new THREE.Geometry(), n = 0; n < this.bones.length; n++) this.bones[n].parent instanceof THREE.Bone && (t.vertices.push(new THREE.Vector3()), 
    t.vertices.push(new THREE.Vector3()), t.colors.push(new THREE.Color(0, 0, 1)), t.colors.push(new THREE.Color(0, 1, 0)));
    n = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors,
        depthTest: !1,
        depthWrite: !1,
        transparent: !0
    });
    THREE.Line.call(this, t, n, THREE.LinePieces);
    this.root = e;
    this.matrixWorld = e.matrixWorld;
    this.matrixAutoUpdate = !1;
    this.update();
};

THREE.SkeletonHelper.prototype = Object.create(THREE.Line.prototype);

THREE.SkeletonHelper.prototype.getBoneList = function(e) {
    var t = [];
    e instanceof THREE.Bone && t.push(e);
    for (var n = 0; n < e.children.length; n++) t.push.apply(t, this.getBoneList(e.children[n]));
    return t;
};

THREE.SkeletonHelper.prototype.update = function() {
    for (var e = this.geometry, t = new THREE.Matrix4().getInverse(this.root.matrixWorld), n = new THREE.Matrix4(), r = 0, i = 0; i < this.bones.length; i++) {
        var o = this.bones[i];
        o.parent instanceof THREE.Bone && (n.multiplyMatrices(t, o.matrixWorld), e.vertices[r].setFromMatrixPosition(n), 
        n.multiplyMatrices(t, o.parent.matrixWorld), e.vertices[r + 1].setFromMatrixPosition(n), 
        r += 2);
    }
    e.verticesNeedUpdate = !0;
    e.computeBoundingSphere();
};

THREE.SpotLightHelper = function(e) {
    THREE.Object3D.call(this);
    this.light = e;
    this.light.updateMatrixWorld();
    this.matrixWorld = e.matrixWorld;
    this.matrixAutoUpdate = !1;
    e = new THREE.CylinderGeometry(0, 1, 1, 8, 1, !0);
    e.applyMatrix(new THREE.Matrix4().makeTranslation(0, -.5, 0));
    e.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI / 2));
    var t = new THREE.MeshBasicMaterial({
        wireframe: !0,
        fog: !1
    });
    this.cone = new THREE.Mesh(e, t);
    this.add(this.cone);
    this.update();
};

THREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype);

THREE.SpotLightHelper.prototype.dispose = function() {
    this.cone.geometry.dispose();
    this.cone.material.dispose();
};

THREE.SpotLightHelper.prototype.update = function() {
    var e = new THREE.Vector3(), t = new THREE.Vector3();
    return function() {
        var n = this.light.distance ? this.light.distance : 1e4, r = n * Math.tan(this.light.angle);
        this.cone.scale.set(r, r, n);
        e.setFromMatrixPosition(this.light.matrixWorld);
        t.setFromMatrixPosition(this.light.target.matrixWorld);
        this.cone.lookAt(t.sub(e));
        this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
    };
}();

THREE.VertexNormalsHelper = function(e, t, n, r) {
    this.object = e;
    this.size = void 0 !== t ? t : 1;
    t = void 0 !== n ? n : 16711680;
    r = void 0 !== r ? r : 1;
    n = new THREE.Geometry();
    e = e.geometry.faces;
    for (var i = 0, o = e.length; i < o; i++) for (var a = 0, s = e[i].vertexNormals.length; a < s; a++) n.vertices.push(new THREE.Vector3(), new THREE.Vector3());
    THREE.Line.call(this, n, new THREE.LineBasicMaterial({
        color: t,
        linewidth: r
    }), THREE.LinePieces);
    this.matrixAutoUpdate = !1;
    this.normalMatrix = new THREE.Matrix3();
    this.update();
};

THREE.VertexNormalsHelper.prototype = Object.create(THREE.Line.prototype);

THREE.VertexNormalsHelper.prototype.update = function(e) {
    var t = new THREE.Vector3();
    return function(e) {
        e = [ "a", "b", "c", "d" ];
        this.object.updateMatrixWorld(!0);
        this.normalMatrix.getNormalMatrix(this.object.matrixWorld);
        for (var n = this.geometry.vertices, r = this.object.geometry.vertices, i = this.object.geometry.faces, o = this.object.matrixWorld, a = 0, s = 0, c = i.length; s < c; s++) for (var l = i[s], u = 0, h = l.vertexNormals.length; u < h; u++) {
            var f = l.vertexNormals[u];
            n[a].copy(r[l[e[u]]]).applyMatrix4(o);
            t.copy(f).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);
            t.add(n[a]);
            a += 1;
            n[a].copy(t);
            a += 1;
        }
        this.geometry.verticesNeedUpdate = !0;
        return this;
    };
}();

THREE.VertexTangentsHelper = function(e, t, n, r) {
    this.object = e;
    this.size = void 0 !== t ? t : 1;
    t = void 0 !== n ? n : 255;
    r = void 0 !== r ? r : 1;
    n = new THREE.Geometry();
    e = e.geometry.faces;
    for (var i = 0, o = e.length; i < o; i++) for (var a = 0, s = e[i].vertexTangents.length; a < s; a++) n.vertices.push(new THREE.Vector3()), 
    n.vertices.push(new THREE.Vector3());
    THREE.Line.call(this, n, new THREE.LineBasicMaterial({
        color: t,
        linewidth: r
    }), THREE.LinePieces);
    this.matrixAutoUpdate = !1;
    this.update();
};

THREE.VertexTangentsHelper.prototype = Object.create(THREE.Line.prototype);

THREE.VertexTangentsHelper.prototype.update = function(e) {
    var t = new THREE.Vector3();
    return function(e) {
        e = [ "a", "b", "c", "d" ];
        this.object.updateMatrixWorld(!0);
        for (var n = this.geometry.vertices, r = this.object.geometry.vertices, i = this.object.geometry.faces, o = this.object.matrixWorld, a = 0, s = 0, c = i.length; s < c; s++) for (var l = i[s], u = 0, h = l.vertexTangents.length; u < h; u++) {
            var f = l.vertexTangents[u];
            n[a].copy(r[l[e[u]]]).applyMatrix4(o);
            t.copy(f).transformDirection(o).multiplyScalar(this.size);
            t.add(n[a]);
            a += 1;
            n[a].copy(t);
            a += 1;
        }
        this.geometry.verticesNeedUpdate = !0;
        return this;
    };
}();

THREE.WireframeHelper = function(e, t) {
    var n = void 0 !== t ? t : 16777215, r = [ 0, 0 ], i = {}, o = function(e, t) {
        return e - t;
    }, a = [ "a", "b", "c" ], s = new THREE.BufferGeometry();
    if (e.geometry instanceof THREE.Geometry) {
        for (var c = e.geometry.vertices, l = e.geometry.faces, u = 0, h = new Uint32Array(6 * l.length), f = 0, p = l.length; f < p; f++) for (var d = l[f], m = 0; 3 > m; m++) {
            r[0] = d[a[m]];
            r[1] = d[a[(m + 1) % 3]];
            r.sort(o);
            var E = r.toString();
            void 0 === i[E] && (h[2 * u] = r[0], h[2 * u + 1] = r[1], i[E] = !0, u++);
        }
        r = new Float32Array(6 * u);
        f = 0;
        for (p = u; f < p; f++) for (m = 0; 2 > m; m++) u = c[h[2 * f + m]], a = 6 * f + 3 * m, 
        r[a + 0] = u.x, r[a + 1] = u.y, r[a + 2] = u.z;
        s.addAttribute("position", new THREE.BufferAttribute(r, 3));
    } else if (e.geometry instanceof THREE.BufferGeometry) {
        if (void 0 !== e.geometry.attributes.index) {
            for (var c = e.geometry.attributes.position.array, p = e.geometry.attributes.index.array, l = e.geometry.offsets, u = 0, h = new Uint32Array(2 * p.length), d = 0, v = l.length; d < v; ++d) for (var m = l[d].start, E = l[d].count, a = l[d].index, f = m, g = m + E; f < g; f += 3) for (m = 0; 3 > m; m++) r[0] = a + p[f + m], 
            r[1] = a + p[f + (m + 1) % 3], r.sort(o), E = r.toString(), void 0 === i[E] && (h[2 * u] = r[0], 
            h[2 * u + 1] = r[1], i[E] = !0, u++);
            r = new Float32Array(6 * u);
            f = 0;
            for (p = u; f < p; f++) for (m = 0; 2 > m; m++) a = 6 * f + 3 * m, u = 3 * h[2 * f + m], 
            r[a + 0] = c[u], r[a + 1] = c[u + 1], r[a + 2] = c[u + 2];
        } else for (c = e.geometry.attributes.position.array, u = c.length / 3, h = u / 3, 
        r = new Float32Array(6 * u), f = 0, p = h; f < p; f++) for (m = 0; 3 > m; m++) a = 18 * f + 6 * m, 
        h = 9 * f + 3 * m, r[a + 0] = c[h], r[a + 1] = c[h + 1], r[a + 2] = c[h + 2], u = 9 * f + (m + 1) % 3 * 3, 
        r[a + 3] = c[u], r[a + 4] = c[u + 1], r[a + 5] = c[u + 2];
        s.addAttribute("position", new THREE.BufferAttribute(r, 3));
    }
    THREE.Line.call(this, s, new THREE.LineBasicMaterial({
        color: n
    }), THREE.LinePieces);
    this.matrixAutoUpdate = !1;
    this.matrixWorld = e.matrixWorld;
};

THREE.WireframeHelper.prototype = Object.create(THREE.Line.prototype);

THREE.ImmediateRenderObject = function() {
    THREE.Object3D.call(this);
    this.render = function(e) {};
};

THREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype);

THREE.LensFlare = function(e, t, n, r, i) {
    THREE.Object3D.call(this);
    this.lensFlares = [];
    this.positionScreen = new THREE.Vector3();
    this.customUpdateCallback = void 0;
    void 0 !== e && this.add(e, t, n, r, i);
};

THREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype);

THREE.LensFlare.prototype.add = function(e, t, n, r, i, o) {
    void 0 === t && (t = -1);
    void 0 === n && (n = 0);
    void 0 === o && (o = 1);
    void 0 === i && (i = new THREE.Color(16777215));
    void 0 === r && (r = THREE.NormalBlending);
    n = Math.min(n, Math.max(0, n));
    this.lensFlares.push({
        texture: e,
        size: t,
        distance: n,
        x: 0,
        y: 0,
        z: 0,
        scale: 1,
        rotation: 1,
        opacity: o,
        color: i,
        blending: r
    });
};

THREE.LensFlare.prototype.updateLensFlares = function() {
    var e, t = this.lensFlares.length, n, r = 2 * -this.positionScreen.x, i = 2 * -this.positionScreen.y;
    for (e = 0; e < t; e++) n = this.lensFlares[e], n.x = this.positionScreen.x + r * n.distance, 
    n.y = this.positionScreen.y + i * n.distance, n.wantedRotation = n.x * Math.PI * .25, 
    n.rotation += .25 * (n.wantedRotation - n.rotation);
};

THREE.MorphBlendMesh = function(e, t) {
    THREE.Mesh.call(this, e, t);
    this.animationsMap = {};
    this.animationsList = [];
    var n = this.geometry.morphTargets.length;
    this.createAnimation("__default", 0, n - 1, n / 1);
    this.setAnimationWeight("__default", 1);
};

THREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype);

THREE.MorphBlendMesh.prototype.createAnimation = function(e, t, n, r) {
    t = {
        startFrame: t,
        endFrame: n,
        length: n - t + 1,
        fps: r,
        duration: (n - t) / r,
        lastFrame: 0,
        currentFrame: 0,
        active: !1,
        time: 0,
        direction: 1,
        weight: 1,
        directionBackwards: !1,
        mirroredLoop: !1
    };
    this.animationsMap[e] = t;
    this.animationsList.push(t);
};

THREE.MorphBlendMesh.prototype.autoCreateAnimations = function(e) {
    for (var t = /([a-z]+)_?(\d+)/, n, r = {}, i = this.geometry, o = 0, a = i.morphTargets.length; o < a; o++) {
        var s = i.morphTargets[o].name.match(t);
        if (s && 1 < s.length) {
            var c = s[1];
            r[c] || (r[c] = {
                start: Infinity,
                end: -Infinity
            });
            s = r[c];
            o < s.start && (s.start = o);
            o > s.end && (s.end = o);
            n || (n = c);
        }
    }
    for (c in r) s = r[c], this.createAnimation(c, s.start, s.end, e);
    this.firstAnimation = n;
};

THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function(e) {
    if (e = this.animationsMap[e]) e.direction = 1, e.directionBackwards = !1;
};

THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(e) {
    if (e = this.animationsMap[e]) e.direction = -1, e.directionBackwards = !0;
};

THREE.MorphBlendMesh.prototype.setAnimationFPS = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.fps = t, n.duration = (n.end - n.start) / n.fps);
};

THREE.MorphBlendMesh.prototype.setAnimationDuration = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.duration = t, n.fps = (n.end - n.start) / n.duration);
};

THREE.MorphBlendMesh.prototype.setAnimationWeight = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.weight = t);
};

THREE.MorphBlendMesh.prototype.setAnimationTime = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.time = t);
};

THREE.MorphBlendMesh.prototype.getAnimationTime = function(e) {
    var t = 0;
    if (e = this.animationsMap[e]) t = e.time;
    return t;
};

THREE.MorphBlendMesh.prototype.getAnimationDuration = function(e) {
    var t = -1;
    if (e = this.animationsMap[e]) t = e.duration;
    return t;
};

THREE.MorphBlendMesh.prototype.playAnimation = function(e) {
    var t = this.animationsMap[e];
    t ? (t.time = 0, t.active = !0) : console.warn("animation[" + e + "] undefined");
};

THREE.MorphBlendMesh.prototype.stopAnimation = function(e) {
    if (e = this.animationsMap[e]) e.active = !1;
};

THREE.MorphBlendMesh.prototype.update = function(e) {
    for (var t = 0, n = this.animationsList.length; t < n; t++) {
        var r = this.animationsList[t];
        if (r.active) {
            var i = r.duration / r.length;
            r.time += r.direction * e;
            if (r.mirroredLoop) {
                if (r.time > r.duration || 0 > r.time) r.direction *= -1, r.time > r.duration && (r.time = r.duration, 
                r.directionBackwards = !0), 0 > r.time && (r.time = 0, r.directionBackwards = !1);
            } else r.time %= r.duration, 0 > r.time && (r.time += r.duration);
            var o = r.startFrame + THREE.Math.clamp(Math.floor(r.time / i), 0, r.length - 1), a = r.weight;
            o !== r.currentFrame && (this.morphTargetInfluences[r.lastFrame] = 0, this.morphTargetInfluences[r.currentFrame] = 1 * a, 
            this.morphTargetInfluences[o] = 0, r.lastFrame = r.currentFrame, r.currentFrame = o);
            i = r.time % i / i;
            r.directionBackwards && (i = 1 - i);
            this.morphTargetInfluences[r.currentFrame] = i * a;
            this.morphTargetInfluences[r.lastFrame] = (1 - i) * a;
        }
    }
};

THREE.LensFlarePlugin = function() {
    function e(e, t) {
        var r = n.createProgram(), i = n.createShader(n.FRAGMENT_SHADER), o = n.createShader(n.VERTEX_SHADER), a = "precision " + t + " float;\n";
        n.shaderSource(i, a + e.fragmentShader);
        n.shaderSource(o, a + e.vertexShader);
        n.compileShader(i);
        n.compileShader(o);
        n.attachShader(r, i);
        n.attachShader(r, o);
        n.linkProgram(r);
        return r;
    }
    var t = [], n, r, i, o, a, s, c, l, u, h, f, p, d;
    this.init = function(t) {
        n = t.context;
        r = t;
        i = t.getPrecision();
        o = new Float32Array(16);
        a = new Uint16Array(6);
        t = 0;
        o[t++] = -1;
        o[t++] = -1;
        o[t++] = 0;
        o[t++] = 0;
        o[t++] = 1;
        o[t++] = -1;
        o[t++] = 1;
        o[t++] = 0;
        o[t++] = 1;
        o[t++] = 1;
        o[t++] = 1;
        o[t++] = 1;
        o[t++] = -1;
        o[t++] = 1;
        o[t++] = 0;
        o[t++] = 1;
        t = 0;
        a[t++] = 0;
        a[t++] = 1;
        a[t++] = 2;
        a[t++] = 0;
        a[t++] = 2;
        a[t++] = 3;
        s = n.createBuffer();
        c = n.createBuffer();
        n.bindBuffer(n.ARRAY_BUFFER, s);
        n.bufferData(n.ARRAY_BUFFER, o, n.STATIC_DRAW);
        n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, c);
        n.bufferData(n.ELEMENT_ARRAY_BUFFER, a, n.STATIC_DRAW);
        l = n.createTexture();
        u = n.createTexture();
        n.bindTexture(n.TEXTURE_2D, l);
        n.texImage2D(n.TEXTURE_2D, 0, n.RGB, 16, 16, 0, n.RGB, n.UNSIGNED_BYTE, null);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_S, n.CLAMP_TO_EDGE);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_T, n.CLAMP_TO_EDGE);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MAG_FILTER, n.NEAREST);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MIN_FILTER, n.NEAREST);
        n.bindTexture(n.TEXTURE_2D, u);
        n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, 16, 16, 0, n.RGBA, n.UNSIGNED_BYTE, null);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_S, n.CLAMP_TO_EDGE);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_T, n.CLAMP_TO_EDGE);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MAG_FILTER, n.NEAREST);
        n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MIN_FILTER, n.NEAREST);
        0 >= n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS) ? (h = !1, f = e(THREE.ShaderFlares.lensFlare, i)) : (h = !0, 
        f = e(THREE.ShaderFlares.lensFlareVertexTexture, i));
        p = {};
        d = {};
        p.vertex = n.getAttribLocation(f, "position");
        p.uv = n.getAttribLocation(f, "uv");
        d.renderType = n.getUniformLocation(f, "renderType");
        d.map = n.getUniformLocation(f, "map");
        d.occlusionMap = n.getUniformLocation(f, "occlusionMap");
        d.opacity = n.getUniformLocation(f, "opacity");
        d.color = n.getUniformLocation(f, "color");
        d.scale = n.getUniformLocation(f, "scale");
        d.rotation = n.getUniformLocation(f, "rotation");
        d.screenPosition = n.getUniformLocation(f, "screenPosition");
    };
    this.render = function(e, i, o, a) {
        t.length = 0;
        e.traverseVisible(function(e) {
            e instanceof THREE.LensFlare && t.push(e);
        });
        if (0 !== t.length) {
            e = new THREE.Vector3();
            var m = a / o, E = .5 * o, v = .5 * a, g = 16 / a, y = new THREE.Vector2(g * m, g), T = new THREE.Vector3(1, 1, 0), x = new THREE.Vector2(1, 1), R = d, g = p;
            n.useProgram(f);
            n.enableVertexAttribArray(p.vertex);
            n.enableVertexAttribArray(p.uv);
            n.uniform1i(R.occlusionMap, 0);
            n.uniform1i(R.map, 1);
            n.bindBuffer(n.ARRAY_BUFFER, s);
            n.vertexAttribPointer(g.vertex, 2, n.FLOAT, !1, 16, 0);
            n.vertexAttribPointer(g.uv, 2, n.FLOAT, !1, 16, 8);
            n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, c);
            n.disable(n.CULL_FACE);
            n.depthMask(!1);
            for (var _ = 0, b = t.length; _ < b; _++) {
                g = 16 / a;
                y.set(g * m, g);
                var w = t[_];
                e.set(w.matrixWorld.elements[12], w.matrixWorld.elements[13], w.matrixWorld.elements[14]);
                e.applyMatrix4(i.matrixWorldInverse);
                e.applyProjection(i.projectionMatrix);
                T.copy(e);
                x.x = T.x * E + E;
                x.y = T.y * v + v;
                if (h || 0 < x.x && x.x < o && 0 < x.y && x.y < a) {
                    n.activeTexture(n.TEXTURE1);
                    n.bindTexture(n.TEXTURE_2D, l);
                    n.copyTexImage2D(n.TEXTURE_2D, 0, n.RGB, x.x - 8, x.y - 8, 16, 16, 0);
                    n.uniform1i(R.renderType, 0);
                    n.uniform2f(R.scale, y.x, y.y);
                    n.uniform3f(R.screenPosition, T.x, T.y, T.z);
                    n.disable(n.BLEND);
                    n.enable(n.DEPTH_TEST);
                    n.drawElements(n.TRIANGLES, 6, n.UNSIGNED_SHORT, 0);
                    n.activeTexture(n.TEXTURE0);
                    n.bindTexture(n.TEXTURE_2D, u);
                    n.copyTexImage2D(n.TEXTURE_2D, 0, n.RGBA, x.x - 8, x.y - 8, 16, 16, 0);
                    n.uniform1i(R.renderType, 1);
                    n.disable(n.DEPTH_TEST);
                    n.activeTexture(n.TEXTURE1);
                    n.bindTexture(n.TEXTURE_2D, l);
                    n.drawElements(n.TRIANGLES, 6, n.UNSIGNED_SHORT, 0);
                    w.positionScreen.copy(T);
                    w.customUpdateCallback ? w.customUpdateCallback(w) : w.updateLensFlares();
                    n.uniform1i(R.renderType, 2);
                    n.enable(n.BLEND);
                    for (var H = 0, S = w.lensFlares.length; H < S; H++) {
                        var M = w.lensFlares[H];
                        .001 < M.opacity && .001 < M.scale && (T.x = M.x, T.y = M.y, T.z = M.z, g = M.size * M.scale / a, 
                        y.x = g * m, y.y = g, n.uniform3f(R.screenPosition, T.x, T.y, T.z), n.uniform2f(R.scale, y.x, y.y), 
                        n.uniform1f(R.rotation, M.rotation), n.uniform1f(R.opacity, M.opacity), n.uniform3f(R.color, M.color.r, M.color.g, M.color.b), 
                        r.setBlending(M.blending, M.blendEquation, M.blendSrc, M.blendDst), r.setTexture(M.texture, 1), 
                        n.drawElements(n.TRIANGLES, 6, n.UNSIGNED_SHORT, 0));
                    }
                }
            }
            n.enable(n.CULL_FACE);
            n.enable(n.DEPTH_TEST);
            n.depthMask(!0);
        }
    };
};

THREE.ShadowMapPlugin = function() {
    function e(t, n, r) {
        if (n.visible) {
            var i = t.__webglObjects[n.id];
            if (i && n.castShadow && (!1 === n.frustumCulled || !0 === s.intersectsObject(n))) for (var o = 0, a = i.length; o < a; o++) {
                var c = i[o];
                n._modelViewMatrix.multiplyMatrices(r.matrixWorldInverse, n.matrixWorld);
                f.push(c);
            }
            o = 0;
            for (a = n.children.length; o < a; o++) e(t, n.children[o], r);
        }
    }
    var t, n, r, i, o, a, s = new THREE.Frustum(), c = new THREE.Matrix4(), l = new THREE.Vector3(), u = new THREE.Vector3(), h = new THREE.Vector3(), f = [];
    this.init = function(e) {
        t = e.context;
        n = e;
        e = THREE.ShaderLib.depthRGBA;
        var s = THREE.UniformsUtils.clone(e.uniforms);
        r = new THREE.ShaderMaterial({
            fragmentShader: e.fragmentShader,
            vertexShader: e.vertexShader,
            uniforms: s
        });
        i = new THREE.ShaderMaterial({
            fragmentShader: e.fragmentShader,
            vertexShader: e.vertexShader,
            uniforms: s,
            morphTargets: !0
        });
        o = new THREE.ShaderMaterial({
            fragmentShader: e.fragmentShader,
            vertexShader: e.vertexShader,
            uniforms: s,
            skinning: !0
        });
        a = new THREE.ShaderMaterial({
            fragmentShader: e.fragmentShader,
            vertexShader: e.vertexShader,
            uniforms: s,
            morphTargets: !0,
            skinning: !0
        });
        r._shadowPass = !0;
        i._shadowPass = !0;
        o._shadowPass = !0;
        a._shadowPass = !0;
    };
    this.render = function(e, t) {
        n.shadowMapEnabled && n.shadowMapAutoUpdate && this.update(e, t);
    };
    this.update = function(p, d) {
        var m, E, v, g, y, T, x, R, _ = [];
        g = 0;
        t.clearColor(1, 1, 1, 1);
        t.disable(t.BLEND);
        t.enable(t.CULL_FACE);
        t.frontFace(t.CCW);
        n.shadowMapCullFace === THREE.CullFaceFront ? t.cullFace(t.FRONT) : t.cullFace(t.BACK);
        n.setDepthTest(!0);
        m = 0;
        for (E = p.__lights.length; m < E; m++) if (v = p.__lights[m], v.castShadow) if (v instanceof THREE.DirectionalLight && v.shadowCascade) for (y = 0; y < v.shadowCascadeCount; y++) {
            var b;
            if (v.shadowCascadeArray[y]) b = v.shadowCascadeArray[y]; else {
                x = v;
                var w = y;
                b = new THREE.DirectionalLight();
                b.isVirtual = !0;
                b.onlyShadow = !0;
                b.castShadow = !0;
                b.shadowCameraNear = x.shadowCameraNear;
                b.shadowCameraFar = x.shadowCameraFar;
                b.shadowCameraLeft = x.shadowCameraLeft;
                b.shadowCameraRight = x.shadowCameraRight;
                b.shadowCameraBottom = x.shadowCameraBottom;
                b.shadowCameraTop = x.shadowCameraTop;
                b.shadowCameraVisible = x.shadowCameraVisible;
                b.shadowDarkness = x.shadowDarkness;
                b.shadowBias = x.shadowCascadeBias[w];
                b.shadowMapWidth = x.shadowCascadeWidth[w];
                b.shadowMapHeight = x.shadowCascadeHeight[w];
                b.pointsWorld = [];
                b.pointsFrustum = [];
                R = b.pointsWorld;
                T = b.pointsFrustum;
                for (var H = 0; 8 > H; H++) R[H] = new THREE.Vector3(), T[H] = new THREE.Vector3();
                R = x.shadowCascadeNearZ[w];
                x = x.shadowCascadeFarZ[w];
                T[0].set(-1, -1, R);
                T[1].set(1, -1, R);
                T[2].set(-1, 1, R);
                T[3].set(1, 1, R);
                T[4].set(-1, -1, x);
                T[5].set(1, -1, x);
                T[6].set(-1, 1, x);
                T[7].set(1, 1, x);
                b.originalCamera = d;
                T = new THREE.Gyroscope();
                T.position.copy(v.shadowCascadeOffset);
                T.add(b);
                T.add(b.target);
                d.add(T);
                v.shadowCascadeArray[y] = b;
                console.log("Created virtualLight", b);
            }
            w = v;
            R = y;
            x = w.shadowCascadeArray[R];
            x.position.copy(w.position);
            x.target.position.copy(w.target.position);
            x.lookAt(x.target);
            x.shadowCameraVisible = w.shadowCameraVisible;
            x.shadowDarkness = w.shadowDarkness;
            x.shadowBias = w.shadowCascadeBias[R];
            T = w.shadowCascadeNearZ[R];
            w = w.shadowCascadeFarZ[R];
            x = x.pointsFrustum;
            x[0].z = T;
            x[1].z = T;
            x[2].z = T;
            x[3].z = T;
            x[4].z = w;
            x[5].z = w;
            x[6].z = w;
            x[7].z = w;
            _[g] = b;
            g++;
        } else _[g] = v, g++;
        m = 0;
        for (E = _.length; m < E; m++) {
            v = _[m];
            v.shadowMap || (y = THREE.LinearFilter, n.shadowMapType === THREE.PCFSoftShadowMap && (y = THREE.NearestFilter), 
            v.shadowMap = new THREE.WebGLRenderTarget(v.shadowMapWidth, v.shadowMapHeight, {
                minFilter: y,
                magFilter: y,
                format: THREE.RGBAFormat
            }), v.shadowMapSize = new THREE.Vector2(v.shadowMapWidth, v.shadowMapHeight), v.shadowMatrix = new THREE.Matrix4());
            if (!v.shadowCamera) {
                if (v instanceof THREE.SpotLight) v.shadowCamera = new THREE.PerspectiveCamera(v.shadowCameraFov, v.shadowMapWidth / v.shadowMapHeight, v.shadowCameraNear, v.shadowCameraFar); else if (v instanceof THREE.DirectionalLight) v.shadowCamera = new THREE.OrthographicCamera(v.shadowCameraLeft, v.shadowCameraRight, v.shadowCameraTop, v.shadowCameraBottom, v.shadowCameraNear, v.shadowCameraFar); else {
                    console.error("Unsupported light type for shadow");
                    continue;
                }
                p.add(v.shadowCamera);
                !0 === p.autoUpdate && p.updateMatrixWorld();
            }
            v.shadowCameraVisible && !v.cameraHelper && (v.cameraHelper = new THREE.CameraHelper(v.shadowCamera), 
            v.shadowCamera.add(v.cameraHelper));
            if (v.isVirtual && b.originalCamera == d) {
                y = d;
                g = v.shadowCamera;
                T = v.pointsFrustum;
                x = v.pointsWorld;
                l.set(Infinity, Infinity, Infinity);
                u.set(-Infinity, -Infinity, -Infinity);
                for (w = 0; 8 > w; w++) R = x[w], R.copy(T[w]), THREE.ShadowMapPlugin.__projector.unprojectVector(R, y), 
                R.applyMatrix4(g.matrixWorldInverse), R.x < l.x && (l.x = R.x), R.x > u.x && (u.x = R.x), 
                R.y < l.y && (l.y = R.y), R.y > u.y && (u.y = R.y), R.z < l.z && (l.z = R.z), R.z > u.z && (u.z = R.z);
                g.left = l.x;
                g.right = u.x;
                g.top = u.y;
                g.bottom = l.y;
                g.updateProjectionMatrix();
            }
            g = v.shadowMap;
            T = v.shadowMatrix;
            y = v.shadowCamera;
            y.position.setFromMatrixPosition(v.matrixWorld);
            h.setFromMatrixPosition(v.target.matrixWorld);
            y.lookAt(h);
            y.updateMatrixWorld();
            y.matrixWorldInverse.getInverse(y.matrixWorld);
            v.cameraHelper && (v.cameraHelper.visible = v.shadowCameraVisible);
            v.shadowCameraVisible && v.cameraHelper.update();
            T.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1);
            T.multiply(y.projectionMatrix);
            T.multiply(y.matrixWorldInverse);
            c.multiplyMatrices(y.projectionMatrix, y.matrixWorldInverse);
            s.setFromMatrix(c);
            n.setRenderTarget(g);
            n.clear();
            f.length = 0;
            e(p, p, y);
            v = 0;
            for (g = f.length; v < g; v++) x = f[v], T = x.object, x = x.buffer, w = T.material instanceof THREE.MeshFaceMaterial ? T.material.materials[0] : T.material, 
            R = void 0 !== T.geometry.morphTargets && 0 < T.geometry.morphTargets.length && w.morphTargets, 
            H = T instanceof THREE.SkinnedMesh && w.skinning, R = T.customDepthMaterial ? T.customDepthMaterial : H ? R ? a : o : R ? i : r, 
            n.setMaterialFaces(w), x instanceof THREE.BufferGeometry ? n.renderBufferDirect(y, p.__lights, null, R, x, T) : n.renderBuffer(y, p.__lights, null, R, x, T);
            w = p.__webglObjectsImmediate;
            v = 0;
            for (g = w.length; v < g; v++) x = w[v], T = x.object, T.visible && T.castShadow && (T._modelViewMatrix.multiplyMatrices(y.matrixWorldInverse, T.matrixWorld), 
            n.renderImmediateObject(y, p.__lights, null, r, T));
        }
        m = n.getClearColor();
        E = n.getClearAlpha();
        t.clearColor(m.r, m.g, m.b, E);
        t.enable(t.BLEND);
        n.shadowMapCullFace === THREE.CullFaceFront && t.cullFace(t.BACK);
    };
};

THREE.ShadowMapPlugin.__projector = new THREE.Projector();

THREE.SpritePlugin = function() {
    var e, t, n, r, i, o, a, s, c, l, u, h, f, p, d, m, E;
    function v(e, t) {
        return e.z !== t.z ? t.z - e.z : t.id - e.id;
    }
    var g, y, T, x = [], R, _, b, w, H;
    this.init = function(v) {
        g = v.context;
        y = v;
        R = new Float32Array([ -.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1 ]);
        _ = new Uint16Array([ 0, 1, 2, 0, 2, 3 ]);
        b = g.createBuffer();
        w = g.createBuffer();
        g.bindBuffer(g.ARRAY_BUFFER, b);
        g.bufferData(g.ARRAY_BUFFER, R, g.STATIC_DRAW);
        g.bindBuffer(g.ELEMENT_ARRAY_BUFFER, w);
        g.bufferData(g.ELEMENT_ARRAY_BUFFER, _, g.STATIC_DRAW);
        v = g.createProgram();
        var x = g.createShader(g.VERTEX_SHADER), S = g.createShader(g.FRAGMENT_SHADER);
        g.shaderSource(x, [ "precision " + y.getPrecision() + " float;", "uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}" ].join("\n"));
        g.shaderSource(S, [ "precision " + y.getPrecision() + " float;", "uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}" ].join("\n"));
        g.compileShader(x);
        g.compileShader(S);
        g.attachShader(v, x);
        g.attachShader(v, S);
        g.linkProgram(v);
        H = v;
        m = g.getAttribLocation(H, "position");
        E = g.getAttribLocation(H, "uv");
        e = g.getUniformLocation(H, "uvOffset");
        t = g.getUniformLocation(H, "uvScale");
        n = g.getUniformLocation(H, "rotation");
        r = g.getUniformLocation(H, "scale");
        i = g.getUniformLocation(H, "color");
        o = g.getUniformLocation(H, "map");
        a = g.getUniformLocation(H, "opacity");
        s = g.getUniformLocation(H, "modelViewMatrix");
        c = g.getUniformLocation(H, "projectionMatrix");
        l = g.getUniformLocation(H, "fogType");
        u = g.getUniformLocation(H, "fogDensity");
        h = g.getUniformLocation(H, "fogNear");
        f = g.getUniformLocation(H, "fogFar");
        p = g.getUniformLocation(H, "fogColor");
        d = g.getUniformLocation(H, "alphaTest");
        v = document.createElement("canvas");
        v.width = 8;
        v.height = 8;
        x = v.getContext("2d");
        x.fillStyle = "white";
        x.fillRect(0, 0, 8, 8);
        T = new THREE.Texture(v);
        T.needsUpdate = !0;
    };
    this.render = function(R, _, S, M) {
        x.length = 0;
        R.traverseVisible(function(e) {
            e instanceof THREE.Sprite && x.push(e);
        });
        if (0 !== x.length) {
            g.useProgram(H);
            g.enableVertexAttribArray(m);
            g.enableVertexAttribArray(E);
            g.disable(g.CULL_FACE);
            g.enable(g.BLEND);
            g.bindBuffer(g.ARRAY_BUFFER, b);
            g.vertexAttribPointer(m, 2, g.FLOAT, !1, 16, 0);
            g.vertexAttribPointer(E, 2, g.FLOAT, !1, 16, 8);
            g.bindBuffer(g.ELEMENT_ARRAY_BUFFER, w);
            g.uniformMatrix4fv(c, !1, _.projectionMatrix.elements);
            g.activeTexture(g.TEXTURE0);
            g.uniform1i(o, 0);
            M = S = 0;
            var C = R.fog;
            C ? (g.uniform3f(p, C.color.r, C.color.g, C.color.b), C instanceof THREE.Fog ? (g.uniform1f(h, C.near), 
            g.uniform1f(f, C.far), g.uniform1i(l, 1), M = S = 1) : C instanceof THREE.FogExp2 && (g.uniform1f(u, C.density), 
            g.uniform1i(l, 2), M = S = 2)) : (g.uniform1i(l, 0), M = S = 0);
            for (var C = 0, A = x.length; C < A; C++) {
                var P = x[C], k = P.material;
                P._modelViewMatrix.multiplyMatrices(_.matrixWorldInverse, P.matrixWorld);
                P.z = -P._modelViewMatrix.elements[14];
            }
            x.sort(v);
            _ = [];
            C = 0;
            for (A = x.length; C < A; C++) P = x[C], k = P.material, g.uniform1f(d, k.alphaTest), 
            g.uniformMatrix4fv(s, !1, P._modelViewMatrix.elements), _[0] = P.scale.x, _[1] = P.scale.y, 
            P = 0, R.fog && k.fog && (P = M), S !== P && (g.uniform1i(l, P), S = P), null !== k.map ? (g.uniform2f(e, k.map.offset.x, k.map.offset.y), 
            g.uniform2f(t, k.map.repeat.x, k.map.repeat.y)) : (g.uniform2f(e, 0, 0), g.uniform2f(t, 1, 1)), 
            g.uniform1f(a, k.opacity), g.uniform3f(i, k.color.r, k.color.g, k.color.b), g.uniform1f(n, k.rotation), 
            g.uniform2fv(r, _), y.setBlending(k.blending, k.blendEquation, k.blendSrc, k.blendDst), 
            y.setDepthTest(k.depthTest), y.setDepthWrite(k.depthWrite), k.map && k.map.image && k.map.image.width ? y.setTexture(k.map, 0) : y.setTexture(T, 0), 
            g.drawElements(g.TRIANGLES, 6, g.UNSIGNED_SHORT, 0);
            g.enable(g.CULL_FACE);
        }
    };
};

THREE.DepthPassPlugin = function() {
    function e(t, n, r) {
        if (n.visible) {
            var i = t.__webglObjects[n.id];
            if (i && (!1 === n.frustumCulled || !0 === s.intersectsObject(n))) for (var o = 0, a = i.length; o < a; o++) {
                var c = i[o];
                n._modelViewMatrix.multiplyMatrices(r.matrixWorldInverse, n.matrixWorld);
                l.push(c);
            }
            o = 0;
            for (a = n.children.length; o < a; o++) e(t, n.children[o], r);
        }
    }
    this.enabled = !1;
    this.renderTarget = null;
    var t, n, r, i, o, a, s = new THREE.Frustum(), c = new THREE.Matrix4(), l = [];
    this.init = function(e) {
        t = e.context;
        n = e;
        e = THREE.ShaderLib.depthRGBA;
        var s = THREE.UniformsUtils.clone(e.uniforms);
        r = new THREE.ShaderMaterial({
            fragmentShader: e.fragmentShader,
            vertexShader: e.vertexShader,
            uniforms: s
        });
        i = new THREE.ShaderMaterial({
            fragmentShader: e.fragmentShader,
            vertexShader: e.vertexShader,
            uniforms: s,
            morphTargets: !0
        });
        o = new THREE.ShaderMaterial({
            fragmentShader: e.fragmentShader,
            vertexShader: e.vertexShader,
            uniforms: s,
            skinning: !0
        });
        a = new THREE.ShaderMaterial({
            fragmentShader: e.fragmentShader,
            vertexShader: e.vertexShader,
            uniforms: s,
            morphTargets: !0,
            skinning: !0
        });
        r._shadowPass = !0;
        i._shadowPass = !0;
        o._shadowPass = !0;
        a._shadowPass = !0;
    };
    this.render = function(e, t) {
        this.enabled && this.update(e, t);
    };
    this.update = function(u, h) {
        var f, p, d, m, E;
        t.clearColor(1, 1, 1, 1);
        t.disable(t.BLEND);
        n.setDepthTest(!0);
        !0 === u.autoUpdate && u.updateMatrixWorld();
        h.matrixWorldInverse.getInverse(h.matrixWorld);
        c.multiplyMatrices(h.projectionMatrix, h.matrixWorldInverse);
        s.setFromMatrix(c);
        n.setRenderTarget(this.renderTarget);
        n.clear();
        l.length = 0;
        e(u, u, h);
        var v;
        f = 0;
        for (p = l.length; f < p; f++) d = l[f], E = d.object, d = d.buffer, E instanceof THREE.PointCloud && !E.customDepthMaterial || ((v = E.material instanceof THREE.MeshFaceMaterial ? E.material.materials[0] : E.material) && n.setMaterialFaces(E.material), 
        m = void 0 !== E.geometry.morphTargets && 0 < E.geometry.morphTargets.length && v.morphTargets, 
        v = E instanceof THREE.SkinnedMesh && v.skinning, m = E.customDepthMaterial ? E.customDepthMaterial : v ? m ? a : o : m ? i : r, 
        d instanceof THREE.BufferGeometry ? n.renderBufferDirect(h, u.__lights, null, m, d, E) : n.renderBuffer(h, u.__lights, null, m, d, E));
        m = u.__webglObjectsImmediate;
        f = 0;
        for (p = m.length; f < p; f++) d = m[f], E = d.object, E.visible && (E._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse, E.matrixWorld), 
        n.renderImmediateObject(h, u.__lights, null, r, E));
        f = n.getClearColor();
        p = n.getClearAlpha();
        t.clearColor(f.r, f.g, f.b, p);
        t.enable(t.BLEND);
    };
};

THREE.ShaderFlares = {
    lensFlareVertexTexture: {
        vertexShader: "uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
        fragmentShader: "uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"
    },
    lensFlare: {
        vertexShader: "uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
        fragmentShader: "precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"
    }
};

THREE.OBJLoader = function(e) {
    this.manager = e !== undefined ? e : THREE.DefaultLoadingManager;
};

THREE.OBJLoader.prototype = {
    constructor: THREE.OBJLoader,
    load: function(e, t, n, r) {
        var i = this;
        var o = new THREE.XHRLoader(i.manager);
        o.setCrossOrigin(this.crossOrigin);
        o.load(e, function(e) {
            t(i.parse(e));
        });
    },
    parse: function(e) {
        function t(e, t, n) {
            return new THREE.Vector3(parseFloat(e), parseFloat(t), parseFloat(n));
        }
        function n(e, t) {
            return new THREE.Vector2(parseFloat(e), parseFloat(t));
        }
        function r(e, t, n, r) {
            return new THREE.Face3(e, t, n, r);
        }
        var i = new THREE.Object3D();
        var o, a, s;
        function c(e) {
            e = parseInt(e);
            return e >= 0 ? e - 1 : e + d.length;
        }
        function l(e) {
            e = parseInt(e);
            return e >= 0 ? e - 1 : e + m.length;
        }
        function u(e) {
            e = parseInt(e);
            return e >= 0 ? e - 1 : e + E.length;
        }
        function h(e, t, n, i) {
            if (i === undefined) {
                o.faces.push(r(d[c(e)] - 1, d[c(t)] - 1, d[c(n)] - 1));
            } else {
                o.faces.push(r(d[c(e)] - 1, d[c(t)] - 1, d[c(n)] - 1, [ m[l(i[0])].clone(), m[l(i[1])].clone(), m[l(i[2])].clone() ]));
            }
        }
        function f(e, t, n) {
            o.faceVertexUvs[0].push([ E[u(e)].clone(), E[u(t)].clone(), E[u(n)].clone() ]);
        }
        function p(e, t, n) {
            if (e[3] === undefined) {
                h(e[0], e[1], e[2], n);
                if (t !== undefined && t.length > 0) {
                    f(t[0], t[1], t[2]);
                }
            } else {
                if (n !== undefined && n.length > 0) {
                    h(e[0], e[1], e[3], [ n[0], n[1], n[3] ]);
                    h(e[1], e[2], e[3], [ n[1], n[2], n[3] ]);
                } else {
                    h(e[0], e[1], e[3]);
                    h(e[1], e[2], e[3]);
                }
                if (t !== undefined && t.length > 0) {
                    f(t[0], t[1], t[3]);
                    f(t[1], t[2], t[3]);
                }
            }
        }
        if (/^o /gm.test(e) === false) {
            o = new THREE.Geometry();
            a = new THREE.MeshLambertMaterial();
            s = new THREE.Mesh(o, a);
            i.add(s);
        }
        var d = [];
        var m = [];
        var E = [];
        var v = /v( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/;
        var g = /vn( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/;
        var y = /vt( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/;
        var T = /f( +-?\d+)( +-?\d+)( +-?\d+)( +-?\d+)?/;
        var x = /f( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))?/;
        var R = /f( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))?/;
        var _ = /f( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))?/;
        e = e.replace(/\\\r\n/g, "");
        var b = e.split("\n");
        for (var w = 0; w < b.length; w++) {
            var H = b[w];
            H = H.trim();
            var S;
            if (H.length === 0 || H.charAt(0) === "#") {
                continue;
            } else if ((S = v.exec(H)) !== null) {
                d.push(o.vertices.push(t(S[1], S[2], S[3])));
            } else if ((S = g.exec(H)) !== null) {
                m.push(t(S[1], S[2], S[3]));
            } else if ((S = y.exec(H)) !== null) {
                E.push(n(S[1], S[2]));
            } else if ((S = T.exec(H)) !== null) {
                p([ S[1], S[2], S[3], S[4] ]);
            } else if ((S = x.exec(H)) !== null) {
                p([ S[2], S[5], S[8], S[11] ], [ S[3], S[6], S[9], S[12] ]);
            } else if ((S = R.exec(H)) !== null) {
                p([ S[2], S[6], S[10], S[14] ], [ S[3], S[7], S[11], S[15] ], [ S[4], S[8], S[12], S[16] ]);
            } else if ((S = _.exec(H)) !== null) {
                p([ S[2], S[5], S[8], S[11] ], [], [ S[3], S[6], S[9], S[12] ]);
            } else if (/^o /.test(H)) {
                o = new THREE.Geometry();
                a = new THREE.MeshLambertMaterial();
                s = new THREE.Mesh(o, a);
                s.name = H.substring(2).trim();
                i.add(s);
            } else if (/^g /.test(H)) {} else if (/^usemtl /.test(H)) {
                a.name = H.substring(7).trim();
            } else if (/^mtllib /.test(H)) {} else if (/^s /.test(H)) {} else {}
        }
        var M = i.children;
        for (var w = 0, C = M.length; w < C; w++) {
            var o = M[w].geometry;
            o.computeFaceNormals();
            o.computeBoundingSphere();
        }
        return i;
    }
};

!function(e, t) {
    "object" == typeof exports ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : e.Spinner = t();
}(this, function() {
    "use strict";
    function e(e, t) {
        var n, r = document.createElement(e || "div");
        for (n in t) r[n] = t[n];
        return r;
    }
    function t(e) {
        for (var t = 1, n = arguments.length; n > t; t++) e.appendChild(arguments[t]);
        return e;
    }
    function n(e, t, n, r) {
        var i = [ "opacity", t, ~~(100 * e), n, r ].join("-"), o = .01 + n / r * 100, a = Math.max(1 - (1 - e) / t * (100 - o), e), s = l.substring(0, l.indexOf("Animation")).toLowerCase(), c = s && "-" + s + "-" || "";
        return h[i] || (f.insertRule("@" + c + "keyframes " + i + "{0%{opacity:" + a + "}" + o + "%{opacity:" + e + "}" + (o + .01) + "%{opacity:1}" + (o + t) % 100 + "%{opacity:" + e + "}100%{opacity:" + a + "}}", f.cssRules.length), 
        h[i] = 1), i;
    }
    function r(e, t) {
        var n, r, i = e.style;
        for (t = t.charAt(0).toUpperCase() + t.slice(1), r = 0; r < u.length; r++) if (n = u[r] + t, 
        void 0 !== i[n]) return n;
        return void 0 !== i[t] ? t : void 0;
    }
    function i(e, t) {
        for (var n in t) e.style[r(e, n) || n] = t[n];
        return e;
    }
    function o(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];
            for (var r in n) void 0 === e[r] && (e[r] = n[r]);
        }
        return e;
    }
    function a(e, t) {
        return "string" == typeof e ? e : e[t % e.length];
    }
    function s(e) {
        this.opts = o(e || {}, s.defaults, p);
    }
    function c() {
        function n(t, n) {
            return e("<" + t + ' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">', n);
        }
        f.addRule(".spin-vml", "behavior:url(#default#VML)"), s.prototype.lines = function(e, r) {
            function o() {
                return i(n("group", {
                    coordsize: u + " " + u,
                    coordorigin: -l + " " + -l
                }), {
                    width: u,
                    height: u
                });
            }
            function s(e, s, c) {
                t(f, t(i(o(), {
                    rotation: 360 / r.lines * e + "deg",
                    left: ~~s
                }), t(i(n("roundrect", {
                    arcsize: r.corners
                }), {
                    width: l,
                    height: r.width,
                    left: r.radius,
                    top: -r.width >> 1,
                    filter: c
                }), n("fill", {
                    color: a(r.color, e),
                    opacity: r.opacity
                }), n("stroke", {
                    opacity: 0
                }))));
            }
            var c, l = r.length + r.width, u = 2 * l, h = 2 * -(r.width + r.length) + "px", f = i(o(), {
                position: "absolute",
                top: h,
                left: h
            });
            if (r.shadow) for (c = 1; c <= r.lines; c++) s(c, -2, "progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)");
            for (c = 1; c <= r.lines; c++) s(c);
            return t(e, f);
        }, s.prototype.opacity = function(e, t, n, r) {
            var i = e.firstChild;
            r = r.shadow && r.lines || 0, i && t + r < i.childNodes.length && (i = i.childNodes[t + r], 
            i = i && i.firstChild, i = i && i.firstChild, i && (i.opacity = n));
        };
    }
    var l, u = [ "webkit", "Moz", "ms", "O" ], h = {}, f = function() {
        var n = e("style", {
            type: "text/css"
        });
        return t(document.getElementsByTagName("head")[0], n), n.sheet || n.styleSheet;
    }(), p = {
        lines: 12,
        length: 7,
        width: 5,
        radius: 10,
        rotate: 0,
        corners: 1,
        color: "#000",
        direction: 1,
        speed: 1,
        trail: 100,
        opacity: .25,
        fps: 20,
        zIndex: 2e9,
        className: "spinner",
        top: "50%",
        left: "50%",
        position: "absolute"
    };
    s.defaults = {}, o(s.prototype, {
        spin: function(t) {
            this.stop();
            {
                var n = this, r = n.opts, o = n.el = i(e(0, {
                    className: r.className
                }), {
                    position: r.position,
                    width: 0,
                    zIndex: r.zIndex
                });
                r.radius + r.length + r.width;
            }
            if (i(o, {
                left: r.left,
                top: r.top
            }), t && t.insertBefore(o, t.firstChild || null), o.setAttribute("role", "progressbar"), 
            n.lines(o, n.opts), !l) {
                var a, s = 0, c = (r.lines - 1) * (1 - r.direction) / 2, u = r.fps, h = u / r.speed, f = (1 - r.opacity) / (h * r.trail / 100), p = h / r.lines;
                !function d() {
                    s++;
                    for (var e = 0; e < r.lines; e++) a = Math.max(1 - (s + (r.lines - e) * p) % h * f, r.opacity), 
                    n.opacity(o, e * r.direction + c, a, r);
                    n.timeout = n.el && setTimeout(d, ~~(1e3 / u));
                }();
            }
            return n;
        },
        stop: function() {
            var e = this.el;
            return e && (clearTimeout(this.timeout), e.parentNode && e.parentNode.removeChild(e), 
            this.el = void 0), this;
        },
        lines: function(r, o) {
            function s(t, n) {
                return i(e(), {
                    position: "absolute",
                    width: o.length + o.width + "px",
                    height: o.width + "px",
                    background: t,
                    boxShadow: n,
                    transformOrigin: "left",
                    transform: "rotate(" + ~~(360 / o.lines * u + o.rotate) + "deg) translate(" + o.radius + "px,0)",
                    borderRadius: (o.corners * o.width >> 1) + "px"
                });
            }
            for (var c, u = 0, h = (o.lines - 1) * (1 - o.direction) / 2; u < o.lines; u++) c = i(e(), {
                position: "absolute",
                top: 1 + ~(o.width / 2) + "px",
                transform: o.hwaccel ? "translate3d(0,0,0)" : "",
                opacity: o.opacity,
                animation: l && n(o.opacity, o.trail, h + u * o.direction, o.lines) + " " + 1 / o.speed + "s linear infinite"
            }), o.shadow && t(c, i(s("#000", "0 0 4px #000"), {
                top: "2px"
            })), t(r, t(c, s(a(o.color, u), "0 0 1px rgba(0,0,0,.1)")));
            return r;
        },
        opacity: function(e, t, n) {
            t < e.childNodes.length && (e.childNodes[t].style.opacity = n);
        }
    });
    var d = i(e("group"), {
        behavior: "url(#default#VML)"
    });
    return !r(d, "transform") && d.adj ? c() : l = r(d, "animation"), s;
});

(function($) {
    "use strict";
    function e(e) {
        var t = e.data("width"), n = e.data("height"), r = e.data("ratio"), i = e.data("youtube-id"), o = [ "16", "9" ], a = 0, s = e.data("parameters") || "";
        if (typeof t === "undefined" || typeof n === "undefined") {
            n = 0;
            t = "90%";
            o = r.split(":")[1] / r.split(":")[0] * 100;
            a = o + "%";
        }
        e.css({
            position: "relative",
            height: n,
            width: t,
            "padding-top": a,
            background: "url(//img.youtube.com/vi/" + i + "/hqdefault.jpg) center center no-repeat",
            cursor: "pointer",
            "background-size": "cover"
        }).html('<p id="lazyYT-title-' + i + '" class="lazyYT-title"></p><div class="lazyYT-button"></div>').addClass("lazyYT-image-loaded");
        $.getJSON("https://gdata.youtube.com/feeds/api/videos/" + i + "?v=2&alt=json", function(e) {
            $("#lazyYT-title-" + i).text(e.entry.title.$t);
        });
        e.on("click", function(r) {
            r.preventDefault();
            if (!e.hasClass("lazyYT-video-loaded") && e.hasClass("lazyYT-image-loaded")) {
                e.html('<iframe width="' + t + '" height="' + n + '" src="//www.youtube.com/embed/' + i + "?autoplay=1&" + s + '" style="position:absolute; top:0; left:0; width:100%; height:100%;" frameborder="0" allowfullscreen></iframe>').removeClass("lazyYT-image-loaded").addClass("lazyYT-video-loaded");
            }
        });
    }
    $.fn.lazyYT = function() {
        return this.each(function() {
            var t = $(this).css("cursor", "pointer");
            e(t);
        });
    };
})(jQuery);

(function() {
    "use strict";
    var e;
    e = angular.module("quotes", [ "ngRoute", "ngSanitize", "ng-contentful", "ngAnimate", "quoteControllers", "quoteDirectives", "quoteServices", "youtube-embed" ]);
    e.config([ "$routeProvider", "$locationProvider", "contentfulClientProvider", function(e, t, n) {
        e.when("/", {
            templateUrl: "partials/index.html",
            controller: "IndexCtrl"
        }).otherwise({
            redirectTo: "/"
        });
        n.setSpaceId("4xlwm16911zp");
        return n.setAccessToken("6fe66430d43042a7c28777422e4ae6f8edf5f58bf05d46a072e92a83bf432dab");
    } ]);
}).call(this);

(function() {
    "use strict";
    var e;
    e = angular.module("quoteControllers", []);
    e.controller("IndexCtrl", [ "$scope", "$window", "$http", "$sce", "contentfulClient", "webgl", function(e, t, n, r, i, o) {
        var a, s, c;
        a = new Showdown.converter();
        e.body = {};
        e.videoStopped = false;
        e.begin = true;
        e.player = {};
        e.background = {};
        e.webglenabled = o.checkWebGL();
        e.reload = function() {
            return window.location.reload();
        };
        e.playing = false;
        e.showInfo = false;
        c = function() {
            return $(".video-wrapper").removeClass("dontshow");
        };
        s = function() {
            return $(".video-wrapper").addClass("dontshow");
        };
        e.playerVars = {
            wmode: "opaque",
            controls: 0,
            autoplay: 0,
            modestbranding: 1,
            showinfo: 0,
            hd: 1,
            enablejsapi: 1
        };
        e.$on("youtube.player.ready", function(t, n) {
            return e.player = n;
        });
        e.$on("youtube.player.ended", function(t, n) {
            e.playing = false;
            e.showInfo = true;
            return s();
        });
        e.$watch("playing", function(e) {
            return console.log(e);
        });
        e.$watch("player", function(e) {});
        return i.entries({
            content_type: "3NIaEMnF5CcQOCUeUaGESy",
            include: 1
        }).then(function(t) {
            var n, i, o, s, l;
            e.data = t[0];
            e.body = e.data.fields;
            e.background = e.body.bodyImage.fields.file.url;
            e.$watch("background", function(e) {});
            l = e.body.individualQuote;
            for (o = 0, s = l.length; o < s; o++) {
                n = l[o];
                n.fields.artistText = a.makeHtml(n.fields.artistText);
            }
            i = e.body.individualQuote;
            e.current = i[0];
            e.launchVid = function(t) {
                var n;
                e.playing = true;
                c();
                n = t.fields.youtubeId;
                e.player.loadVideoById(n);
                e.player.playVideo();
                e.titleName = t.fields.titleName;
                return e.artistText = t.fields.artistText;
            };
            e.closeInfo = function() {
                return e.showInfo = false;
            };
            e.updateInfo = function(t) {
                return e.current = t;
            };
            return e.trust = function(e) {
                return r.trustAsHtml(e);
            };
        });
    } ]);
}).call(this);

(function() {
    "use strict";
    var e;
    e = angular.module("quoteDirectives", []);
    e.directive("lazy", function() {
        var e;
        e = function(e, t, n) {
            var r;
            r = n.videoid;
            t.data("youtube-id", r);
            return t.lazyYT();
        };
        return {
            link: e
        };
    });
    e.directive("slide", [ "$window", "$rootScope", function(e, t) {
        var n;
        n = function(n, r, i) {
            return r.bind("load", function(n) {
                var i, o, a, s;
                t.$broadcast("loaded");
                r.show();
                o = r.width();
                i = r.height();
                a = o / i;
                s = function() {
                    var t, n, i, o, s, c, l;
                    s = e.innerHeight;
                    c = e.innerWidth;
                    if (s < 700) {
                        s = 700;
                    }
                    r.height(s);
                    r.width(s * a);
                    l = $(".image-wrapper").width();
                    t = r.width() - l;
                    o = t / 2;
                    n = c * .2;
                    $(".panoram").css({
                        width: r.width() + "px",
                        height: r.height() + "px",
                        left: -o * 1.5 + "px"
                    });
                    r.bind("mousemove", function(e) {
                        return i(e);
                    });
                    return i = function(e) {
                        var t;
                        t = -e.clientX * 1.5;
                        return $(".panoram").css({
                            left: "" + t + "px"
                        });
                    };
                };
                $(window).bind("resize", function(e) {
                    return s();
                });
                return s();
            });
        };
        return {
            link: n
        };
    } ]);
    e.directive("spin", [ "$rootScope", function(e) {
        var t, n;
        n = document.getElementById("spinner");
        t = function(e, t, r) {
            var i, o;
            i = {
                lines: 13,
                color: "#fff"
            };
            o = new Spinner(i);
            return o.spin(n);
        };
        e.$on("loaded", function(e) {
            return n.remove();
        });
        return {
            link: t
        };
    } ]);
    e.directive("hoverPic", function() {
        var e, t;
        t = function(e) {
            var t, n;
            t = e.clientX * 2;
            n = e.clientY * 2;
            return $(".frame").css({
                backgroundPosition: "" + t + "px " + n + "px"
            });
        };
        e = function(e, n, r) {
            n.unbind("mouseenter");
            n.bind("mouseenter", function() {
                var e;
                e = r.img;
                $(".frame").css({
                    background: "url(" + e + ")"
                });
                return $(".image-wrapper").hide();
            });
            n.unbind("mouseleave");
            n.bind("mouseleave", function() {
                $(".frame").css({
                    background: "black"
                });
                return $(".image-wrapper").show();
            });
            return n.bind("mousemove", function(e) {
                return t(e);
            });
        };
        return {
            link: e
        };
    });
    e.directive("scene", [ "$window", function(e) {
        var t;
        t = function(t, n, r) {
            var i, o, a, s, c, l, u, h, f, p, d, m, E, v, g;
            a = {};
            m = {};
            o = {};
            d = {};
            p = {};
            c = 0;
            l = 0;
            v = e.innerWidth / 2;
            g = e.innerHeight / 2;
            E = function() {
                var e, t, n;
                e = document.createElement("canvas");
                n = false;
                try {
                    n = !!(e.getContext("webgl") || e.getContext("experimental-webgl"));
                } catch (r) {
                    t = r;
                    alert("no support");
                }
                return n;
            };
            E();
            s = function() {
                var t, n, r, i, s;
                a = document.getElementById("threed");
                o = new THREE.PerspectiveCamera(45, e.innerWidth / e.innerHeight, 1, 1e4);
                o.position.z = 200;
                o.position.x = -180;
                o.position.y = 100;
                d = new THREE.Scene();
                t = new THREE.AmbientLight(16777215);
                d.add(t);
                n = new THREE.DirectionalLight(16772829);
                n.position.set(100, -20, 1);
                d.add(n);
                i = new THREE.LoadingManager();
                i.onProgress = function(e, t, n) {
                    return console.log(e, t, n);
                };
                s = THREE.ImageUtils.loadTexture("img/color2.png");
                s.needsUpdate = true;
                r = new THREE.OBJLoader(i);
                r.load("obj/quotes.obj", function(e) {
                    e.traverse(function(e) {
                        if (e instanceof THREE.Mesh) {
                            return e.material.map = s;
                        }
                    });
                    e.position.y = 0;
                    e.position.x = -25;
                    return d.add(e);
                });
                p = new THREE.WebGLRenderer({
                    alpha: true,
                    antialiasing: true
                });
                p.setSize(e.innerWidth, e.innerHeight);
                a.appendChild(p.domElement);
                document.addEventListener("mousemove", u, false);
                return window.addEventListener("resize", h, false);
            };
            h = function() {
                v = window.innerWidth / 2;
                g = window.innerHeight / 2;
                o.aspect = e.innerWidth / window.innerHeight;
                o.updateProjectionMatrix();
                return p.setSize(e.innerWidth, window.innerHeight);
            };
            u = function(e) {
                c = (e.clientX - v) / 5;
                return l = (e.clientY - g) / 10;
            };
            i = function() {
                requestAnimationFrame(i);
                return f();
            };
            f = function() {
                o.position.x += (-c - o.position.x) * .1;
                o.position.y += (-l - o.position.y) * .1;
                o.lookAt(d.position);
                return p.render(d, o);
            };
            s();
            return i();
        };
        return {
            link: t
        };
    } ]);
}).call(this);

(function() {
    "use strict";
    var e;
    e = angular.module("quoteServices", []);
    e.factory("webgl", function() {
        var e;
        e = function() {
            var e, t, n;
            e = document.createElement("canvas");
            n = false;
            try {
                n = !!(e.getContext("webgl") || e.getContext("experimental-webgl"));
            } catch (r) {
                t = r;
            }
            return n;
        };
        return {
            checkWebGL: function() {
                return e();
            }
        };
    });
}).call(this);